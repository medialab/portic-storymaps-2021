{"version":3,"sources":["visualizations/PrincipalVisualizationPart3/ExtraversionObject.js","visualizations/PrincipalVisualizationPart3/renderObjectsFunctions.js","components/NetworkGraphChart/reducers.js","components/NetworkGraphChart/GraphContainer.js","contents/fr/footer.mdx","helpers/misc.js","helpers/hooks.js","components/TriangleChart/PortGroup.js","components/TriangleChart/TriangleChart.js","colorPalettes.js","contents/fr/introduction.mdx","contents/en/introduction.mdx","contents/fr/partie-1.mdx","contents/en/part-1.mdx","contents/fr/partie-2.mdx","contents/en/part-2-intro.mdx","contents/fr/partie-3.mdx","contents/en/part-3.mdx","contents/fr/a-propos.mdx","contents/en/about.mdx","contents/fr/references.mdx","contents/en/references.mdx","contents/en/tests.mdx","components/SvgChart/SvgChart.js","components/GeographicMapChart/index.js","components/NetworkGraphChart/index.js","components/DataProvider/index.js","components/TriangleChart/index.js","components/DataProvider/DataProvider.js","components/LineChart/LineChart.js","contents/fr/tests.mdx","components/BoatsIllustration/BoatsIllustration.js","components/BoatsIllustration/index.js","components/Caller/Caller.js","components/Caller/index.js","components/GeographicMapChart/ChoroplethLayer.js","components/GeographicMapChart/PointsLayer.js","components/GeographicMapChart/FlowsLayer.js","components/GeographicMapChart/CustomObjectLayer.js","components/GeographicMapChart/Button.js","components/GeographicMapChart/Input.js","components/GeographicMapChart/Legend.js","components/GeographicMapChart/GeographicMapChart.js","../ /^/.//.*$/ groupOptions: {} namespace object","visualizations/Test.js","components/DeclineChart/LongitudinalTradeChart.js","components/DeclineChart/ProductsDistributionChart.js","components/DeclineChart/index.js","components/DeclineChart/DeclineChart.js","visualizations/PrincipalVisualizationPart1.js","components/CircularAlluvialChart/CircularAlluvialChart.js","components/CircularAlluvialChart/utils.js","components/SliderRange/SliderRange.js","components/SliderRange/index.js","components/RadarPlot/AxisObject.js","components/RadarPlot/VisObject.js","components/RadarPlot/index.js","components/RadarPlot/RadarPlot.js","visualizations/PrincipalVisualizationPart2/RadarWrapper.js","visualizations/PrincipalVisualizationPart2/index.js","visualizations/PrincipalVisualizationPart2/PrincipalVisualizationPart2.js","visualizations/PrincipalVisualizationPart3/Step2.js","visualizations/PrincipalVisualizationPart3/index.js","visualizations/PrincipalVisualizationPart3/PrincipalVisualizationPart3.js","visualizations/IntroBureaux/IntroBureaux.js","visualizations/IntroBureaux/index.js","visualizations/HomeportFlows/HomeportFlows.js","components/TreemapChart/TreemapChart.js","visualizations/index.js","components/VisualizationController/VisualizationController.js","components/VisualizationController/index.js","components/VisualizationFocus/VisualizationFocus.js","components/VisualizationFocus/index.js","pages/ScrollyPage/ScrollyPage.js","pages/ScrollyPage/index.js","summary.js","pages/Home/BoatsContainer.js","pages/Home/HomeSummary.js","pages/Home/Home.js","pages/Home/index.js","pages/Atlas/Atlas.js","pages/Atlas/index.js","pages/StandaloneVisualization/index.js","pages/StandaloneVisualization/StandaloneVisualization.js","pages/PlainPage/index.js","pages/PlainPage/PlainPage.js","components/HeaderNav/HeaderNav.js","components/HeaderNav/index.js","components/Loader/Loader.js","components/Footer/index.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js","helpers/contexts.js","components/BarChart/HorizontalBarChart.js","components/BarChart/VerticalBarChart.js","components/BarChart/BarChart.js","components/BarChart/index.js","contents/fr/metadata.js","contents/en/metadata.js"],"names":["ExtraversionObject","navigoValues","metric1","metric2","toflitPct","transformGroup","inputCircleRadius","circleRadius","inputWidth","width","inputHeight","height","name","legendMode","isActive","isMinified","onClick","fixSvgDimension","useState","isInited","setIsInited","useEffect","setTimeout","ReactTooltip","rebuild","leftPath","rightPath","transform","useSpring","to","immediate","maxTriangleHeight","maxArea","area1","area2","leftTriangleHeight","Math","sqrt","rightTriangleHeight","start","end","PI","partialCircle","map","command","join","labelFontSize","parseInt","g","className","cx","undefined","d","stroke","colorsPalettes","generic","accent2","strokeWidth","fill","data-for","data-tip","toFixed","ui","colorAccentBackground","max","font-size","textAnchor","x","y","x1","y1","x2","y2","markerEnd","Step3Object","datum","projection","projectionTemplate","longitude","latitude","totalTonnage","parseFloat","cumulated_tonnage_out_region","cumulated_tonnage_in_region","type_of_object","navigoMetric1","navigoMetric2","inPercentage","totalValue","cumulated_exports_value_from_region","cumulated_exports_value_from_ext","noOverlapTransform","includes","isNaN","Step3Objects","data","customsOffices","ports","selectedBureau","setSelectedBureau","handleClick","visiblePorts","useMemo","filter","customs_office","portsSpaceStartY","portsSpaceHeight","portsSpaceWidth","portRowHeight","length","sort","a","b","yA","port","portIndex","initialCircleRadius","objectX","objectY","cy","r","style","dark","index","SmallMultiples","bureaux","unshift","margin","multiplesY","columnWidth","xObjectsStart","opacity","position","left","bottom","custom_office","id","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","orient","renderTriangles","atlasMode","TriangleChart","totalWidth","rowHeight","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","GraphContainer","graph","nodeColorVariable","nodeColor","nodeSizeVariable","nodeSize","labelDensity","nodeLabel","onCameraUpdate","cameraPosition","updateTimestamp","ratio","sizes","res","forEachNode","_node","attributes","push","size","sizeExtent","extent","extents","min","field","values","attr","uniq","palette","colors","generatePalette","i","forEach","option","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","usePrevious","previousNodeSize","previousNodeLabel","previousLabelDensity","nodeReducer","nodeSizeFactor","nodeSizeScale","key","renderedNode","color","v","createNodeReducer","edgeReducer","dontColorEdges","el1","el2","get","renderedEdge","smallerNode","Color","lighten","rgb","string","createEdgeReducer","container","useRef","renderer","setRenderer","getCamera","animate","needToRefresh","settings","labelGrid","cell","displayedLabels","Set","refresh","setContainer","useCallback","node","kill","newRenderer","Renderer","labelFont","camera","setState","getState","disable","on","state","current","ref","minHeight","minWidth","NetworkGraphChart","gexfString","spatialize","inputCameraPosition","angle","title","headerRef","headerHeight","getBoundingClientRect","setCameraPosition","find","prop","gexf","parse","Graph","forceAtlas2","inferSettings","assign","iterations","flex","cam","readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","level","children","frontMatter","palettes","metadata","fr","metadataFr","en","metadataEn","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","buildPageTitle","lang","currentMetadata","trimText","str","limit","words","split","output","slice","cartesian2Polar","distance","radians","atan2","polarToCartesian","theta","cos","sin","value","count","accent1","iwanthue","colorSpace","seed","clustering","num","abs","useInterval","callback","delay","savedCallback","setInterval","clearInterval","useDebounce","debouncedValue","setDebouncedValue","handler","clearTimeout","PortGroup","numberOfColumns","scaleX","scaleY","legendWidth","totalHeight","margins","fontSize","triangleWidth","nb_pointcalls_out","triangleHeight","mean_tonnage","xTransform","yTransform","markerRadius","staticTransform","cellCenterX","textStartY","triangleStartY","legendTextWidth","labelBgWidth","line","strokeDasharray","circle","marker-start","xmlns","transformOrigin","inputMargins","right","offset","stopColor","stop-opacity","xa","tonnageClasses","portsTreemaps","href","target","rel","step","highlight","minTonnage","SvgChart","GeographicMapChart","DataProvider","dataFilename","setData","loadingData","setLoadingData","dataURL","process","then","newData","extension","pop","csvParse","catch","err","backgroundData","visData","layers","type","renderObjects","colorPalettes","provinces","admiralties","label","backgroundFilename","markerColor","markerSize","showLabels","PASS_DURATION","Hull","bottomRightX","bottomLeftX","Sail","sailSpeed","randomFactor","random","minRightX","maxLeftX","maxRightX","step1","points","step2","loop","from","config","duration","polygon","Matt","secondWidth","Boat","hullHeightRatio","setHullHeightRatio","mattNumber","setMattNumber","matts","heightRatio","nOfMatts","round","newHullHeightRatio","boatWidth","matt","mattIndex","displace","Bird","boatHeight","containerHeight","dimension","moveSteps","steps","scale","MovingBoat","containerWidth","rightToLeft","startAt","birds","numberOfBirds","BoatsIllustration","useReducer","action","Object","entries","reduce","boat","payload","genId","createdAt","Date","getTime","createBoat","boats","updateBoats","timeout","now","Caller","visualizationId","useContext","VisualizationControlContext","activeVisualization","onBlockClick","onRegisterVisualization","onUnregisterVisualization","e","GeoPart","initialD","project","layer","currentD","animationProps","path","tooltip","properties","ChoroplethLayer","reverseColors","geoPath","console","info","features","colorValues","generatedPalette","PointGroup","onGroupMouseEnter","onGroupMouseLeave","displayLabel","area","rawSize","labelPosition","labelSize","zIndex","onMouseEnter","onMouseMove","onMouseLeave","displayMetric","labelsColor","StackedLabelGroup","thatIndex","stackedRowHeight","transformLabel","window","innerWidth","labelY","PointsLayer","hoveredIndex","setHoveredIndex","visibleMarkers","coordsMap","mark","grouped","sizeCoef","custom","areaRange","sizeScale","labelSizeScale","stackedLabelsTop","maxLabelFontSize","innerHeight","stackLabels","items","enter","leave","FlowGroup","arrowSize","inputXDep","xDep","inputYDep","yDep","inputXDest","xDest","inputYDest","yDest","inputStrokeWidth","footprint","labelDepTransform","labelDestTransform","arrowPath","fields","alwaysVisible","FlowsLayer","markerData","strokeWidthScale","flow","arrowSizeScale","copy","latitude_dep","longitude_dep","latitude_dest","longitude_dest","CustomObjectLayer","renderObject","Button","onMouseDown","isMouseDown","interval","log","onMouseUp","background","Input","inputValue","onBlur","setValue","onChange","Legend","hasSize","hasColors","colorModalities","modality","initialProjectionTemplate","inputProjectionConfig","projectionConfig","debug","withLegend","setScale","rotation","setRotation","translationX","setTranslationX","translationY","setTranslationY","centerX","setCenterX","centerY","setCenterY","setProjectionTemplate","defaultProjectionConfig","rotationDegree","geoEqualEarth","center","translate","placeHolder","val","layerIndex","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","all","keys","module","exports","Test","datasets","datasetName","JSON","stringify","prettifyValue","inted","finalStr","LongitudinalTradeChart","inputData","absoluteField","shareField","herfindhalField","wholeHeight","axisLeftTitle","axisRightTitle","startYear","endYear","fillGaps","barTooltipFn","cityName","highlightYears","colorScaleMessages","annotations","year","footerRef","setHeight","newHeight","offsetHeight","yearsExtent","yearsEnumerated","xBand","scaleBand","padding","herfindhalColorScale","scalePow","yearTicks","yAbsoluteScale","nice","top","yShareScale","rightYAxisValues","axisPropsFromTickScale","leftYAxisValue","marginLeft","maximum","minimum","marginRight","bandwidth","aStartYear","aEndYear","annotation","annotationIndex","patternUnits","replace","data-effect","data-html","data-class","data-place","next","initialEndYear","row","ProductsDistributionChart","allData","tradeData","partTreshold","barWidth","years","productTooltipFn","compareFrom","titleRef","svgRef","yearsRef","Array","hoveredProduct","setHoveredProduct","yearLabelHeight","finalData","lastYear","lastYearData","lastYearTotalValue","sum","partAcc","dataTillTreshold","sortBy","topProducts","product","aggregatedMiscProducts","dict","thisData","thisTotalValue","thisYearData","links","nextYear","nextData","thisYearTotalValue","nextYearTotalValue","thisYearOffset","datumIndex","otherHeight","otherOffset","thisHeight","otherDatum","nextYearScaleValue","height1","height2","svgOffset","parentNode","offsetTop","yearLinks","ref1","ref2","isHighlighted","yearIndex","flows","her","labelScale","element","maxWidth","backgroundColor","DeclineChart","productTradePartThreshold","rows","messages","franceOverviewTitle","tradeEvolutionTitle","top90PctTitle","partInPct","absoluteValue","herfindalLegendTitle","herfindal0","herfindal1","barTooltip","pct","city","herfindal","productTooltip","sevenYearsWar","austriaWar","usIndependance","laRochelleDiaspora","totalRows","renderRow","rowFlex","rowIndex","region","comparison","rowId","PrincipalVisualizationPart1","colorSchemes","colorScheme1","colorScheme2","colorScheme3","G","inputProps","Text","text","Line","Circle","Rect","rect","Path","CircularAlluvialChart","sumBy","filters","centerHorizontalLabels","displaceHorizontalLabels","tooltips","highlightedFlow","setHighlightedFlow","highlightedFilter","setHighlightedFilter","spec","stepsSpec","_id","stepIndex","stepData","groups","groupBy","valueAbs","actualValue","valuePart","sortAscending","nodes","displaceAbs","displacePart","newNodes","localDisplaceAbs","localDisplacePart","newNode","newFlow","relativeDisplaceAbs","relativeDisplacePart","nextStep","nextKey","nodeIndex","newFlows","flowIndex","nextVal","nextStepGroup","nextFlow","flow2","nextPosition","prepareAlluvialData","filtersTotal","colorScales","modalitiesMap","cur","fieldIndex","counter","smallestDimension","BAR_SIZE","BAR_WIDTH","HORIZONTAL_MARGIN","textScale","secondCircleRadius","thirdCircleRadius","HORIZONTAL_DISPLACE","VERTICAL_BAR_SIZE","stepScales","0","orientation","direction","displaceX","displaceY","displaceText","1","2","3","4","5","highlightedNode","s","highlightedNodeTotal","f","tooltipContent","fontWeight","initialDisplaceY","nodesSizeScale","displaceLabels","linkIndex","nextStepScales","nextNodesSizeScale","x3","y3","y4","x4","controlPoint1AX","controlPoint1AY","controlPoint1BX","controlPoint1BY","controlPoint2AX","controlPoint2AY","controlPoint2BX","controlPoint2BY","flow_type","partner","tContent","trim","nodeHeight","initialY","initialHeight","nodeWidth","actualHeight","labelHighlightPart","isFilteredIn","textRotate","initialLabelX","labelX","labelMain","labelSecondary","nodeHasHighlights","nodeIsHighlighted","flowX","flowY","flowWidth","flowHeight","Range","createSliderWithTooltip","Slider","SliderRange","allowCross","AxisObject","MARGIN","axisIndex","axisRankScale","axis","rawX1","rawY1","rawX2","rawY2","labelXDisplace","labelYDisplace","foreignObject","inputX","inputY","inputR","VisObject","axisIndexMap","radiusScale","xRaw","yRaw","joinedPoints","tooltipValues","sumOfParts","portionA","portion","fillOpacity","RadarPlot","wholeSize","Tooltip","aIndex","visCenter","visSize","meta","normalizeRadarValues","datas","destCaptions","maxValue","maxBy","hasOwnProperty","dkey","RadarWrapper","globalWidth","minified","navigoAgregation","maxTonnage","colorPalette","selectedBureaux","setSelectedBureaux","aggregationMethod","setAggregationMethod","tonnageFilterValues","setTonnageFilterValues","datasetMaximumTonnage","setDatasetMaximumTonnage","destination_radar","ferme_bureau","tonnage","bureauxList","uniqBy","filteredData","bureauxToKeep","cleanBureaux","radarData","bureauName","relevantData","preparedData","_","dest","rObj","prepareTravelData","reverse","bureau","newSelectedBureaux","has","delete","add","PrincipalVisualizationPart2","showOnlyToflit","sumToflitBy","alluvialFilters","toflit18titles","labels","Step2","paddingLeft","BarChart","layout","metrics_type","PrincipalVisualizationPart3","currentMapTemplate","setCurrentMapTemplate","gradientTransform","colorBackgroundBlue","customs_region","BureauBackground","radius","BureauLabel","labelOnRight","thatWidth","IntroBureaux","dimensions","renderBureaux","HomeportFlows","formatNestResults","input","isArray","TreemapChart","fieldsHierarchy","initialWidth","leaf","labelField","countField","headersHeight","setHeadersHeight","setLegendWidth","legendRef","root","nest","result","hierarchy","treemap","tile","treemapBinary","newHeadersHeight","newLegendWidth","leaves","x0","y0","rectWidth","rectHeight","labelText","VisualizationContainer","inputDimensions","DatasetsContext","relevantDatasets","viz","visualizationsList","datasetsIds","order","tickSpan","tickFormat","value_rel_per_direction","entity","autoSort","ascending","nb_pointcalls","country","nb_outs","shortname","homeport","category_2","thatPalette","VisualizationController","setDimensions","visProps","omit","bounds","onResize","contentRect","measureRef","VisualizationFocus","howDone","howRead","visualization","onClose","copyClicked","setCopyClicked","copyLink","linkCopied","stopPropagation","url","homepage","visualizationsMap","visualizations","ScrollyPage","ContentSync","sectionRef","focusOnViz","setFocusOnViz","visualizationIsFullScreen","setVisualizationIsFullScreen","setActiveVisualization","newState","setVisualizations","scrollY","useScrollYPosition","scrollTo","found","DISPLACE_Y","visualizationEntries","sectionDims","visY","Provider","behavior","params","finalParams","newVis","thatId","Helmet","summary","routes","titles","shortTitles","contents","contentsProcessed","Part1Fr","Part1En","Component","routeGroup","Part2IntroFr","Part2IntroEn","Part3Fr","Part3En","ReferencesFr","ReferencesEn","AboutFr","AboutEn","TestsFr","TestsEn","hide","BoatsContainer","HomeSummary","intro","atlas","chapter","item","itemIndex","route","navigator","userAgent","Home","match","introRef","inVis","setInVis","titleHTML","subtitle","newActiveVisualization","firstOneY","Infinity","dangerouslySetInnerHTML","__html","Atlas","history","useHistory","shownVisualization","visualizationIndex","pathname","src","alt","StandaloneVisualization","PlainPage","Content","contentsURL","fallback","colorText","colorBackground","HeaderNav","onLangChange","drawerIsOpen","setDrawerIsOpen","location","useLocation","pageType","paramsLang","liveScrollY","pageColorScale","screenHeight","fontColor","exact","inputRoute","Loader","percentsLoaded","Footer","LANGUAGES","App","setDatasets","loadingFraction","setLoadingFraction","datasetsNames","datasetIndex","reject","axios","onDownloadProgress","progressEvent","status","loaded","total","globalFraction","loadedData","tsvParse","error","newDatasets","renderRoute","ThatComponent","ln","otherLang","pathOtherLang","routeItem","React","lazy","component","Fragment","BASE_NAME","Wrapper","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","StrictMode","render","createContext","HorizontalBarChart","yTickFormat","yTickSpan","initialYDomain","yField","sortY","xTickFormat","xTickSpan","initialXDomain","fillXGaps","xField","sortX","sortYField","sortYAscending","sortYType","yAutoSort","sortXField","sortXAscending","sortXType","xValues","vizWidth","xDomain","bandsNb","xScale","xExtent","yDomain","bandWidth","yScale","yStackScale","xAxisValues","yAxisValues","valueIndex","thatHeight","thatY1","thatY2","thatX1","thatX2","multiplier","groupIndex","stackDisplaceY","thatX","thatY","thatColor","VerticalBarChart","fixedRowHeight","formatLabel","vizHeight","bandHeight","xStackScale","svgHeight","finalHeight","yModality","stackDisplaceX"],"mappings":"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","file":"static/js/main.91030c07.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport cx from 'classnames';\nimport colorsPalettes from '../../colorPalettes';\n\nimport partialCircle from 'svg-partial-circle';\nimport { max } from 'd3';\nimport ReactTooltip from 'react-tooltip';\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\nconst ExtraversionObject = ({\n  navigoValues: [metric1, metric2],\n  toflitPct,\n  transformGroup,\n  circleRadius: inputCircleRadius,\n  width: inputWidth,\n  height: inputHeight,\n  name,\n  legendMode,\n  isActive,\n  isMinified,\n  onClick,\n}) => {\n  const circleRadius = fixSvgDimension(inputCircleRadius);\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, []);\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  const { transform } = useSpring({\n    to: {\n      transform: transformGroup\n    },\n    immediate: !isInited\n  });\n\n\n  const maxTriangleHeight = (circleRadius) * 1.4;\n  // dimensionning triangles based on their area (and not triangle height)\n  // Area = (height * base) / 2;\n  const maxArea = maxTriangleHeight * (maxTriangleHeight) / 2;\n  const area1 = metric1 * maxArea;\n  const area2 = metric2 * maxArea;\n  const leftTriangleHeight = Math.sqrt(area1 * metric1);\n  const rightTriangleHeight = Math.sqrt(area2 * metric2);\n\n  let start = null\n  let end = null\n  let leftPath;\n  let rightPath;\n  if (toflitPct) {\n    // let transformGeo = {`translate(${x},${y})`} // ce serzit param qui se mmodifie en attribue de positionnement réparti en bas à droite si co sans coords\n\n    // calcul des angles de départ et d'arrivée de l'arc de cercle, en fonction des données\n    start = Math.PI / 2 + (toflitPct - 50) / 100 * Math.PI\n    end = Math.PI * 3 / 2 - (toflitPct - 50) / 100 * Math.PI\n\n    leftPath = partialCircle(\n      0, 0,         // center X and Y\n      circleRadius,              // radius\n      start,          // start angle in radians --> Math.PI / 4\n      end             // end angle in radians --> Math.PI * 7 / 4\n    )\n      .map((command) => command.join(' '))\n      .join(' ')\n\n    rightPath = partialCircle(\n      0, 0,             // center X and Y\n      circleRadius,                  // radius\n      start,              // start angle in radians --> Math.PI / 4\n      end - 2 * Math.PI   // end angle in radians --> Math.PI * 7 / 4\n    )\n      .map((command) => command.join(' '))\n      .join(' ')\n  }\n\n  let labelFontSize = parseInt(height * 0.013);\n  labelFontSize = labelFontSize > 8 ? labelFontSize : 8;\n  return (\n    <animated.g\n      className={cx('ExtraversionObject', { 'is-active': isActive, 'is-minified': isMinified })}\n      // transform={noOverlapTransform}\n      transform={transform}\n      onClick={() => typeof onClick === 'function' ? onClick(name) : undefined}\n    // { datum.longitude === 0 ? x=1 : null }\n    >\n\n      <>\n        {\n          toflitPct && leftPath != null ?\n            <>\n\n              <path\n                d={`${leftPath}\n                  `}\n                stroke={legendMode ? 'darkgrey' : colorsPalettes.generic.accent2}\n                strokeWidth={width * 0.005} // à ajuster en fonction de la largeur de l'écran\n                fill=\"transparent\"\n                data-for=\"geo-tooltip\"\n                data-tip={`${(100 - toflitPct ).toFixed(1)}% de valeur d'exports de produits fabriqués hors de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n              />\n\n              <path\n                d={`${rightPath}\n                  `}\n                stroke={legendMode ? 'grey' : colorsPalettes.ui.colorAccentBackground}\n                strokeWidth={width * 0.005} // à ajuster en fonction de la largeur de l'écran\n                fill=\"transparent\"\n                data-for=\"geo-tooltip\"\n                data-tip={`${(toflitPct).toFixed(1)}% de valeur d'exports de produits fabriqués dans la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n              />\n            </>\n            :\n            null\n        }\n        <path className='left-triangle'\n          fill={legendMode ? 'darkgrey' : colorsPalettes.generic.accent2}\n          d={`M ${0} ${-leftTriangleHeight / 2}\n            V ${leftTriangleHeight / 2}\n            L ${-leftTriangleHeight} ${0}\n            Z\n                `}\n                data-for=\"geo-tooltip\"\n                data-tip={`${(metric1 * 100 ).toFixed(1)}% du tonnage cumulé des voyages réalisés vers l'extérieur de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n        />\n\n        <path\n          className='right-triangle'\n          fill={legendMode ? 'grey' : colorsPalettes.ui.colorAccentBackground}\n          d={`M ${0} ${-rightTriangleHeight / 2}\n            L ${rightTriangleHeight} ${0}\n            L ${0} ${rightTriangleHeight / 2}\n            Z\n            `}\n            data-for=\"geo-tooltip\"\n            data-tip={`${(metric2 * 100 ).toFixed(1)}% du tonnage cumulé des voyages réalisés vers l'intérieur de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n        />\n        <g\n          transform={`translate(${parseInt(0)}, ${toflitPct ? parseInt(circleRadius) + 15 : max([leftTriangleHeight, rightTriangleHeight]) / 2 + 10})`}\n        >\n          <text\n            className='object-label'\n            font-size={labelFontSize}\n            textAnchor=\"middle\"\n          >\n            {name}\n          </text>\n        </g>\n      </>\n      {\n        legendMode ?\n          <g className=\"legend-container\">\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={-circleRadius * 3}\n              y={-circleRadius * 1.7}\n              className=\"top left\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des exports de produits fabriqués hors de la direction\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={-circleRadius * .95}\n              y1={-circleRadius * 1.5}\n              x2={-circleRadius * .5}\n              y2={-circleRadius * 1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={circleRadius * 1.2}\n              y={-circleRadius * 1.7}\n              className=\"top right\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des exports de produits fabriqués dans la direction\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={circleRadius * 1.15}\n              y1={-circleRadius * 1.5}\n              x2={circleRadius * .5}\n              y2={-circleRadius * 1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={-circleRadius * 3}\n              y={0}\n              className=\"bottom left\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des voyages hors direction (tonnage c.)\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={-circleRadius * 1.8}\n              y1={circleRadius * .2}\n              x2={-circleRadius * .3}\n              y2={circleRadius * .1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={circleRadius * 1.2}\n              y={0}\n              className=\"bottom right\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des voyages dans la direction (tonnage c.)\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={circleRadius * 2}\n              y1={circleRadius * .2}\n              x2={circleRadius * .3}\n              y2={circleRadius * .1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n\n          </g>\n          : null\n      }\n    </animated.g>);\n}\n\nexport default ExtraversionObject;","/*\nDOCUMENTATION : sommaires des fonctions\n\n- renderLabel (renderObject)\npositionner geographiquement des labels\n\n- renderStep3Object (renderObject)\ncréation d'un double triangle et d'un cercle autour (deux courbes de bézier), positionné géographiquement\n(objet associé à un bureau de ferme)\n\n- fonction renderStep3SmallMultiples (renderObjects)\ncréation des objets double triangle et cercles pour les small multiples de la viz 3.3, positionnés en bas à droite du SVG\n+ un objet de légende\n\n- renderTriangles (renderObjects)\ncréation des triangles pour la viz 3.1, reliés par une courbe pointillée à des points positionnés géographiquement\n+ un triangle de légende\n\n@TODO : compléter la fonction step3Object (ou créer une nouvelle fonction), pour gérer l'apparition des doubles triangles pour chaque port\n-  cette fonctionnalité est déjà prévue dans la fonction renderStep3Object (dans la boucle   if (datum.type_of_object === \"port\") { ...}) mais en l'état les objets ports sont positionnés géographiquement\n- il faudrait adapter pour positionner les objets ports en colonne, sur la gauche du SVG, et qu'ils aient par défaut une opacité à 0% sauf au hover de l'objet bureau des fermes correspondant => apparition\n\n*/\nimport { useMemo, useState } from 'react';\n\nimport colorsPalettes from '../../colorPalettes';\n\nimport ExtraversionObject from './ExtraversionObject';\n\nimport TriangleChart from '../../components/TriangleChart/TriangleChart';\nimport { fixSvgDimension } from '../../helpers/misc';\n\nexport function Label(datum, projection, { width }) { // à terme on pourrait mettre un objet \n\n  const [x, y] = projection([+datum.longitude, +datum.latitude])\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text size={width * 0.05}>{datum.label}</text>\n    </g>);\n}\n\nfunction Step3Object({\n  datum,\n  projection,\n  width: inputWidth,\n  height: inputHeight,\n  projectionTemplate,\n  isActive,\n  isMinified,\n  onClick\n}) { // à priori plus besoin de datum et de width qui sont déjà passés au composant CustomObjectLayer\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n\n  let circleRadius = width * 0.05;\n  const totalTonnage = parseFloat(datum.cumulated_tonnage_out_region) + parseFloat(datum.cumulated_tonnage_in_region)\n\n  if (datum.type_of_object === \"port\") {\n    // définition des coefficients de taille des triangles en 3 classes distinctes (pour l'instant la définition des classes est expérimentale)\n    // se gérerait bien avec un switch\n    if (totalTonnage < 1000) { // * 1000\n      circleRadius = width * 0.025\n    }\n    else {\n      if (totalTonnage > 5000) {\n        circleRadius = width * 0.075\n      }\n    }\n  }\n\n  const navigoMetric1 = parseFloat(datum.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n  const navigoMetric2 = parseFloat(datum.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n  let inPercentage = 0;\n  if (datum.type_of_object === \"customs_office\") {\n    const totalValue = parseFloat(datum.cumulated_exports_value_from_region) + parseFloat(datum.cumulated_exports_value_from_ext)\n    inPercentage = parseFloat(datum.cumulated_exports_value_from_region) / totalValue * 100\n    inPercentage = inPercentage === 100 ? 99.99 : inPercentage;\n  }\n\n  // handle overlap \n  let noOverlapTransform = `translate(${x},${y})` // mettre entre accolades ??\n  if (projectionTemplate.includes('Poitou')) {\n    if (datum.name === 'Tonnay-Charente') {\n      noOverlapTransform = `translate(${x + width * 0.15},${y})`\n    }\n    else if ((datum.name === 'Rochefort')) {\n      noOverlapTransform = `translate(${x + width * 0.04},${y - height * 0.0})`\n    }\n    else if ((datum.name === 'Marennes')) {\n      noOverlapTransform = `translate(${x - width * 0.03},${y + height * 0.05})`\n    }\n    else if ((datum.name === 'Marans')) {\n      noOverlapTransform = `translate(${x + width * 0.03},${y - height * 0.05})`\n    }\n    else if ((datum.name === 'Saint-Martin-de-Ré')) {\n      noOverlapTransform = `translate(${x - width * 0.06},${y})`\n    }\n    else if ((datum.name === `Les Sables-d'Olonne`)) {\n      noOverlapTransform = `translate(${x + width * 0.1},${y + height * 0.15})`\n    }\n  }\n  \n\n  const transformGroup = projectionTemplate === 'France' ? noOverlapTransform + ' scale(0.1)' : noOverlapTransform + ` scale(${isMinified ? 0.5 : 1})`;\n  return (\n    <ExtraversionObject\n      {\n      ...{\n        transformGroup,\n        navigoValues: [navigoMetric1, navigoMetric2],\n        toflitPct: !isNaN(inPercentage) ? inPercentage : 100,\n        circleRadius,\n        width,\n        height,\n        name: datum.name,\n        isActive,\n        isMinified,\n        onClick\n      }\n      }\n    />\n  )\n}\n\nexport function Step3Objects({\n  data: { customsOffices = [], ports = [] },\n  projection,\n  width: inputWidth,\n  height: inputHeight,\n  projectionTemplate\n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const [selectedBureau, setSelectedBureau] = useState(undefined);\n  const handleClick = (name) => {\n    if (name === selectedBureau) {\n      setSelectedBureau(undefined);\n    } else setSelectedBureau(name);\n  }\n\n  const visiblePorts = useMemo(() => {\n    if (selectedBureau) {\n      return ports.filter(d => d.customs_office === selectedBureau)\n    }\n    return [];\n  }, [selectedBureau, ports])\n\n  const partsSpaceStartX = 15;\n  const portsSpaceStartY = height * 0.18;\n  const portsSpaceHeight = height * 0.55;\n  const portsSpaceWidth = width * .35;\n\n  const portRowHeight = visiblePorts.length ?  portsSpaceHeight / visiblePorts.length : portsSpaceHeight;\n\n  return (\n    <g className=\"Step3Objects\">\n      {\n        selectedBureau ?\n          <g className=\"ports-details\">\n            <foreignObject\n              x={0}\n              y={0}\n              width={width * .4}\n              height={height / 2}\n              className=\"ports-details-title\"\n            >\n              <h5>Ports associés au bureau des fermes de {selectedBureau} ({visiblePorts.length})</h5>\n            </foreignObject>\n            <g\n              className=\"ports-space\"\n              transform={`translate(${partsSpaceStartX}, ${portsSpaceStartY})`}\n            >\n              {/* <rect\n                x={0}\n                y={0}\n                width={portsSpaceWidth}\n                height={portsSpaceHeight}\n                style={{ fill: 'red' }}\n              /> */}\n              {\n                visiblePorts\n                .sort((a, b) => {\n                  const [_xA, yA] = projection([+a.longitude, +a.latitude]);/* eslint no-unused-vars : 0 */\n                  const [_xB, yB] = projection([+b.longitude, +b.latitude]);/* eslint no-unused-vars : 0 */\n                  if (yA > yB) {\n                    return 1;\n                  }\n                  return -1;\n                })\n                .map((port, portIndex) => {\n                  const [x, y] = projection([+port.longitude, +port.latitude]);\n                  const initialCircleRadius = width * 0.05;\n                  let circleRadius = initialCircleRadius;\n                  const totalTonnage = parseFloat(port.cumulated_tonnage_out_region) + parseFloat(port.cumulated_tonnage_in_region)\n\n                  // définition des coefficients de taille des triangles en 3 classes distinctes (pour l'instant la définition des classes est expérimentale)\n                  // se gérerait bien avec un switch\n                  if (totalTonnage < 1000) { // * 1000\n                    circleRadius = width * 0.025\n                  }\n                  else {\n                    if (totalTonnage > 5000) {\n                      circleRadius = width * 0.075\n                    }\n                  }\n                  const navigoMetric1 = parseFloat(port.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n                  const navigoMetric2 = parseFloat(port.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n                  const objectX = portsSpaceWidth / 2 - initialCircleRadius * 2 + (visiblePorts.length > 5 ? portIndex % 2 === 0 ? 0 : initialCircleRadius * 2 : 0);\n                  const objectY = portRowHeight * portIndex;\n                  // const transformGroup = projectionTemplate === 'France' ? `translate(${x},${y})` + ' scale(0.1)' : `translate(${x},${y})` + ` scale(1)`;\n                  const transformGroup = `translate(${objectX}, ${objectY})`;\n                  return (\n                    <g className=\"port-group\" key={port.name}>\n                      <line\n                        x1={objectX}\n                        y1={objectY}\n                        x2={x - partsSpaceStartX}\n                        y2={y - portsSpaceStartY}\n                      />\n                      <circle\n                        cx={x - partsSpaceStartX}\n                        cy={y - portsSpaceStartY}\n                        r={width * 0.002}\n                        style={{ fill: colorsPalettes.generic.dark }}\n                        className=\"marker\"\n                      />\n                      <ExtraversionObject\n                        {\n                        ...{\n                          transformGroup,\n                          navigoValues: [navigoMetric1, navigoMetric2],\n                          circleRadius,\n                          width,\n                          height,\n                          name: port.name,\n                        }\n                        }\n                      />\n                    </g>\n                  )\n                })\n              }\n            </g>\n\n          </g>\n          : null\n      }\n      {\n        customsOffices.map((datum, index) => (\n          <Step3Object\n            key={datum.name}\n            {\n            ...{\n              datum,\n              projection,\n              width,\n              height,\n              projectionTemplate,\n              onClick: handleClick,\n              isActive: datum.name === selectedBureau,\n              isMinified: selectedBureau && datum.name !== selectedBureau\n            }\n            }\n          />\n        ))\n      }\n    </g>\n  )\n}\n\nexport function SmallMultiples({ \n  data, \n  width: inputWidth, \n  height: inputHeight, \n  projection \n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // could be parametered in props too\n  const bureaux = data.filter(({ name }) => name === 'Le Havre' || name === 'Nantes' || name === 'Bordeaux' || name === 'La Rochelle')\n    .sort((a, b) => {\n      if (a.cumulated_exports_value_from_region > b.cumulated_exports_value_from_region) {\n        return -1;\n      }\n      return 1;\n    })\n  const legendCustomOffice = {\n    name: 'Légende',\n    cumulated_tonnage_in_region: 60,\n    cumulated_tonnage_out_region: 60,\n    cumulated_exports_value_from_region: 50,\n    cumulated_exports_value_from_ext: 50,\n    legendMode: true\n  }\n  bureaux.unshift(legendCustomOffice)\n\n  const margin = 15;\n  let circleRadius = width * 0.05;\n  const multiplesY = height - circleRadius - margin * 2;\n\n  const legendFactor = 1;\n\n  const columnWidth = (circleRadius * 2 + margin);\n\n  const xObjectsStart = width * .4 // circleRadius * legendFactor + circleRadius + margin;\n\n  return (\n    <g className=\"small-multiples-and-legend-and-title\">\n      {/* <foreignObject\n        x={margin * 4}\n        y={multiplesY - circleRadius * 4}\n        width={circleRadius * 7}\n        height={height}\n        className=\"interaction-cta\"\n      >\n        <div>\n          cliquer sur un bureau des fermes pour voir le détail de ses ports\n        </div>\n      </foreignObject> */}\n      <rect\n        x={xObjectsStart + margin * 2}\n        y={multiplesY - circleRadius * 3}\n        width={width - xObjectsStart - margin * 4}\n        height={height - multiplesY + circleRadius * 3 - margin / 2}\n        style={{ fill: 'white' }}\n        opacity={0.5}\n      />\n      <foreignObject\n        x={xObjectsStart + circleRadius * 1.5}\n        y={multiplesY - circleRadius * 3}\n        width={(circleRadius * 2 + margin) * (bureaux.length - 1)}\n        height={height}\n      >\n        <div style={{ position: 'relative' }}>\n          <h5 className=\"visualization-title\" style={{ position: 'absolute', left: 0, bottom: 0 }}>\n            Comparaison avec les bureaux de fermes et ports dominants d'autres directions en 1787\n          </h5>\n        </div>\n      </foreignObject>\n      <g className=\"small-multiples\">\n        {\n          bureaux\n            .map((custom_office, index) => {\n              const totalTonnage = parseFloat(custom_office.cumulated_tonnage_out_region) + parseFloat(custom_office.cumulated_tonnage_in_region)\n\n              const navigoMetric1 = parseFloat(custom_office.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n              const navigoMetric2 = parseFloat(custom_office.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n\n              const totalValue = parseFloat(custom_office.cumulated_exports_value_from_region) + parseFloat(custom_office.cumulated_exports_value_from_ext)\n              const inPercentage = parseFloat(custom_office.cumulated_exports_value_from_region) / totalValue * 100\n\n              return custom_office.legendMode ?\n                (\n                  <ExtraversionObject\n                    {\n                    ...{\n                      transformGroup: `translate(${circleRadius * legendFactor * 4 + margin + index * (circleRadius * legendFactor + margin)}, ${multiplesY - (circleRadius * legendFactor - circleRadius)})`,\n                      navigoValues: [navigoMetric1, navigoMetric2],\n                      toflitPct: inPercentage,\n                      circleRadius: circleRadius * legendFactor,\n                      width,\n                      height,\n                      name: custom_office.name,\n                      legendMode: custom_office.legendMode\n                    }\n                    }\n                  />\n                )\n                : (\n                  <ExtraversionObject\n                    {\n                    ...{\n                      transformGroup: `translate(${xObjectsStart + index * columnWidth}, ${multiplesY})`,\n                      navigoValues: [navigoMetric1, navigoMetric2],\n                      toflitPct: inPercentage,\n                      circleRadius,\n                      width,\n                      height,\n                      name: custom_office.name,\n                      legendMode: custom_office.legendMode\n                    }\n                    }\n                  />\n                )\n            })\n        }\n\n      </g>\n      <defs>\n        <marker id=\"triangle-end\" viewBox=\"-10 0 10 10\"\n          refX=\"1\" refY=\"5\"\n          markerUnits=\"strokeWidth\"\n          markerWidth={width * 0.01}\n          markerHeight={width * 0.01}\n          orient=\"auto\">\n          <path d=\"M -10 0 L 0 5 L -10 10 Z\" fill=\"darkgrey\" />\n        </marker>\n      </defs>\n    </g>\n  );\n\n}\n\nexport function renderTriangles({ \n  data, \n  width: inputWidth, \n  height: inputHeight, \n  projection, \n  projectionTemplate, atlasMode \n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // console.log(\"data : layder.data \", data)\n  return (\n    <TriangleChart\n      data={data}\n      totalWidth={width} // @TODO : il faudrait réduire cette width \n      rowHeight={height * 0.3}\n      projection={projection}\n      projectionTemplate={projectionTemplate}\n      atlasMode={atlasMode}\n    />\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\n// import {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  // filters = [],\n  // filtersModeAnd\n}) {\n  \n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  \n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      ...attr,\n      x: isNaN(attr.x) || attr.x === undefined ? 0 : attr.x,\n      y: isNaN(attr.y) || attr.y === undefined ? 0 : attr.y\n    };\n\n\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      // console.log('color the attr', nodeColor.name, attr[nodeColor.name]);\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      // console.log('size attr', nodeSize.name, attr);\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    return renderedNode;\n  };\n\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  dontColorEdges,\n  edgesMap\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const smallerNode = sourceNodeSize < targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (smallerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = smallerNode.color || DEFAULT_NODE_COLOR;\n      } else {\n        renderedEdge.color =\n          nodeColor.palette[smallerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import React, { useCallback, useRef, useState, useEffect, useMemo } from 'react';\nimport gexf from 'graphology-gexf';\nimport forceAtlas2 from 'graphology-layout-forceatlas2';\nimport Graph from 'graphology';\nimport { WebGLRenderer as Renderer } from 'sigma';\nimport { scaleLinear } from 'd3-scale';\nimport { min, max, extent } from 'd3-array';\nimport { uniq } from 'lodash';\n// import get from 'axios';\n\nimport { createNodeReducer, createEdgeReducer } from './reducers';\nimport { generatePalette, usePrevious } from '../../helpers/misc';\n\n// import GraphControls from './GraphControls';\n\nimport './GraphContainer.scss';\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\n// function rescale(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedReset(renderer);\n// }\n\n// function zoomIn(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedZoom(renderer);\n// }\n\n// function zoomOut(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedUnzoom(renderer);\n// }\n\nfunction GraphContainer({\n  graph,\n  nodeColor: nodeColorVariable,\n  nodeSize: nodeSizeVariable,\n  labelDensity,\n  nodeLabel,\n  onCameraUpdate,\n  cameraPosition,\n  updateTimestamp,\n  width,\n  height,\n  ratio,\n}) {\n  let sizes = useMemo(() => {\n    const res = [];\n    graph.forEachNode((_node, attributes) => {\n      res.push(+(nodeSizeVariable ? attributes[nodeSizeVariable] : attributes.size));\n    })\n    return res;\n  }, [nodeSizeVariable, graph]);\n\n  const sizeExtent = extent(sizes);\n  const extents = {\n    nodeSize: {\n      min: sizeExtent[0],\n      max: sizeExtent[1]\n    }\n  }\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable) {\n\n      return {\n        min: min(sizeExtent),\n        max: max(sizeExtent),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable, graph])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable.field) {\n      let values = [];\n      graph.forEachNode((_node, attr) => {\n        values.push(attr[nodeColorVariable.field])\n      })\n      values = uniq(values);\n      let palette = {};\n      if (nodeColorVariable.palette) {\n        palette = nodeColorVariable.palette;\n      } else {\n        const colors = generatePalette(nodeColorVariable.field, values.length);\n        let i = 0;\n        values.forEach(option => {\n          palette[option] = colors[i];\n          i++;\n        });\n      }\n\n      return {\n        palette,\n        name: nodeColorVariable.field\n      }\n    } else return undefined;\n  }, [nodeColorVariable, graph])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n        m.set(edge, { sourceNode: sourceAttributes, targetNode: targetAttributes })\n      });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  // const previousSearchString = usePrevious(searchString);\n  // const previousDontColorEdges = usePrevious(dontColorEdges);\n  // const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n  });\n\n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    edgesMap\n  });\n\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n      const camera = renderer.getCamera();\n      // console.log('animate camera', camera);\n      camera.animate(cameraPosition);\n    }\n  }, [updateTimestamp]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousDontColorEdges !== dontColorEdges ||\n      previousNodeLabel !== nodeLabel\n      // previousSearchString !== searchString ||\n      // previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n  useEffect(() => {\n    if (renderer) {\n      renderer.refresh();\n    }\n  }, [width, height])\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n        const newRenderer = new Renderer(graph, node, { nodeReducer, edgeReducer });\n\n        newRenderer.settings.labelFont = 'IBM Plex Sans';\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        camera.setState({ ...camera.getState(), ratio: ratio || 1 });\n        camera.disable();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph]\n  );\n\n  return (\n    <div className=\"VisContainer GraphContainer\" >\n\n      <div ref={setContainer} style={{ width: '100%', height: '100%', minHeight: '10vh', minWidth: '1vw' }}></div>\n      {/*renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n        />\n      )*/}\n    </div>\n  );\n}\n\n\nexport default function NetworkGraphChart({\n  data: gexfString,\n  nodeColor,\n  nodeLabel,\n  nodeSize,\n  labelDensity = 0.5,\n  spatialize,\n  cameraPosition: inputCameraPosition = { x: 0.5, y: 0.5, angle: 0, ratio: 1 },\n  width = 0,\n  height,\n  ratio,\n  title\n}) {\n  const headerRef = useRef(null);\n  const headerHeight = useMemo(\n    () => headerRef.current ? headerRef.current.getBoundingClientRect().height : 0, [headerRef.current])\n\n  // useState renvoie un state et un seter qui permet de le modifier\n  const [cameraPosition, setCameraPosition] = useState(inputCameraPosition);\n\n  useEffect(() => {\n    if (['x', 'y', 'angle', 'ratio'].find(prop => inputCameraPosition[prop] !== cameraPosition[prop])) {\n      setCameraPosition(inputCameraPosition);\n    }\n  }, [inputCameraPosition])\n\n  const onCameraUpdate = cam => {\n    setCameraPosition(cam);\n  }\n  const graph = useMemo(() => {\n    const g = gexf.parse(Graph, gexfString);\n    if (spatialize) {\n      const settings = forceAtlas2.inferSettings(g);\n      // To directly assign the positions to the nodes:\n      forceAtlas2.assign(g, {\n        settings,\n        iterations: 50\n      });\n    }\n    return g;\n  }, [gexfString]);\n\n  if (!graph) {\n    return null;\n  }\n  return (\n    <div className=\"NetworkGraphChart\" style={{ \n      width: '100%', \n      height: height || '100%',\n    }}>\n      <div ref={headerRef} className=\"row visualization-title-container\">\n        {title ? <h5 className=\"visualization-title\">{title}</h5> : null}\n      </div>\n      <div style={{\n        position: 'relative',\n        flex: 1,\n        // top: headerHeight,\n        // background: 'red',\n        // height: height - headerHeight\n      }}>\n\n        <GraphContainer\n          {\n          ...{\n            graph,\n            cameraPosition,\n            nodeColor,\n            nodeSize,\n            labelDensity,\n            nodeLabel,\n            ratio,\n            onCameraUpdate,\n            width,\n            height: height - headerHeight\n          }\n          }\n        />\n      </div>\n    </div>\n  )\n}","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.54,\"time\":32400,\"words\":108}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"column\">\n      <h2 {...{\n        \"id\": \"le-programme-portic\"\n      }}>{`Le programme PORTIC`}</h2>\n      <p>{`Le programme ANR PORTIC se propose de croiser les données sur la navigation et sur la valeur du commerce étranger de la France à la veille de la Révolution française pour mieux saisir les dynamiques commerciales à l’œuvre. Pour ce faire, il offre des interfaces d’interrogation et de visualisation des données adaptées à des publics et des intérêts variés.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://anr.portic.fr/\"\n        }}>{`En savoir plus sur le programme PORTIC`}</a></p>\n    </div>\n    <div className=\"column\">\n      <p>{`Les contenus de ce site sont placés sous `}<a parentName=\"p\" {...{\n          \"href\": \"https://creativecommons.org/licenses/by-nc-sa/3.0/fr/\"\n        }}>{`licence libre creative commons CC-BY-SA-NC`}</a>{`.`}</p>\n      <p>{`Le code source de ce site est placé sous licence libre `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.gnu.org/licenses/agpl-3.0.fr.html\"\n        }}>{`AGPL-3.0`}</a>{`.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/medialab/portic-storymaps-2021/\"\n        }}>{`Accéder au code source de ce site`}</a></p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"le-programme-portic\",\n    level: 2,\n    title: \"Le programme PORTIC\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import { csvParse } from 'd3-dsv';\nimport get from 'axios';\nimport iwanthue from 'iwanthue';\nimport {useRef, useEffect} from 'react';\nimport metadataFr from '../contents/fr/metadata'\nimport metadataEn from '../contents/en/metadata'\n// import Graph from 'graphology-types';\nimport palettes from '../colorPalettes';\n\nconst {generic} = palettes;\n\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function buildPageTitle (title, lang = 'fr') {\n  const currentMetadata = metadata[lang] || metadataFr;\n  return `${title} | ${currentMetadata.title} | PORTIC`;\n}\n\nexport function trimText(str, limit = 30) {\n  if (str.length > limit) {\n    const words = str.split(' ');\n    let output = [words[0]];\n    let i = 1;\n    while (output.join(' ') < limit - 3 && i < words.length) {\n      output.push(words[i]);\n      i++;\n    }\n    output = output.join(' ');\n    return [output, words.slice(i).join(' ')];\n  }\n  return [str, undefined];\n}\n\nexport function cartesian2Polar(x, y){\n  const distance = Math.sqrt(x*x + y*y)\n  const radians = Math.atan2(y,x) //This takes y first\n  return { distance:distance, radians:radians }\n}\n\nexport const polarToCartesian = (r, theta) => [\n  r * Math.cos(theta),\n  r * Math.sin(theta)\n]\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return [generic.accent1, generic.accent2]\n  } else if (count === 3) {\n    return [generic.dark, generic.accent1, generic.accent2]\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}\n\n\nconst _filterData = (data, { startYear, endYear, year, params, ...rest }) => {\n  console.group('filters');\n  console.time('filters time');\n  console.log('input', data);\n  /* dans data on a un dict de type : \n  [   {year: \"1789\", customs_region: \"La Rochelle\", partner_simplification: \"Iles\", export_import: ”Import\", product_revolutionempire: \"...\", ...},\n      {year: \"1782\", customs_region: \"Bordeaux\", ...},\n      {...},\n      columns: [\"year\", \"customs_region\", ...]\n\n  ]\n  */\n  let filteredData = data.filter(row => {\n    let rowYear = row.year ? +row.year.split(\".\")[0] : undefined;\n    if (startYear && endYear) {\n      return rowYear >= +startYear && rowYear <= +endYear;\n      // @todo : quand on aura rajouté startYear et endYear pour\n      // la récupération de portic il s'agira de déduire ce year des données\n    } else if (year && rowYear) {\n      return year === +rowYear;\n    } else return true;\n  })\n  // console.log('1', filteredData);\n\n  filteredData = filteredData.filter(row => {\n    // pour chaque filtre (sauf filtre timespan et filtrage des colomnes) :\n    let isValid = true;\n    // key --> 'year', filter_value --> 1789\n    // kwargs obtenu sous forme de dict : --> { year: 1789, customs_region: 'La Rochelle' }\n\n    // kwargs semble être indiçable mais pas sur qu'on doive pas le mettre dans un format spécial pas comme python\n    // sinon suggestion : function.apply(obj, [args])\n\n    // ligne originale : je ne sais pas pourquoi on ne veut prendre en compte les filtres que pour les colonnes qui ne sont pas à garder dans le résultats (colonne données dans l'argument 'params' sous forme de liste)\n    // for (let key,filter_value in [param for param in kwargs.items() if param[0] not in ['params']]): \n    // console.log('rest', rest);\n    Object.entries(rest)\n      .some(([key, inputFilterValue]) => {\n        const rowValue = row[key];\n        let filterValue = inputFilterValue;\n        // console.log('filter value 1', filterValue);\n        // si la valeur est une liste : on caste en string ses membres\n        if (Array.isArray(filterValue)) {\n          filterValue = filterValue.map(x => x + ''); // caster en string\n        }\n        // sinon c'est un tableau à une valeur qu'on caste en string\n        else {\n          filterValue = [filterValue + ''];\n        }\n        // console.log('filter value final', filterValue);\n        // à partir de là, filter_value est une liste de strings\n\n        // si la ligne a un attribut qui fait partie des valeurs acceptées par le filtre => on examine les autres filtres \n        if (filterValue.length > 0 && !(rowValue.includes(filterValue))) {\n          isValid = false;\n          return true;\n        }\n        return false;\n      })\n\n    return isValid;\n  })\n\n  // console.log('2', filteredData);\n\n\n  const transformedData = filteredData.map(row => {\n    let rowFormated = {};\n\n    // on ne garde que les colonnes qui nous intéressent dans le résultat => \n    // console.log(\"params : \", params);\n    // console.log(\"typeof(params) !== 'undefined' : \", (typeof params !== 'undefined'));\n    // console.log(\"row : \", row);\n    // on ne passe jamais ni dans le if ni dans le else, je ne sais pas pourquoi \n    // if (typeof params !== 'undefined') {\n\n    // if (params &&\n    // ci-dessous : tester si objet vide\n    if (!!params && Object.keys(params).length) {\n      // console.log(\"we are selecting only those columns : \", params);\n      for (let [column, value] of Object.entries(row)) {\n        if (params.includes(column)) {\n          rowFormated[column] = value;\n        }\n      }\n    }\n    // de base c'était else { ... } et on passait jamais dedans apparemment du coup là c'est bizarre\n    // else if (typeof params !== 'undefined') {\n    else {\n      // rowFormated = {...row}; // différencier rowFormated et row (nouvelle ref en unpackant et copiant key / params de row) => en JS differencier input d'output\n      // console.log(\"rowFormated = \", row);\n    }\n    // console.log(\"après le if / else\");\n    return rowFormated;\n  })\n  // console.log('3', transformedData);\n  console.timeEnd('filters time');\n  console.groupEnd('filters');\n  return transformedData;\n}\n\n\nexport const getToflitFlowsByCsv = ({\n  startYear = null,\n  endYear = null,\n  year = null,\n  params = null,\n  ...rest // https://www.peterbe.com/plog/javascript-destructuring-like-python-kwargs-with-defaults ; \n  // \"standard\" JavaScript array : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\n}) => {\n  // méthode de gestion avec callback\n  // let result;\n  // trucAsynchrone\n  // .then(data => {\n  //     callback(null, data);\n  // })\n  // .catch(error => {\n  //     callback(error);\n  // })\n\n  // méthode de gestion avec promesse\n  // return new Promise((resolve, reject) => {\n  //     trucAsynchrone\n  //     .then(data => {\n  //         // faire des trucs avec data\n  //         resolve(data);\n  //     })\n  //     .catch(error => {\n  //         // faire des choses avec l'erreur\n  //         reject(error);\n  //     })\n  // })\n\n  // méthode async/await\n  // const result = await trucAsynchrone();\n  // return result;\n\n  /*\n  Synopsis : récupère les flux toflit18\n  --- \n  Paramètres :\n  * startYear : <int> # année de début\n  * endYear : <int> # année de fin\n  * params : <arr> # propriétés à renvoyer\n  * [tous les noms de colonne des flux] : <arr/string> valeurs à filtrer dans les flux (peut être une ou plusieurs valeurs)\n  */\n\n  return new Promise((resolve, reject) => {\n\n    // let results = []; // ça sert à quelque chose ?? pour moi c'est pas utilisé, sinon je ne devrais pas avoir l'erreur \"t.map is not a function\" \n    // => voir https://www.pluralsight.com/guides/typeerror-handling-in-react.js-for-map-function\n\n    let finalStartYear = startYear; // on ne modif pas params en JS\n    let finalEndYear = endYear;\n\n\n\n    // 1. Test de la validité des paramètres\n    if (startYear !== null && endYear === null) {\n      return reject(\"You must put an end year\");\n    } // pas sure pour les accolades\n    else if (endYear !== null && startYear === null) {\n      return reject(\"You must put a start year\");\n    }\n\n    if ((startYear !== null || endYear !== null) && year !== null) {\n      finalStartYear = null;\n      finalEndYear = null;\n    }\n\n    /* en l'état ça ne fonctionne pas */\n    const URL = `${process.env.PUBLIC_URL || 'localhost:3001'}/data/toflit18_flows_sprint.csv`;\n    // console.log(\"URL '${process.env.PUBLIC_URL}/data/toflit18_flows_sprint.csv' : \", URL)\n    get(URL) // get de axios\n      .then(({ data: csvString }) => {\n        // conversion en js (avec d3-dsv)\n        const newData = csvParse(csvString);\n        // faire des choses avec les résultats (filtres, ...)\n        const finalData = _filterData(newData, { startYear: finalStartYear, endYear: finalEndYear, year, params, ...rest });\n        // console.log(\"finalData : \", finalData);\n        resolve(finalData);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n\n  })\n\n}\n\nexport const getToflitFlowsByApi = ({\n  startYear = null,\n  endYear = null,\n  year = null,\n  params = null,\n  ...rest\n}) => {\n\n  return new Promise((resolve, reject) => {\n\n    let finalStartYear = startYear; // on ne modif pas params en JS\n    let finalEndYear = endYear;\n\n    // 1. Test de la validité des paramètres\n    if (startYear !== null && endYear === null) {\n      return reject(\"You must put an end year\");\n    } // pas sure pour les accolades\n    else if (endYear !== null && startYear === null) {\n      return reject(\"You must put a start year\");\n    }\n\n    if ((startYear !== null || endYear !== null) && year !== null) {\n      finalStartYear = null;\n      finalEndYear = null;\n    }\n\n    const URL = `http://data.portic.fr/api/flows/?date=${year}`;\n    console.log({ URL })\n    // équivalent à : const URL = 'http://data.portic.fr/api/flows/?date=' + year;\n    get(URL) // get de axios\n      // mixed content issue => comme l'API ne fournit pas d'accès HTTPS je me sentais un peu bloquée\n      .then(({ data: str }) => {\n        // conversion en js (avec d3-dsv)\n        // const newData = csvParse(csvString);\n        try {\n          const newData = JSON.parse(str);\n          // contraire : JSON.stringify()\n          // faire des choses avec les résultats (filtres, ...)\n          const finalData = _filterData(newData, { startYear: finalStartYear, endYear: finalEndYear, year, params, ...rest })\n          resolve(finalData);\n        } catch (e) {\n          reject(e);\n        }\n\n      })\n      .catch((err) => {\n        reject(err);\n      })\n\n  })\n\n}\n\nexport const fixSvgDimension = num => isNaN(num) ? 0 : Math.abs(+num)","import { useEffect, useRef, useState } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { animated, useSpring } from 'react-spring';\n\nimport colorsPalettes from '../../colorPalettes';\n\n\nconst PortGroup = ({\n  numberOfColumns,\n  port,\n  scaleX,\n  scaleY,\n  legendWidth,\n  columnWidth,\n  totalHeight,\n  totalWidth,\n  projection,\n  index,\n  margins,\n  rowHeight,\n  fontSize,\n  projectionTemplate\n}) => {\n\n\n  const triangleWidth = scaleX(+port.nb_pointcalls_out)\n  const triangleHeight = scaleY(+port.mean_tonnage)\n\n  const xIndex = index % numberOfColumns;\n  // const yIndex = (index - index % numberOfColumns) / numberOfColumns;\n  const xTransform = xIndex * columnWidth + margins.left // + (legendWidth + margins.left) * totalWidth;\n  const yTransform = totalHeight * 2.3;\n\n  // const [x, y] = projection([+port.longitude, +port.latitude]);\n  const [x, y] = projection([+port.longitude, +port.latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { transform, x1, y1, x2, y2, staticTransform, markerRadius } = useSpring({\n    to: {\n      transform: `translate(${x},${y})`,\n      x1: projectionTemplate === 'rotated Poitou' ? xTransform + columnWidth / 2 : x,\n      y1: projectionTemplate === 'rotated Poitou' ? yTransform + rowHeight / 7 : y,\n      // x1: projectionTemplate === 'rotated Poitou' ? xTransform + columnWidth / 2 : totalWidth * 0.1,\n      // y1: projectionTemplate === 'rotated Poitou' ? yTransform + rowHeight / 7 : index * (totalHeight / numberOfColumns),\n\n      markerRadius: projectionTemplate === 'rotated Poitou' ? totalHeight * 0.02 : 0,\n      // markerRadius: projectionTemplate === 'rotated Poitou' ? totalHeight * 0.02 : 1,\n      \n      // x1: xTransform + columnWidth / 2,\n      // y1: yTransform + rowHeight / 7,\n      x2: x,\n      y2: y,\n      staticTransform: projectionTemplate === 'rotated Poitou' ? `translate(${xTransform}, ${yTransform}) scale(1)` : `translate(${x},${y}) scale(${projectionTemplate === 'rotated Poitou' ? 1 : 0.1})`\n      // staticTransform: projectionTemplate === 'rotated Poitou' ? `translate(${xTransform}, ${yTransform}) scale(1)` : `translate(${totalWidth * 0.1},${index * (totalHeight / numberOfColumns)}) scale(${projectionTemplate === 'France' ? 0.2 : 1})`\n    },\n    immediate: !isInited\n  });\n\n  const cellCenterX = columnWidth / 2;\n  const cellCenterY = rowHeight / 2;\n  const textStartY = rowHeight / 7;\n  const triangleStartY = cellCenterY + textStartY / 2 - triangleHeight / 2;\n  const legendTextWidth= totalWidth * 0.08;\n\n  let labelBgWidth = fontSize * 12;\n  if (port.port.length <= 10) {\n    labelBgWidth = fontSize * 6;\n  } else if (port.port.length <= 12) {\n    labelBgWidth = fontSize * 7;\n  } else if (port.port.length <= 15) {\n    labelBgWidth = fontSize * 8;\n  } else if (port.port.length <= 18) {\n    labelBgWidth = fontSize * 10;\n  }\n\n  return (\n    <g className={cx('port-point-and-triangle', {'is-minified': projectionTemplate !== 'rotated Poitou'})}>\n\n      <animated.line\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke='grey'\n        strokeDasharray='2, 8'\n      />\n\n      <animated.g className='port-point' transform={transform}>\n        <animated.circle\n          cx={0}\n          cy={0}\n          r={markerRadius}\n          style={{ fill: colorsPalettes.generic.dark }}\n          className=\"marker\"\n        />\n      </animated.g>\n\n      <animated.g className='port-triangle'\n        // transform={`translate(${(index) * (columnWidth)}, ${height * .33 + (index%3)*(rowHeight)})`}\n        transform={staticTransform}\n      >\n        {/* <rect\n          x={0}\n          y={0}\n          width={columnWidth}\n          height={rowHeight}\n          style={{stroke: 'red'}}\n        /> */}\n\n        {/* <path class='vertical-line'\n          d={`M ${cellCenterX} ${(rowHeight - triangleHeight) / 1.2} \n              V ${rowHeight / 7}\n              `}\n        /> */}\n        <path className='vertical-line'\n          d={`M ${cellCenterX} ${textStartY} \n              V ${triangleStartY}\n              `}\n        />\n\n        <g transform={`translate(${cellCenterX}, ${triangleStartY})`}>\n\n          <path className='triangle'\n            d={`M ${-triangleWidth / 2} ${0} \n                L ${triangleWidth / 2} ${0}\n                L ${0} ${triangleHeight}\n                Z\n                `}\n            fill=\"url(#TriangleGradient)\"\n          />\n          {/* <circle\n            fill=\"red\"\n            r={2}\n            cx={-triangleWidth / 2}\n            cy={0}\n          />\n          <circle\n            fill=\"red\"\n            r={2}\n            cx={triangleWidth / 2}\n            cy={0}\n          />\n          <circle\n            fill=\"red\"\n            r={2}\n            cx={0}\n            cy={triangleHeight}\n          /> */}\n        </g>\n        <g className=\"local-legend\">\n          {/* horizontal line */}\n          <line\n            x1={cellCenterX - triangleWidth/2}\n            x2={cellCenterX + triangleWidth/2}\n            y1={triangleStartY - 3}\n            y2={triangleStartY - 3}\n            marker-start=\"url(#triangle-left)\" \n            markerEnd=\"url(#triangle-right)\"\n          />\n          {/* vertical line */}\n          <line\n            x1={cellCenterX - triangleWidth/2 - 3}\n            x2={cellCenterX - triangleWidth/2 - 3}\n            y1={triangleStartY}\n            y2={triangleStartY + triangleHeight}\n            marker-start=\"url(#triangle-left)\" \n            markerEnd=\"url(#triangle-right)\"\n          />\n          {/* pointing arrows */}\n          <path\n            d={`\n            M ${-(legendTextWidth* .2) - triangleWidth / 3} ${triangleStartY * .65}\n            Q ${cellCenterX - 10} ${triangleStartY * .65} ${cellCenterX - 2} ${triangleStartY - 5}\n            `}\n            markerEnd=\"url(#triangle-right)\"\n          />\n          <path\n            d={`\n            M ${-triangleHeight / 3 + 3} ${triangleStartY + triangleHeight * .6 + 7}\n            L ${cellCenterX - triangleWidth/2 - 3} ${triangleStartY + triangleHeight * .6 + 7}\n            `}\n            markerEnd=\"url(#triangle-right)\"\n          />\n          <foreignObject \n            y={triangleStartY / 2}\n            x={-legendTextWidth - triangleWidth / 3}\n            width={legendTextWidth}\n            height={rowHeight}\n          >\n            <span xmlns=\"http://www.w3.org/1999/xhtml\">\n             nombre de navires sortis du port en 1789 : <strong>{port.nb_pointcalls_out}</strong>\n            </span>\n          </foreignObject>\n          <foreignObject \n            x={-legendTextWidth - triangleWidth / 3}\n            y={triangleStartY + triangleHeight * .6}\n            width={totalWidth * 0.08}\n            height={rowHeight}\n          >\n            <span xmlns=\"http://www.w3.org/1999/xhtml\">\n              tonnage moyen des navires : <strong>{(+port.mean_tonnage || 0).toFixed(1)}</strong>\n            </span>\n          </foreignObject>\n          \n        </g>\n        <g className='label' transformOrigin=\"bottom left\" transform={`translate(${columnWidth / 2}, ${rowHeight / 7 - totalHeight * 0.025})`}>\n          <path\n            d={`M 0 ${-fontSize} L ${labelBgWidth} ${-fontSize} ${labelBgWidth - 5} ${(-fontSize + fontSize * 0.2) / 2} ${labelBgWidth} ${fontSize * 0.2} 0 ${fontSize * 0.2} Z`}\n            // d={`M 0 ${-fontSize} L ${port.port.length * fontSize * .64} ${-fontSize} ${port.port.length * fontSize * .64 - 5} ${(-fontSize + fontSize * 0.2) / 2} ${port.port.length * fontSize * .64} ${fontSize * 0.2} 0 ${fontSize * 0.2} Z`}\n            // x={0}\n            // y={-fontSize}\n            // height={fontSize * 1.2}\n            // width={port.port.length * fontSize * .65}\n            style={{ fill: colorsPalettes.generic.dark }}\n            transformOrigin=\"bottom left\"\n            transform=\"rotate (-45)\"\n          />\n          <text\n            transformOrigin=\"bottom left\"\n            transform=\"rotate (-45)\"\n            font-size={fontSize}\n            style={{ fill: 'white' }}\n            x={3}\n            y={0}\n            textAnchor=\"left\"\n          > {port.port} </text>\n        </g>\n\n      </animated.g>\n    </g>\n  )\n}\n\nexport default PortGroup;","/* DOCUMENTATION : API de ce TriangleChart\n\n  Principe :\n    Composant conçu spécifiquement pour les triangles de la viz 3.1, mais pourrait être décliné\n    -> permet de produire une série d'objets en SVG, qui se disposent dans une grille en fonction de la longueur du dataset, et les dimensions de cette grille sont paramètrables\n\n  Paramètres : \n    data : données à afficher sur la carte,\n    totalWidth : largeur totale du composant (1 objet de légende + grille d'objets) (par défaut à 1200 px)\n    legendWidth : largeur de la légende (par défaut à un dizième de la largeur totale)\n    margins : marges de gauche (entre l'objet de la légende et la grille) et de froite (entr la droite de la grille et l'extrémité droite de l'écran)\n    rowHeight : hauteur d'une ligne de la grille (par défaut à 200px)\n    projection : on passe en paramètre la projection de d3 geo pour pouvoir donner accès au positionnement géographique sur une carte (permet dans le cas de la viz 3.1 de lier les triangles au point de localisation géographique du port qu'ils représentent => point et triangle sont nesté dans un même objet, ce qui permet d'établir une courbe pointillée entre eux et gérer l'interaction avec des jeux d'opacité au hover)\n\n  Pistes d'amélioration : \n  - filtrer les objets à l'entrée ? (par exemple pour la viz 3.1 on pourrait choisir d'afficher le triangle associé à un port que si les dimensions dépassent un certain seuil) => cela permettrait d'alléger la carte, en affichant seulement les ports pour lesquels on a des données représentatives\n\n  @TODO : documenter ce component de maière standardisée\n  */\n\nimport { scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport cx from 'classnames';\n\nimport './TriangleChart.scss'\nimport colorsPalettes from '../../colorPalettes';\n\n// import TriangleLegend from './TriangleLegend';\nimport PortGroup from './PortGroup';\n\n\nconst TriangleChart = ({\n  data,\n  totalWidth = 1200,\n  legendWidth = 0.1,\n  margins: inputMargins,\n  rowHeight = 200,\n  projection,\n  projectionTemplate,\n  atlasMode\n}) => {\n\n  const margins = inputMargins ||  {\n    left: totalWidth * .1,\n    right: totalWidth * .1\n  }\n  // {\n  //   left: 0.0,\n  //   right: 0.09\n  // }\n  const numberOfColumns = data.length;\n  const columnWidth = (totalWidth - margins.left - margins.right) / (numberOfColumns) // (totalWidth * (1 - legendWidth - margins.left - margins.right)) / numberOfColumns; // (totalWidth) / (numberOfColumns + 4) //\n  const numberOfRows = data.length / numberOfColumns;\n  const totalHeight = numberOfRows * rowHeight;\n  const fontSize = totalHeight * 0.05;\n\n\n  // scaleLinear<Range = number, Output = Range, Unknown = never>(range?: Iterable<Range>): ScaleLinear<Range, Output, Unknown> (+1 overload)\n  const scaleX = scaleLinear().domain([\n    0,\n    max(\n      data.map((port) => { // data.map : boucle fonctionelle\n        // return +port[xVariable];\n        return +port.nb_pointcalls_out;\n      })\n    )\n    // ]).range([0, columnWidth * 5]); // @TODO : adapter pour permettre chevauchement => ne plus se limiter à la taille d'une colonne (+ centre de mon triangle à gérer)\n  ]).range([5, columnWidth * 5]); // @TODO : adapter pour permettre chevauchement => ne plus se limiter à la taille d'une colonne (+ centre de mon triangle à gérer)\n\n  const scaleY = scaleLinear().domain([\n    0,\n    max(\n      data.map((port) => {\n        return +port.mean_tonnage; // parseFloat(port.mean_tonnage);\n      })\n    )\n  ]).range([5, rowHeight * 0.85]); // pour l'instant j'ai mis le max de longueur à 85% de la hauteur du rectangle conteneur \n  // je pourrais faire  range([0, rowHeight - place occupée par le texte]\n\n  // const legendTriangleWidth = 35;\n  // const legendTriangleHeight = 60;\n\n  return (\n\n    <g className={cx(\"TriangleChart\", {'is-atlas-mode': atlasMode})}>\n\n      <defs>\n        <linearGradient id=\"TriangleGradient\" x2='0%' y2='100%'>\n          <stop offset=\"10%\" stopColor={`rgb(100,100,100)`} stop-opacity={0.6} />\n          <stop offset=\"100%\" stopColor={colorsPalettes.generic.dark} />\n          {/* <stop offset=\"20%\" stopColor={colorsPalettes.generic.dark} />\n          <stop offset=\"100%\" stopColor={colorsPalettes.generic.dark} stop-opacity={0.3} /> */}\n        </linearGradient>\n      </defs>\n      {/* <TriangleLegend\n        {\n        ...{\n          legendWidth,\n          totalWidth,\n          totalHeight,\n          legendTriangleWidth,\n          legendTriangleHeight,\n          rowHeight,\n          fontSize,\n        }\n        }\n      /> */}\n      <g className=\"triangles\">\n        {\n          // sorting groups regarding their projected projection on the horizontal axis (to avoid lines crossings)\n          data.sort((a, b) => {\n            const [xa] = projection([+a.longitude, +a.latitude]);\n            const [xb] = projection([+b.longitude, +b.latitude]);\n\n            if (xa > xb) {\n              return 1;\n            }\n            return -1;\n          })\n            .map((port, index) => {\n\n              return (\n                <PortGroup\n                  key={index}\n                  {\n                  ...{\n                    numberOfColumns,\n                    port,\n                    scaleX,\n                    scaleY,\n                    legendWidth,\n                    columnWidth,\n                    totalHeight,\n                    totalWidth,\n                    projection,\n                    index,\n                    margins,\n                    rowHeight,\n                    fontSize,\n                    projectionTemplate\n                  }\n                  }\n                />\n              )\n            })\n\n        }\n        <defs>\n            <marker id=\"triangle-left\" viewBox=\"0 0 10 10\"\n              refX=\"1\" refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth={legendWidth * totalWidth * 0.04} \n              markerHeight={rowHeight * 0.02}\n              orient=\"auto\">\n              <path d=\"M 10 0 L 0 5 L 10 10 Z\" fill=\"darkgrey\" />\n            </marker>\n            <marker id=\"triangle-right\" viewBox=\"-10 0 10 10\"\n              refX=\"1\" refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth={legendWidth * totalWidth * 0.04} \n              markerHeight={rowHeight * 0.024}\n              orient=\"auto\">\n              <path d=\"M -10 0 L 0 5 L -10 10 Z\" fill=\"darkgrey\" />\n            </marker>\n          </defs>\n      </g>\n\n    </g>\n  )\n\n}\n\nexport default TriangleChart;","\n\nconst colorsPalettes = {\n  'ui': {\n    'colorText': '#403d3d',\n    'colorAccent': '#34495e',\n    'colorAccentBackground': '#336d7c',\n    'colorBackgroundBlue': '#d3e5e5',\n    'colorBackground': '#ebebeb',\n  },\n  'generic':{\n    'dark': '#336D7C',// marine sombre\n    'light': '#E0E3E6',// gris clair\n    'accent1': '#00C4AF',// '#00FFC8',// vert d'eau\n    'accent2': '#FEA43B'// orange\n  },\n  'admiralties': {\n    'La Rochelle': '#41BEA3',\n    'Marennes': '#A7E6F9',\n    \"Sables d'Olonne\": '#668EDB'\n  },\n  'provinces':{\n    'Poitou': '#668EDB',\n    'Aunis': '#41BEA3',\n    'Saintonge': '#A7E6F9',\n    'Angoumois': '#514EEE'\n  },\n  'product': {\n    'sel': '#E0CB0E',\n    'eau-de-vie et vins divers': '#A07BEE',\n    'autres produits': '#72808D',\n    'produits coloniaux': '#FEA43B',\n      },\n  'partner': {\n    'Afrique': '#875E2E',\n    'Reste du monde (USA)': '#E0E3E6',\n    'Grande Bretagne': '#542AAD',\n    'Europe': '#A07BEE',\n    'Ports francs et petites îles': '#5439F9',\n    'Colonies': '#E5881A',\n    'Indéterminé supposé Europe': '#A07BEE'\n  },\n  'customs_office': {\n    'La Rochelle': '#41BEA3',\n    'Rochefort': '#349883',\n    'Saint-Martin-de-Ré': '#277262',\n    'Saint-Martin île de Ré': '#277262',\n    'Tonnay-Charente': '#5AD0F4',\n    'Marans': '#67CBB6',\n    \"Les Sables-d'Olonne\": '#668EDB',\n    \"Sables d'Olonne\": '#668EDB',\n    'Marennes': '#A7E6F9',\n    'Charente': '#A7E6F9',\n    'Alligre': '#349883',\n    \"Tous les bureaux\": \"grey\"\n  },\n  tonnageClasses: {\n    '100%': '#A07BEE',\n    '75% ou plus': '#41BEA3',\n    'moins de 75%': '#FEA43B',\n  },\n  portsTreemaps: {\n    'France (région PASA)': '#41BEA3',\n    'Indéterminé': 'rgb(240,240,240)',\n    'zone maritime': '#98a9d9',\n    'multi-Etat': '#a42e0d',\n    'France (hors région PASA)': '#FED63B',\n\n    'Hambourg': '#F7E0DE',\n    'Duché d\\'Oldenbourg': '#F3D1CE',\n    'Prusse': '#EFC1BD',\n    'Lubeck': '#E7A39C',\n    'Brême': '#EBB2AD',\n    'Mecklenbourg': '#E3938C',\n    'Duché de Mecklenbourg': '#bd6a62',\n    'Autriche': '#bd6a62',\n\n    'Grande-Bretagne': '#A07BEE',\n    'Provinces-Unies': '#2759e3',\n    'Danemark': '#8e7bee',\n\n    'Etats-Unis d\\'Amérique': '#EBB2AD',\n    'Pologne': '#804a45',\n    'Russie': '#804a45',\n    'Espagne': '#e35027',\n    'Portugal': '#e35027',\n  }\n}\n\nexport default colorsPalettes;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.96,\"time\":237600,\"words\":792}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <Caller id=\"intro-provinces\" mdxType=\"Caller\" />\n    <p>{`La France du dix-huitième siècle se caractérise par le fort dynamisme des ports et des hinterlands de la façade atlantique, stimulés par le commerce avec les Antilles et une demande européenne en biens de consommation orientée à la hausse. La guerre maritime qui commence en 1793 et qui se poursuit pendant plus de vingt ans, entraînant la perte définitive de Saint-Domingue en 1804 et de l’île de France (île Maurice) en 1815, sonne le glas de cette dynamique et déplace le centre de l’économie française vers l’intérieur. `}</p>\n    <p>{`L’étude de cas présentée ici s’intéresse à la navigation et au commerce maritime des côtes poitevines et charentaises à la veille de la Révolution. Cette aire possède un dense maillage portuaire, avec une quarantaine de ports en activité. Certains ne font que du cabotage micro-local, d’autres intègrent petit et grand cabotage, d’autres enfin s’adonnent également à une navigation de long-cours. Cette région se prête donc particulièrement à une étude portant sur l’articulation entre les différentes échelles du commerce maritime à l’aube de la Révolution. `}</p>\n    <Caller id=\"intro-ports\" mdxType=\"Caller\" />\n    <p>{`Nous nous proposons de reconstituer l’histoire maritime et commerciale de la région à partir de deux sources historiques. D’une part, nous disposons de traces administratives de la navigation maritime grâce aux redevances qui pèsent sur celle-ci sous l’Ancien Régime. Les registres des congés répertorient les navires à leur départ d’un port et le montant dû, qui varie le plus souvent selon leur tonnage et leur destination. Ces registres, rédigés par les greffiers de l’amirauté locale, ont été numérisés et structurés sous la forme d’une base de données appelée `}<a href=\"http://navigocorpus.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`Navigocorpus`}</a>{`. Dans cette dernière, on compte entre autres plus de 32 000 congés pour l’année 1787 pour l’ensemble des ports français, et quelque 6900 congés pour 1789 relatifs à la région étudiée.`}</p>\n    <p>{`Les registres des congés nous permettent de repérer les dates de départ des bâtiments, ainsi que diverses informations relatives à l’objet de leur voyage, leur tonnage, leur capitaine, etc.. Ces données ne sont cependant pas dénuées d’incertitude : l’itinéraire déclaré par les capitaines de navires au moment de la sortie de port ne correspond pas nécessairement au voyage effectif qui l’a suivi. Les congés permettent toutefois une bonne mesure des trafics de la région de La Rochelle, y compris à toute petite échelle, tout en demandant une attention fine à la dimension d’incertitude inhérente à la source mobilisée.`}</p>\n    <Caller id=\"intro-bureaux\" mdxType=\"Caller\" />\n    <p>{`D’autre part, nous disposons de traces administratives relatives au commerce général de la région étudiée. La base de données `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/home\" target=\"blank\" rel=\"noopener noreferrer\">{`Toflit18`}</a>{` se fonde sur la numérisation des documents du Bureau de la balance du commerce de 1716 à 1821. Ces documents ont été produits grâce aux services des Fermes : chaque bureau des Fermes enregistrait localement les états de sortie et d’entrée des marchandises entre la France et l’étranger. Plus de 550 000 flux de sortie / entrée ont été documentés dans la base de données Toflit18.`}</p>\n    <p>{`Grâce aux données de la base Toflit18, nous sommes en mesure de lister les exports et imports entre les différents bureaux de ferme de la région et les partenaires étrangers du royaume de France. Les informations que l’on peut extraire de ces flux sont, entre autres, le nom du produit échangé, la quantité, la valeur, le partenaire commercial, et l’entité administrative ayant enregistré le flux au niveau local. En 1789, elles précisent en outre, sauf pour le commerce de réexportation des denrées coloniales, l’origine du produit commercialisé (ville ou province française, ou État étranger). Elles fournissent donc des informations complémentaires à celles données par les sources relatives à la navigation.`}</p>\n    <div className=\"centered-part\"><div className=\"centered-part-contents\">\n        <Caller mdxType=\"Caller\" />\n        <p>{`Le croisement entre congés de navigation et données fiscales de la Ferme rendu possible par les bases de données Toflit18 et Navigocorpus nous permet de saisir le commerce local, national et international, de préciser les flux et leur valeur pour ce qui est du commerce international, et d’explorer les relations et l’articulation entre les différents trafics de cette région.`}</p>\n        <p>{`La présente étude de cas décrit en trois temps l’histoire de la région de La Rochelle à l’aube de la Révolution française. D’abord, nous constatons la relative perte d’importance et de diversité commerciale de la région à la suite de la perte du Canada par le royaume de France durant la guerre de Sept Ans. Nous proposons ensuite une analyse détaillée de la restructuration de la région en relation avec cet événement, selon des filières spécialisées qui associent des ports particuliers avec le commerce de produits spécifiques. Nous démontrons enfin que, bien que resté dominant dans sa région, le port de la Rochelle a cessé de structurer la région de Poitou-Aunis-Saintonge au profit d’un réseau d’échange plus diversifié.`}</p>\n        <hr></hr>\n      </div></div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Todo intro en`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.515,\"time\":330900,\"words\":1103}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-1-le-déclin-de-la-région-de-la-rochelle-suite-à-la-perte-du-canada\"\n    }}>{`Partie 1. Le déclin de la région de La Rochelle suite à la perte du Canada`}</h1>\n    <Caller id=\"viz-principale-partie-1\" step={1} mdxType=\"Caller\" />\n    <p>{`Au dix-huitième siècle, la France a pleinement profité du développement des relations économiques entre l’Afrique, l’Amérique et l’Europe. L’ “Atlantique français” reposant sur la traite des Africains et leur exploitation dans les Îles françaises (Antilles et Mascareignes) a connu son apogée juste avant la révolte des esclaves de Saint-Domingue en août 1791 et le début de la guerre maritime avec l’Angleterre en février 1793. L’ancienne région Poitou-Charente, correspondant approximativement aux généralités de Poitou, Aunis, Saintonge et Angoumois (PASA), avait une tradition maritime ancienne et était bien située pour bénéficier de cette phase de prospérité. `}</p>\n    <Caller id=\"viz-principale-partie-1\" step={2} mdxType=\"Caller\" />\n    <p>{`L’examen du commerce avec les pays étrangers et les colonies de la direction des Fermes de La Rochelle, qui était leur façade maritime, montre toutefois un dynamisme limité. Il y a bien eu croissance du commerce, mais cette croissance a été plus lente que celle des autres grands ports du royaume. Cela s’explique en grande partie par les relations privilégiées de la direction de la Rochelle avec le Canada. D’une part, celui-ci se développe beaucoup moins vite que les Antilles, et la région souffre de ce manque de dynamisme durant la première moitié du siècle. D’autre part, le Canada est cédé aux Anglais lors du traité de Paris qui clôt la guerre de Sept Ans en 1763. Québec avait déjà été pris en 1759. Cette perte est sévère pour la région dont le commerce entame alors un recul relatif très net. `}</p>\n    <Caller id=\"partie-1-evolution-de-la-part-des-echanges-de-la-rochelle-au-xviiie\" mdxType=\"Caller\" />\n    <p>{`Après une année exceptionnelle en 1747, qui s’explique par l’organisation de convois transatlantiques au départ de La Rochelle escortés par la Marine pour échapper aux prédations britanniques, la direction de La Rochelle effectue 4,6% du total du commerce français en 1750. En 1789 sa part ne représente plus que 2,2%.`}</p>\n    <Caller id=\"viz-principale-partie-1\" step={3} mdxType=\"Caller\" />\n    <p>{`La trajectoire de la région de la Rochelle contraste avec celles de Bordeaux et de Nantes. Bordeaux, notamment, est beaucoup plus dynamique que La Rochelle et sa part du commerce français ne cesse d’augmenter jusqu’en 1789.`}</p>\n    <p>{`Le recul de La Rochelle n’est pas que quantitatif. En 1750, les données de la direction des Fermes de La Rochelle, chargée de la collecte des droits sur le commerce extérieur et colonial, montrent que cette partie du territoire commerce 21% des types de biens échangés par la France (645 sur 3055, après `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/classification/browser?kind%3Dproduct%26selected%3Dproduct_orthographic%26selectedParent%3Dproduct_source\" target=\"blank\" rel=\"noopener noreferrer\">{`uniformisation des variations orthographiques`}</a>{`). En 1789, elle n’en commerce plus que 7% (248/3565). Cette forte réduction de la typologie des biens commercialisés s’observe à la fois pour les exportations et pour les importations. À un niveau plus agrégé de typologie des produits, parmi les 150 secteurs de la `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/classification/browser?kind%3Dproduct%26selected%3Dproduct_revolutionempire%26selectedParent%3Dproduct_simplification\" target=\"blank\" rel=\"noopener noreferrer\">{`classification ”Révolution et Empire”, utilisée dans le cadre du programme ANR Toflit18`}</a>{`, La Rochelle en commerce 121 en 1750, mais seulement 88 en 1789.`}</p>\n    <p>{`Les exportations sont donc beaucoup plus diversifiées en 1750 qu’en 1789. L’indice de concentration (Herfindhal) est de 0,1 en 1750 et 0,24 en 1789. Un bien pour lequel il n’y a pas beaucoup de concurrence nationale (les eaux-de-vie) et deux denrées coloniales réexportées (le café et le sucre) dominent en 1789 les exportations. Les toiles de coton, souvent réexportées en direction de l’Afrique, viennent en quatrième place, suivies du sel (dont la valeur est faible par rapport au tonnage qu’il mobilise, car c’est une marchandise très pondéreuse). En 1750, la mercerie et les étoffes de laine font partie des cinq principales exportations (avec l’indigo, les eaux-de-vie et le sucre : le sel est en 14e position). La direction des Fermes de La Rochelle s’est donc spécialisée dans les produits agricoles et les réexportations au dépens des biens manufacturés de la région. Ce constat négatif est toutefois nuancé par l’intensité capitalistique de la production d’eaux-de-vie qui la rapproche des biens manufacturés.`}</p>\n    <p>{`Nous ne connaissons pas la destination des réexportations coloniales en 1789. En les excluant, on constate que la concentration des marchés de la direction des Fermes de La Rochelle est la même en 1750 et en 1789 (entre 0,41 et 0,44), mais que l’Angleterre a pris la place de l’Amérique (terme qui désigne ici essentiellement les Antilles françaises). Pour aller vite, on pourrait résumer en disant que la direction des Fermes de La Rochelle n’exporte plus des biens différenciés vers le Canada, mais essentiellement des eaux-de-vie vers l’Angleterre.`}</p>\n    <Caller id=\"partie-1-produits-importants-pour-la-rochelle\" mdxType=\"Caller\" />\n    <p>{`Les données de la navigation ne nous permettent pas d’aller beaucoup plus loin dans l’analyse du déclin de cette région: d’une part, car n’avons le détail des sorties que pour la fin de l’Ancien Régime, ce qui empêche une analyse diachronique. D’autre part, car les données collectées pour 1789 n’apportent que des informations limitées pour ce qui est des produits transportés: les congés du port de La Rochelle, par exemple, ne mentionnent pas la nature de la cargaison, alors que dans les autres ports de la région le greffier se limite le plus souvent à noter seulement l’article principal qui constitue la cargaison. Les registres des congés indiquent, toutefois, les destinations de chaque navire sorti et cette donnée permettra de constater un relatif éclatement des marchés de cette région. `}</p>\n    <p>{`Visualisation des ports d’attache des navires en direction de l’étranger :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`souligner que complexe La Rochelle/Rochefort domine car forts tonnages pour activités négrière et coloniale`}</li>\n    </ul>\n    <Caller id=\"partie-1-ports-dattache-vers-etranger\" mdxType=\"Caller\" />\n    <p>{`Visualisation des ports d’attache de tous les navires partis de la région en 1789 :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`micro cabotage et cabotage très actifs par flottes de petits ports de la région`}</li>\n      <li parentName=\"ul\">{`souligner rôle important des ports mineurs du fleuve Charente (ex: Port d’Envaux, Taillebourg) pour les services de transport`}</li>\n    </ul>\n    <Caller id=\"partie-1-ports-dattache\" mdxType=\"Caller\" />\n    <p>{`Visualisation des destinations des ports à l’étranger partis de la région en 1789 : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`commerce de la mer du Nord + Baltique prépondérant (=sel + eau-de-vie + reeport coloniaux)`}</li>\n    </ul>\n    <Caller id=\"partie-1-ports-destinations\" mdxType=\"Caller\" />\n    <p>{`Sans que l’on puisse affirmer qu’il s’agit d’une nouveauté, la marginalisation de la région vers la fin de l’Ancien Régime est confirmée par son manque de capacité à assurer ses propres trafics. La navigation avec l’étranger est assurée, à 90%, par des pavillons étrangers ou extérieurs à la région étudiée. Il s’agit, pour l’essentiel, des pavillons britannique et nord-européens.`}</p>\n    <Caller id=\"partie-1-pays-port-d-attache\" mdxType=\"Caller\" />\n    <p>{`Même si on prend en compte la part de navigation sous pavillon français assurée par des navires de la région étudiée, elle est en effet inférieure à celle de la plupart des autres provinces françaises: en 1787, les ports de l’Aunis-Saintonge-Poitou assurent 51.6% du tonnage qu’ils expédient, contre 84.3% pour la Bretagne ou 58,7% pour la Guyenne.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 1 intro`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"20 min read\",\"minutes\":19.09,\"time\":1145400,\"words\":3818}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-2-une-forte-spécialisation-portuaire--le-cas-de-la-traite-négrière-du-commerce-du-sel-et-de-leau-de-vie\"\n    }}>{`Partie 2. Une forte spécialisation portuaire : le cas de la traite négrière, du commerce du sel et de l’eau-de-vie`}</h1>\n    <Caller id=\"viz-principale-partie-2\" step={1} highlight=\"toflit18\" filter=\"aucun\" bureaux=\"tous,La Rochelle,Rochefort,Saint-Martin-de-Ré,Les Sables-d'Olonne,Marennes,Charente,Marans,Tonnay-Charente\" mdxType=\"Caller\" />\n    <a name=\"t.debac4287c4df172e4a318a0ae0ac8abdbd8b83a\"></a><a name=\"t.0\"></a>\n    <p>{`Mode d’emploi pour l’intégration de la visualisation principale de la partie 2 avec le texte (cet encadré de “tutoriel” devra être enlevé à terme) :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`comme partout ailleurs, une ligne qui commence par `}{`<`}{`Caller signale au site qu’il doit afficher une visualisation à côté du texte qui suit`}</li>\n      <li parentName=\"ul\">{`la partie id=”viz-principale-partie-2” ne doit pas être touchée, elle indique la visualisation à afficher`}</li>\n      <li parentName=\"ul\">{`le morceaux highlight=”xxx” représente la visualisation à mettre en avant. Si elle est égale à “toflit18”, le graphique toflit18 sera mis en gros et le graphique navigo en plus petit et vice-versa si elle égale à “navigo”`}</li>\n      <li parentName=\"ul\">{`le morceau filter=”xxx” représente les données à filtrer sur chacun des deux graphiques. Il a pour l’instant quatre valeurs possibles :`}</li>\n      <li parentName=\"ul\">{`“aucun” : tous les flux toflit18 et les toiles navigo sont affichés`}</li>\n      <li parentName=\"ul\">{`“colonial” : `}</li>\n      <li parentName=\"ul\">{`pour toflit18, n’affiche que les flux qui concernent la classe de produits “produits coloniaux”, ou le groupe de partenaires “Afrique” ou “Colonies”`}</li>\n      <li parentName=\"ul\">{`“eau-de-vie” :`}</li>\n      <li parentName=\"ul\">{`pour toflit18, n’affiche que les flux qui concernent la classe de produits “eau-de-vie et vins divers”`}</li>\n      <li parentName=\"ul\">{`“sel” :`}</li>\n      <li parentName=\"ul\">{`pour toflit18, dimensionne les flux par poids (au lieu de valeur en livres tournois pour les autres filtres), et n’affiche que les flux qui concernent la classe de produits “sel”`}</li>\n      <li parentName=\"ul\">{`le morceau bureaux=”xxx” représente le bureau des fermes sur lequel appliquer le filtre. Il peut avoir la valeur “tous” ou le nom d’un ou plusieurs bureaux des fermes, séparés par des virgules (exemple : “La Rochelle,Marennes”)`}</li>\n      <li parentName=\"ul\">{`le morceau navigoAgregation=”xxx” représente la méthode d’aggrégation à utiliser, il peut avoir deux valeurs :`}</li>\n      <li parentName=\"ul\">{`“tonnage” : dimensionne le radarplot avec des tonnages cumulés (valeur par défaut)`}</li>\n      <li parentName=\"ul\">{`“voyages” : dimensionne le radarplot avec le nombre de voyages`}</li>\n      <li parentName=\"ul\">{`le morceau minTonnage=”xxx” représente le tonnage minimum à utiliser comme filtre pour la partie navigo`}</li>\n      <li parentName=\"ul\">{`le morceau maxTonnage=”xxx” représente le tonnage minimum à utiliser comme filtre pour la partie navigo`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`La région étudiée se caractérise par une densité importante de ports qui entretiennent des relations plus ou moins étendues et plus ou moins intenses avec le reste de la France et du monde. L’importance de leurs mouvements maritimes et des tonnages impliqués n’est pas directement corrélée à la valeur des marchandises transportées. Ainsi, les deux bureaux des Fermes qui dominent en valeur des exportations sont ceux de La Rochelle, très lié au commerce colonial et négrier, et de Tonnay-Charente, exportateur d’eau-de-vie essentiellement vers la Grande-Bretagne. Par contre, l’activité portuaire de Marennes (exportateur du sel vers les ports de la mer du Nord et de la Baltique) est en tonnage la plus importante de la région mais ses exportations sont de faible valeur. Les importations sont dominées par les ports du bureau des fermes de La Rochelle, en raison de la forte valeur des produits coloniaux. La balance du commerce de Rochefort, qui importe des matières premières navales, est très déficitaire.`}</p>\n    <Caller id=\"partie-2-part-navigation-francaise\" mdxType=\"Caller\" />\n    <p>{`Nos analyses ont certes montré que`}<a href=\"https://drive.google.com/file/d/1Lr_7vo2oUHvWWWxNPknVtioLepYmIxLn/view\" target=\"blank\" rel=\"noopener noreferrer\">{` les tonnages enregistrés à Marennes semblent `}</a><a href=\"https://drive.google.com/file/d/1Lr_7vo2oUHvWWWxNPknVtioLepYmIxLn/view\" target=\"blank\" rel=\"noopener noreferrer\">{`surestimés à 20%`}</a>{`, et cela monte même à 50% dans 10% des pires cas, mais cela ne remet pas en cause la primauté de ce port. La carte, qui représente le tonnage expédié en 1789, à partir des congés délivrés aux navires, toutes destinations confondues, met en outre en évidence le caractère très internationalisé des transporteurs dans les ports exportateurs de sel (Noirmoutier et l’île de Ré) et d’eau-de-vie (Tonnay-Charente), ainsi que à Rochefort, largement approvisionné par les marines du Nord qui y apportent les matériels nécessaires à l’arsenal. Ce sont ces transporteurs qui assurent la presque totalité du commerce avec l’étranger de la région étudiée. Comme nous le verrons `}<a href=\"https://medialab.github.io/portic-storymaps-2021/fr/page/partie-3\" target=\"blank\" rel=\"noopener noreferrer\">{`dans la partie 3`}</a>{`, La Rochelle n’a plus un rôle structurant pour les ports de cette région: d’autres ports entretiennent des relations avec l’étranger et avec les marchés français, en commercialisant les productions locales, sans que la chaîne logistique ne passe par La Rochelle.`}</p>\n    <p>{`Cette section propose une étude de trois ports de la région à la fin de l’Ancien Régime afin de montrer la diversification de leurs marchés, qui s’explique largement par la nature des produits commercialisés. De par ses relations exclusives avec les colonies et surtout son investissement dans la traite négrière, La Rochelle mérite une étude à part. L’importation de quantités considérables de denrées coloniales, majoritairement ré-exportées vers l’Europe du Nord, met ce port dans une situation unique. Pour le commerce des eaux-de-vie, nous étudierons le cas de Tonnay-Charente. La mention de l’eau-de-vie parmi les cargaisons indiquées par les congés étant rare, il faudra se tourner d’abord vers les sources de la Balance du commerce, pour affiner ensuite les données par l’analyse de la navigation. `}</p>\n    <Caller id=\"sorties-de-sel\" mdxType=\"Caller\" />\n    <p>{`Plusieurs autres ports de la région, enfin, se consacrent prioritairement à l’exportation du sel: Noirmoutier, Ars-en-Ré et surtout Marennes mobilisent de flottes dépassant en 1789 les 10000 tonneaux pour sa commercialisation. Nous développerons ici en détail le cas de Marennes, principal port exportateur de sel, dont la particularité est de miser largement sur l’approvisionnement du marché national.`}</p>\n    <h2 {...{\n      \"id\": \"21-la-rochelle-et-le-commerce-triangulaire\"\n    }}>{`2.1. La Rochelle et le commerce triangulaire`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"colonial\"} highlight=\"toflit18\" bureaux=\"tous,La Rochelle\" mdxType=\"Caller\" />\n    <p>{`Au XVIIIe siècle, les colonies antillaises augmentent très considérablement leur production de sucre, café, indigo et produits tinctoriaux, pour répondre à une demande européenne fortement orientée à la hausse. La croissance de la production passe par un nombre de plus en plus élevé de plantations, qui ont un recours massif à une main-d’œuvre d’esclaves, que les Européens déportent par centaines de milliers depuis l’Afrique dans le cadre de la traite négrière. Ce commerce transatlantique d’êtres humains, achetés sur les côtes d’Afrique par les négriers européens, a commencé au XVe siècle, mais il atteint son apogée au XVIIIe siècle, lorsque 6 millions d’Africains sont déportés aux Amériques. La moitié d’entre eux est vendue aux Antilles. On estime à un million le nombre d’Africains introduits dans les colonies françaises au XVIIIe siècle. La principale destination est la colonie de Saint-Domingue (aujourd’hui Haïti) qui compte, à la veille de la grande révolte de 1791, un demi-million d’esclaves, dont plus de la moitié sont nés en Afrique. Alors que dans la plupart des ports négriers français, la part des armements négriers est nettement inférieure à celle des armements en droiture vers les Antilles, cela n’est pas le cas à La Rochelle: au départ de ce port, les trois quarts des expéditions de 1787 destinées à approvisionner les Antilles en hommes ou en produits sont des négriers. Comme à Honfleur, il y a donc clairement, en matière de trafics transatlantiques, une spécialisation négrière rochelaise. En 1789, les 12 négriers partis de La Rochelle sont tous armés par des négociants rochelais. Trois autres négriers partent depuis Rochefort. `}</p>\n    <Caller id=\"viz-principale-partie-2\" filter={\"colonial\"} highlight=\"navigo\" bureaux=\"tous,La Rochelle\" minTonnage=\"100\" mdxType=\"Caller\" />\n    <p>{`L’activité négrière est aux mains d’armateurs privés qui espèrent réaliser un profit lors de la revente des captifs aux Antilles. Si Nantes est le principal port négrier français, La Rochelle a joué un rôle significatif, tout particulièrement dans les années 1730–1740 : entre 1713 et 1744, La Rochelle arme 15% des expéditions négrières françaises; sa part tombe à 11% après la perte du Canada, en sorte que si La Rochelle est le deuxième port négrier le plus important en France avant 1763, il passe au 4e rang par la suite.`}</p>\n    <p>{`Malgré un déclin relatif, l’activité négrière rochelaise est toutefois résolument orientée à la hausse: les armateurs rochelais passent de 4,3 armements négriers par an pour la période 1713–1744 à 12,5 armements par an dans la décennie 1783–1793. Pendant cette dernière, la traite est véritablement de l’activité principale, voire presque exclusive, des armateurs rochelais: en 1789, sur un total de 200 départs depuis le port de La Rochelle de navires armés par des Rochelais, un peu plus de la moitié des tonnages se dirigent vers l’Afrique (42% du total) ou vers les colonies antillaises ou les Mascareignes, le reste se répartissant entre Terre-Neuve et Saint-Pierre-et-Miquelon (9.2%) La part des armements vers l’étranger est insignifiante (0.2%), et celle hors des ports limitrophes (Aunis, Poitou, Saintonge) ne dépasse pas le 5%. Les trois quarts de la trentaine de navires rochelais dépassant le 50 tx `}{`[`}{`le plus grand faisant 827 tonneaux`}{`]`}{` sortis du port de La Rochelle en 1789 se consacrent au commerce transatlantique et négrier. `}</p>\n    <p>{`Dès lors qu’on écarte la poussière des caboteurs, l’importance des destinations africaines et des colonies est lisible sur ce schéma, qui représente les destinations des navires sortis du port de La Rochelle en 1789, tout port d’attache confondu. Tous les navires qui se dirigent vers les Amériques, les Antilles ou l’océan Indien sauf un sont par ailleurs armés par des armateurs de La Rochelle. `}</p>\n    <p>{`Au total, dans les dernières années de l’Ancien Régime, une douzaine de navires reviennent chaque année à La Rochelle depuis les colonies, soit en droiture, soit (et surtout) de retour d’une expédition négrière. Les données de la Balance du commerce confirment la centralité du commerce colonial et négrier : en 1789, les exportations vers l’Afrique représentent 23% du total des exportations du bureau des Fermes de La Rochelle, alors que 73% est constitué par les ré-exportations des denrées coloniales. La valeur des produits ramenés est estimée, en 1789, à 7.1 millions de livres tournois, dont 5.1 sont réexportés à l’étranger. Les négociants rochelais semblent s’être taillés une position forte dans le marché du café, ce qui peut s’expliquer par la préférence préférence quasi-exclusive pour Saint-Domingue où plusieurs grandes familles de la ville (Belin, Garesché, Poupet Rasteau) sont très bien implantées. Saint-Domingue fournit en effet la presque totalité du café importé en France depuis les Antilles.`}</p>\n    <Caller id=\"partie-2-carte-direction-bateaux-de-la-rochelle\" mdxType=\"Caller\" />\n    <a href=\"https://drive.google.com/drive/folders/1vv6zi6QJVN203lZPTkRjLrgupEvzNW21\" target=\"blank\" rel=\"noopener noreferrer\">https://drive.google.com/drive/folders/1vv6zi6QJVN203lZPTkRjLrgupEvzNW21</a>\n    <p>{`Si les données collectées par la Balance du commerce ne permettent pas de connaître les destinations des réexportations coloniales rochelaises, les destinations des navires qui quittent le port en 1789 nous en donnent une indication approximative. Les Pays-Bas autrichiens (actuelle Belgique), les Provinces-Unies, Brême, Hambourg, les ports de la Baltique reçoivent chacun de navires totalisant entre 500 et 550 tonneaux. Parmi les autres destinations européennes des navires partis de La Rochelle, seule la Grande-Bretagne (1048 tonneaux) n’est vraisemblablement pas destinataire des produits coloniaux, car elle s’approvisionne dans ses propres colonies.. `}</p>\n    <p>{`Dès lors, il n’est pas surprenant que le négoce rochelais porte toute son attention aux questions liées au commerce colonial et négrier. Cela apparaît clairement parmi les sujets discutés par la chambre de commerce de La Rochelle. L’indexation faite à la main, à l’époque, sur la marge des registres de délibération la Chambre de Commerce de La Rochelle permet de constater que dans la seule année 1789, le commerce d’Afrique est discuté à une trentaine de reprises, et les colonies à une 50aine des reprises, le commerce de l’Inde à 9; à titre de comparaison, le commerce avec l’étranger est abordé 11 fois en tout, et la pêche (avec notamment la question de la concurrence et de l’admission de la pêche états-unienne, très débattue cette année là en France), 17 fois. Parmi les produits indexés au marge des registres de délibérations, les comestibles sont mentionnés 16 fois - ce qui dans la conjoncture céréalière particulière de l’époque n’est guère étonnant-, l’eau-de-vie et le vin 6, les sucres et les raffineries 8, le charbon de terre 3. On mesure clairement, en dépit d’un critère sans doute grossier, que le regard des membres de la Chambre de commerce est clairement rivé sur les colonies et la traite. `}</p>\n    <p>{`Si la question de la traite est absente des cahiers de doléances de la région `}{`[`}{`préciser leur nombre et fournir un % approximatif de leur complétude par rapport à tous ceux rédigés?`}{`]`}{`, la défense des intérêts coloniaux apparaît, significativement, uniquement dans le cahier de doléances du Tiers-état de la ville de La Rochelle, dont les représentants envoyés à Versailles “demanderont la révocation de l’arrêt rendu au conseil du roi, le 30 août 1784, concernant le commerce étranger dans les colonies, et le rétablissement des dispositions des lettres patentes de 1717 et 1727, auxquelles on est redevable des progrès qu’ont faits la navigation françoise et la culture des isles françoises de l’Amérique”; par ailleurs, ils “demanderont la suppression de l’entrepôt et des droits actuels de consommation sur les sucres, cafés et l’indigo venant des colonies, et qu’il soit substitué, à l’entrée de la totalité de ces denrées dans tous les ports du roïaume, un droit uniforme `}{`[`}{`…`}{`]`}{` : que le terrage des sucres étant défavorable à la navigation, s’il n’est pas possible de l’interdire entièrement dans nos colonies, comme il l’est dans les colonies anglaises, il soit au moins défendu `}{`[`}{`…`}{`]`}{` de l’étendre davantage par de nouveaux établissemens, et que, les sucres bruts devant être, ainsi que le coton, considérés comme matière première, il soit mis un droit à la sortie du roïaume des sucres bruts, assez sensible pour que la plus grande quantité de cette matière soit conservée en France et serve à relever et à soutenir les raffineries et à procurer du travail, puisque c’est dans ces vues que le gouvernement d’Angleterre interdit rigoureusement la sortie en nature des sucres bruts importés de ses colonies…”. Enfin “Les députés demanderont la révocation de l’arrêt du 14 avril 1785 , qui a créé une nouvelle compagnie des Indes et de celui pour l’admission des étrangers dans les isles de France et de Bourbon.” `}</p>\n    <p>{`Il faut observer que la participation rocheloise à la navigation au-delà du cap de Bonne-Espérance est modeste: l’état des exportations de 1789, n’indique que 38060 livres tournois exportés vers l’Inde, et rien vers les Mascareignes`}{`]`}{`. Ces données semblent outefois incompatibles avec le départ du Henri IV pour l’île de France et à l’île Bourbon, le 9 mai 1789, qui arrive à bon port en février 1790, et qui n’est pas un négrier `}{`[`}{`Toussaint, p. 291`}{`]`}{` à moins que sa cargaison ne viennent entièrement d’autres directions de Fermes du royaume. En 1787, ce sont trois armements vers les Mascareignes qui partent de La Rochelle: une certaine diversification des armements coloniaux apparaît donc, ici comme à Bordeaux, dans les années 1780, lorsque la baisse des profits du commerce antillais incite à chercher des investissements plus rentables.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`vérifier si cahiers de doléances en parlent. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"22-le-commerce-de-leau-de-vie\"\n    }}>{`2.2. le commerce de l’eau-de-vie`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"eau-de-vie\"} bureaux=\"Charente, Saint-Martin-de-Ré, Rochefort,Tonnay-Charente\" mdxType=\"Caller\" />\n    <p>{`Les congés de navigation ne sont malheureusement pas de beaucoup de secours pour identifier les flux d’eau-de-vie. En effet, le greffier du port de Tonnay-Charente ne prend pas le soin d’annoter les cargaisons (il le fait 12 fois sur un total de 601 départs): nous avons donc un aperçu global de la navigation, sans pouvoir distinguer la nature des produits. Si on se base sur les seules sorties de l’année 1787, 67 navires de tonnage moyen, proche de 100 tx, quittent alors Tonnay-Charente : 42 se rendent à l’étranger (en Angleterre pour les deux tiers, le reste vers les îles anglo-normandes, Ostende et la Baltique) ; les 25 gros caboteurs restants se rendent à Dunkerque. On identifie ici la flotte européenne de l’eau-de-vie, qui représente 22% du tonnage sortant en 1787. Un cran en dessous, on identifie un second groupe, composé d’une poussière de petits caboteurs (tonnage moyen 35 tx) et qui représente tout de même 30% du tonnage sortant. Ces navires sont alignés sur une destination unique : La Rochelle. Ils sont pour partie occupés à l’approvisionnement de la ville et peut-être à un commerce regional ou national: en revanche, La Rochelle a perdu le rôle d’entrepôt pour le commerce international de l’eau-de-vie qu’elle avait dans les années 1730. Les principales maisons de négoce d’eau-de-vie, en particulier Martell, n’ont plus de bureaux à La Rochelle en 1789: leurs bureaux principaux ont été rapatriés à Tonnay-Charente et/ou déplacés à Paris. Enfin, des unités plus modestes (25 tx en moyenne) évoluent au sein de la mer des Pertuis (depuis la Seudre sud jusqu’aux Sables d’Olonne) : elles représentent 23% du tonnage à la sortie du port de Tonnay-Charente. Il faut remarquer que 479 de 743 congés délivrés en 1787 dans ce port concernent les navires avalant et attachés à des ports fluviaux. Venus porter les eaux-de-vie mais aussi les pierres de carrière et les produits manufacturés de l’arrière-pays à Tonnay-Charente, leurs maîtres quittent ce port soit à vide, soit avec une cargaison destinée à Rochefort, La Rochelle ou bien aux ports de la mer des Pertuis, qui leur fournissent du fret de retour pour leur navigation vers l’amont du fleuve Charente. `}{`[`}{`Cette structure du commerce de Tonnay Charente - Révélateur du commerce d’eau de vie - pourrait être montrée à l’aide des diagrammes de Louvain ?`}{`]`}</p>\n    <p>{`Les exportations d’eau-de-vie charentaise en 1789 sont très supérieures à la moyenne séculaire. L’explication réside en partie dans les modifications induites par le Traité d’Eden de 1786, qui entraîne une augmentation extrêmement importante des exportations d’eau-de-vie vers l’Angleterre, notamment des eaux-de-vie de qualité produites dans la région de Cognac, au détriment de celles de moindre qualité. Le total des exportations d’eaux-de-vie françaises vers la Grande-Bretagne passe de 10 à 15 millions de livres tournois dans les années 1760–70, à 40 millions en 1787–89.`}</p>\n    <p>{` -`}{`>`}{` voir valeur export eau-de-vie de la direction de La Rochelle dans le temps), `}</p>\n    <p>{`En effet, les exportations d’Eaux-de-vie de 1789 semblent anormalement élevées :`}</p>\n    <p>{`Il faudrait avoir un graphique sur les exportations totales d’eau de vie sur la France entière et en particulier sur les généralités de Bordeaux, Bayonne et Nantes. Il y aussi à partir du milieu des années 20 une augmentation des exportations à partir des ports méridionaux, en particulier Sète. On pourrait avoir des coupes en 1750, une autre année (?) et 1789. `}</p>\n    <p>{`Autre idée de visualisation: en 1789, regarder les origines des exports. Il est possible qu’une partie des exports de la région de Cognac passe par Bordeaux, l’Armagnac a priori passe par Bayonne (selon Cullen 1998 qui est LA référence sur ce thème). Il y aussi des choses intéressantes dans l’article de Thierry (2013) sur Tonneau-Charente et Rochefort. Il faut distinguer aussi entre “eau de vie simple” et “eau de vie double” dans TOFLIT18, la 2e catégorie correspond je pense à la meilleure qualité (elle est plus chère et on la trouve moins souvent), donc le Cognac (et Armagnac).`}</p>\n    <p>{`Par ailleurs, d’après Cullen le commerce d’exportation des eaux de vie connaît une croissance forte après la fin de guerre d’indépendance américaine, mais il n’a pas de stat très détaillé pour 1789.`}</p>\n    <h2 {...{\n      \"id\": \"23-marennes-et-le-commerce-du-sel\"\n    }}>{`2.3. Marennes et le commerce du sel`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"sel\"} bureaux=\"Saint-Martin-de-Ré, Marennes\" mdxType=\"Caller\" />\n    <p>{`Denrée pondéreuse de faible valeur, le sel voyage dès que cela est possible par voie maritime. Les côtes de la région étudiée sont, avec celles du sud de la Bretagne, de très grands producteurs de sel. Marennes est un port de gabelle, il approvisionne entre autres les greniers à sel de Libourne, de Honfleur, et de Saint-Valéry-sur-Somme. Les marchés sont donc aussi bien nationaux - avec une demande soutenue notamment dans les ports de la Manche qui arment à la grande pêche - qu’étrangers (pays de l’Europe du Nord et du pourtour de la Baltique). `}</p>\n    <Caller id=\"sorties-de-marennes\" mdxType=\"Caller\" />\n    <p>{`C’est pourquoi, en quantité, le bureau des fermes de Marennes est le principal exportateur de sel en France, si l’on inclut aussi les livraisons vers les ports francs français. Il vient en troisième position, derrière les bureaux du Croisic et de Saint-Martin-de-Ré, si on se limite aux marchés extérieurs au royaume.`}</p>\n    <p>{`Les valeurs en jeu ne sont pas élevées, comparées à celles des flux commerciaux dont il a été question pour La Rochelle et Tonnay-Charente: le sel exporté depuis Marennes, y compris à destination des ports francs français, se chiffre autour de 360,000 livres tournois en 1789 (dont 141,000 vers l’étranger). En revanche, son commerce alimente un mouvement portuaire extrêmement intense, qui fait de Marennes, en termes de nombre de navires sortis et de leur tonnage, le principal port de la région étudiée. Son commerce maritime est donc une activité importante, tant pour la production locale qu’il soutient, que pour l’activité induite liée à son transport (construction navale, emploi maritime). Comme on l’a vu plus haut, les transporteurs ne sont pas de Marennes même, et les retombées concernent donc aussi bien les ports de cabotage de la région que ceux du littoral atlantique français.`}</p>\n    <p>{`Tous les flux sont là : `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/exploration/flows?sourceType%3DBest%2520Guess%2520customs%2520region%2520product%2520x%2520partner%26productClassification%3Dproduct_revolutionempire%26product%3D%255B%2522Sel%257Eproduct_revolutionempire%2522%255D%26page%3D0%26region%3D%2524all%2524%26kind%3Dtotal%26dateMin%3D1789%26dateMax%3D1789%26columns%3D%255B%2522product%2522%252C%2522region%2522%252C%2522year%2522%252C%2522partner%2522%252C%2522import%2522%252C%2522value%2522%252C%2522unitPrice%2522%252C%2522source%2522%252C%2522rawUnit%2522%255D%26orders%3D%255B%257B%2522key%2522%253A%2522unitPrice%2522%252C%2522order%2522%253A%2522DESC%2522%257D%255D\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"http://toflit18.medialab.sciences-po.fr/%5C#/exploration/flows?sourceType=Best%20Guess%20customs%20region%20product%20x%20partner&productClassification=product%5C_revolutionempire&product=%5B%22Sel%7Eproduct%5C_revolutionempire%22%5D&page=0&region=%24all%24&kind=total&dateMin=1789&dateMax=1789&columns=%5B%22product%22%2C%22region%22%2C%22year%22%2C%22partner%22%2C%22import%22%2C%22value%22%2C%22unitPrice%22%2C%22source%22%2C%22rawUnit%22%5D&orders=%5B%7B%22key%22%3A%22unitPrice%22%2C%22order%22%3A%22DESC%22%7D%5D\"\n        }}>{`http://toflit18.medialab.sciences-po.fr/\\\\#/exploration/flows?sourceType=Best%20Guess%20customs%20region%20product%20x%20partner`}{`&`}{`productClassification=product\\\\_revolutionempire`}{`&`}{`product=%5B%22Sel%7Eproduct\\\\_revolutionempire%22%5D`}{`&`}{`page=0`}{`&`}{`region=%24all%24`}{`&`}{`kind=total`}{`&`}{`dateMin=1789`}{`&`}{`dateMax=1789`}{`&`}{`columns=%5B%22product%22%2C%22region%22%2C%22year%22%2C%22partner%22%2C%22import%22%2C%22value%22%2C%22unitPrice%22%2C%22source%22%2C%22rawUnit%22%5D`}{`&`}{`orders=%5B%7B%22key%22%3A%22unitPrice%22%2C%22order%22%3A%22DESC%22%7D%5D`}</a></a></p>\n    <p>{`(mais pas par bureau).`}</p>\n    <p>{`Grosses variations de prix. Pas mal de prix absurdes. D’un peu moins de 36 livres à 10 sous le quintal (!) `}</p>\n    <p>{`Exports par bureau (y compris vers la France): `}</p>\n    <p>{`Exports par bureau hors la France : `}</p>\n    <p>{`Marchés pour les exports :`}</p>\n    <p>{`Marchés pour les exports de Marennes:`}</p>\n    <Caller id=\"viz-principale-partie-2\" filter={\"sel\"} highlight=\"navigo\" mdxType=\"Caller\" />\n    <p>{`Les données sur la navigation aident à préciser la géographie commerciale du sel exporté depuis Marennes, même si elles n’indiquent les quantités exportées. À compter du règne de Louis XIV, la législation relative aux gabelles fait obligation au chargeur de naviguer avec une cargaison complète. Cette situation est peut-être à l’origine de la surestimation des tonnages constatée dans ce seul port de Marennes, qui travaille vraisemblablement sous le regard serré des agents de la Ferme. Le tonnage des navires chargés de sel est donc un assez bon indicateur des quantités exportées. Les congés confirment que, parmi les ports exportateurs de la région étudiée, la primauté revient incontestablement à Marennes: en 1787, le tonnage additionné de navires sortis de ports français avec du sel y est de plus du double qu’à Ars-en-Ré, le deuxième grand exportateur de la région. Même en prenant en compte la surévaluation des tonnages de navires à Marennes, que nous avons constatée en comparant le tonnage d’un même navire relevé en plusieurs ports, Marennes demeure le principal fournisseur de sel en France, ce qui est confirmé par la Balance du commerce. `}</p>\n    <p>{`L’exportation de sel est en outre une activité quasi exclusive à Marennes : sur 1174 départs en 1787, 990 ont chargé du sel. En 1789, ce sont 1301 sur 1481. `}</p>\n    <p>{`Pistes possibles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`dvp texte sur marchés extérieurs avec valeur et quantités (Toflit) et faire calcul valeur/tx`}</li>\n      <li parentName=\"ul\">{`regarder si Chambre de commerce et cahiers de doléances parlent du commerce du sel`}</li>\n      <li parentName=\"ul\">{`Piste: vérifier qui, parmi les ports exportateurs du sel, ont de liens forts avec l’étranger et mettre cela en relation, éventuellement, aux tirants d’eau - tonnage moyen des navires exportateurs par destination et par port de départ. En clair: est-ce que Marennes exporte plus vers l’étranger que vers le marché national comparé aux autres ports qui vendent du sel? ici on a besoin de l’expertise de Thierry`}</li>\n      <li parentName=\"ul\">{`Il y a un ouvrage récent publié aux PUR (et lisible sur openedition) avec 2 articles sur le sujet. Je (Loïc) n’ai pas eu le temps de les lire.`}</li>\n    </ul>\n    <hr></hr>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"introduction\",\n    level: 2,\n    title: \"Introduction\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"21-la-rochelle-et-le-commerce-triangulaire\",\n    level: 2,\n    title: \"2.1. La Rochelle et le commerce triangulaire\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"22-le-commerce-de-leau-de-vie\",\n    level: 2,\n    title: \"2.2. le commerce de l’eau-de-vie\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"23-marennes-et-le-commerce-du-sel\",\n    level: 2,\n    title: \"2.3. Marennes et le commerce du sel\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 2 TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"7 min read\",\"minutes\":6.83,\"time\":409800,\"words\":1366}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-3-la-rochelle-port-dominant-mais-pas-structurant\"\n    }}>{`Partie 3. La Rochelle, port dominant mais pas structurant`}</h1>\n    <Caller id=\"viz-principale-partie-3\" step={1} mdxType=\"Caller\" />\n    <p>{`En 1789, les navires des ports locaux exportateurs de sels (Marennes, Rochefort, Ars-en-Ré) ont un tonnage moyen plus important que ceux de la Rochelle. De manière plus surprenante, la quantité de navires qui sortent des ports secondaires - Aligre, Charente, Marennes, Saint-Martin de Ré, voire même Rochefort - témoigne d’un dynamisme qui échappe largement au port dominant, La Rochelle. Cette particularité s’inscrit dans une histoire maritime longue de la région centre-ouest.`}</p>\n    <p>{`Jusqu’à la perte des colonies nord-américaines, le port de La Rochelle a cultivé une certaine spécificité géographique. Quoique le port de La Rochelle pratiquait, comme la presque totalité des ports atlantiques, le commerce antillais et négrier, une part importante et qui a progressivement augmenté jusqu’à représenter plus de la moitié de ses armements pour les colonies dans les années 1750 était constituée par le commerce nord-américain - Canada, Louisiane et pêcheries de Terre-Neuve. Cette spécificité géographique a également influé sur sa spécialisation par produits. Le commerce des fourrures est ainsi une spécialité rochelaise jusqu’au début des années 1760. Les fourrures étaient importées non seulement du Canada, mais aussi de la Louisiane, porte de sortie des peaux de l’Ohio. Ces fourrures étaient pour partie ré-exportées en France et en Europe (principalement vers l’espace allemand et en Suisse). Une part importante, les peaux de castors en particulier, n’étaient pas ré-exportées, mais alimentaient l’industrie de chamoiserie niortaise et d’autres localités françaises. En retour, les Rochelais approvisionnaient les Canadiens et la Louisiane en vivres, matières premières et en produits manufacturés. L’Amérique du Nord était donc un débouché important et facile pour les céréales de la région, les étoffes locales de basse qualité et, dans une moindre mesure, le sel nécessaire aux pêcheries de Terre-Neuve. Ce commerce quoique modeste avant les années 1740 fournissait des volumes importants d’emploi dans ces trois secteurs de l’économie régionale et contribuait à faire du port de La Rochelle, le centre de gravité du complexe portuaire régional. Cette domination était renforcée par la prépondérance des capitaux rochelais qui s’investissaient de manière prioritaire dans le commerce Atlantique - nord-américain et antillais. La domination rochelaise se mesurait notamment au début du siècle par la présence des bureaux principaux des maisons de Cognac à La Rochelle. Mais, dès la crise qui suivit la chute du système de Law, La Rochelle commença à perdre sa place et Tonnay-Charente à s’affirmer comme le principal port d’exportation de l’eau-de-vie produite dans la région, et du Cognac en particulier. `}</p>\n    <Caller id=\"viz-principale-partie-3\" step={2} mdxType=\"Caller\" />\n    <p>{`Ainsi, même si le port de la Rochelle a l’ascendant sur les autres ports de la région par la diversité des produits qu’il importe et exporte et, surtout, par son activité dans le commerce atlantique, les échanges des ports de la région sont largement autonomes comme le montre le réseau des voyages de la région PASA de 1787 comparé à ceux des deux autres régions situées au nord (la Loire-Atlantique) et au sud (l’Aquitaine). Les indices de centralité comparées avec d’autres régions dominées par un port central (Sud-ouest Atlantique, Normandie, Loire-Atlantique) confirment la relative faiblesse de La Rochelle et son incapacité à structurer les trafics maritimes locaux.`}</p>\n    <p>{`Ce constat peut être lié historiquement à la perte des colonies Nord-américaines (Canada et Louisiane) qui a brisé une dynamique vertueuse qui s’était établie dans années postérieures à la guerre de succession d’Autriche. En effet, avant 1748, le commerce des Antilles en droiture et la traite négrière continuaient à dominer le commerce de la Direction de la Rochelle en valeur, étant donné le dynamisme limité de la demande émanant de l’Amérique du Nord. Mais, dès la fin de la guerre de Succession d’Autriche, s’ouvre une période de croissance exceptionnelle pour le commerce avec l’Amérique du Nord. Sur la période 1748–1758, La Rochelle reçoit annuellement plus de 1 million 300 mille livres de peaux d’Amérique du Nord, soit presque autant en valeur que de sucre des Antilles (1 million 450 mille livres). Le nombre d’armements à destination du Canada est multiplié par deux alors que celui pour la Louisiane augmente de moitié. Par rapport aux années précédant la guerre, le trafic lié au commerce triangulaire baisse en moyenne d’un quart pour les Antilles et de plus de moitié pour la traite, destinations pour lesquelles les envois rochelais sont directement en concurrence avec des ports comme Bordeaux, Nantes, Rouen et même Dunkerque et Marseille. A l’inverse, les Rochelais ont un monopole de fait pour la Louisiane qui n’intéresse guère les ports plus importants et seul Bordeaux les concurrence pour l’approvisionnement du Canada. Par ailleurs, ces deux destinations offraient des possibilités complémentaires. D’un côté, le commerce à destination du Canada pouvait se transformer en commerce triangulaire inversé - La Rochelle-Canada-Antilles - lorsque les capitaines rochelais trouvaient au Canada de quoi ravitailler les îles à sucre en morue salée et, plus rarement, en céréales. La Louisiane permettait également de réaliser des opérations de contrebande avec les colons espagnols, offrant la possibilité de riches retours sous forme de piastres (Augeron : 2004; Mathieu : 1986).`}</p>\n    <Caller id=\"viz-principale-partie-3\" step={3} mdxType=\"Caller\" />\n    <p>{`Ce commerce de niche, limité en volume, mais créateur d’emplois locaux et, au milieu du siècle, facteur d’un dynamisme certain s’écroule avec la perte des colonies françaises nord-américaines à la fin de la guerre de Sept Ans. Cette perte déstructure durablement le commerce rochelais qui perd ses marchés privilégiés et sa position dominante au sein du réseau portuaire régional. En 1789, le commerce du port de la Rochelle est quasi-exclusivement colonial - près de 90% de ses exportations en valeur sont destinés à la traite africaine et aux Antilles. Les graphiques que nous proposons illustrent fidèlement ces remarques. Ce déclin est visible sur le graphique précédent où l’infrastructure de la province de l’Aunis apparaît originale par le faible poids relatif de son port principal - La Rochelle - incapable de freiner le développement des ports qu’il maintenait dans sa dépendance avant 1763: Tonnay-Charente, Marennes, Rochefort et Ars-en-Ré. Dans la période pré-révolutionnaire (1787–1789), les flux de navires comme de marchandises témoignent de la recomposition de l’économie de la façade maritime. Désormais, la valeur des flux de marchandises au départ de Tonnay-Charente et à l’arrivée de Rochefort, qui entretient directement les productions locales, se rapproche de ceux de La Rochelle.`}</p>\n    <p>{`Cette évolution est la conséquence de plusieurs contraintes qui se renforcent: la baisse de la capitalisation des négociants rochelais, conséquence directe de la vague de faillites qui secouent le milieu à la fin de la guerre de Sept Ans; la fermeture des marchés nord-américains subventionnés qui auraient permis un rebond rapide; la forte concurrence des autres ports sur la destination antillaise. Il ne restait donc que la traite négrière. Pour l’animer, les négociants rochelais se procurent les marchandises nécessaires à ce commerce dans toute la France et l’Europe et ne se fournissent que très peu dans l’arrière-pays rochelais. Le port n’est donc plus réellement connecté à l’arrière-pays et ce, d’autant plus, que la faiblesse capitalistique de la place éloigne les maisons de commerce spécialisées dans le Cognac; ainsi Martell qui rapatrie leurs bureaux principaux à Tonnay-Charente ou à Paris. Même dans le commerce colonial, La Rochelle doit faire une place aux autres ports de la région puisque Rochefort se voit accorder l’autorisation de faire le commerce colonial, témoignant du déclin économique et politique du port.`}</p>\n    <p>{`Pour conclure, La Rochelle reste en 1789 un port relativement dominant dans la région, notamment en ce qui concerne le commerce Atlantique, mais cette domination a largement diminuée au cours du siècle. De plus, alors que la spécialisation des ports de la région dans le sel pour les uns (Marennes, Rochefort, Ars-en-Ré), dans l’eau-de-vie pour les autres (Tonnay-Charente et, dans une moindre mesure, les ports de l’Ile de Ré), n’est plus articulé par la place de La Rochelle. Le commerce colonial ne s’appuie plus sur le réseau des ports et des places manufacturières locales, mais survit grâce aux capitaux et aux marchandises venus d’ailleurs. La Révolution française est ensuite venue démontrer la fragilité et l’artificialité d’un tel dispositif. Le blocus anglais et l’interdiction de la traite transatlantique sonnent pour le port de la Rochelle le glas de son destin de grand port commercial. `}</p>\n    <Caller id=\"partie-3-comparaison-exports-coloniaux\" mdxType=\"Caller\" />\n    <hr></hr>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 3 TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"16 min read\",\"minutes\":15.61,\"time\":936600,\"words\":3122}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"à-propos\"\n    }}>{`À propos`}</h1>\n    <p>{`Le présent site a été réalisé dans le cadre du `}<a href=\"https://anr.portic.fr/\" target=\"blank\" rel=\"noopener noreferrer\">{`programme de recherche ANR PORTIC`}</a>{`. Ce programme porte sur les dynamiques de navigation et du commerce extérieur au dix-huitième siècle, un commerce qui s’effectue largement par voie maritime. Outre la meilleure compréhension de ces dynamiques par le croisement de deux jeux de données, un enjeu fondamental du programme est de chercher des méthodes de qualification et d’appréhension de l’incertitude des données historiques, en expérimentant des modes de visualisation et d’écriture appropriés.`}</p>\n    <p>{`Dans ce cadre, le Working Package n°5 de ce programme de recherche consiste à effectuer une série d’études de cas tirant parti de deux corpus existants de sources historiques numérisées : `}<a href=\"http://navigocorpus.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`Navigocorpus`}</a>{`, une base de données portant sur l’histoire de la navigation pilotée par Silvia Marzagalli et Christine Plumejeaud ; et `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/home\" target=\"blank\" rel=\"noopener noreferrer\">{`Toflit18`}</a>{`, une base de données portant sur le commerce extérieur de la France, pilotée par Loïc Charles et Guillaume Daudin.`}</p>\n    <p>{`Ce site web s’inscrit dans un mouvement second faisant suite aux premières entreprises de numérisation pour chacune des deux bases, en tentant de valoriser le travail déjà accompli via l’étude approfondie de sous-ensembles signifiants dans les données. Ces études devraient ainsi permettre d’éclairer des questions disciplinaires existantes sous un nouveau jour grâce aux nouveaux matériaux et méthodes offerts par les bases de données mobilisées par le programme. Les questions soulevées par une telle initiative sont multiples :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Comment mobiliser ensemble deux sources dont certaines dimensions sont incommensurables ou difficiles à mettre en équivalence ? `}</li>\n      <li parentName=\"ul\">{`Comment croiser les données numérisées des deux bases avec des connaissances plus denses et qualitatives sur les phénomènes étudiés, apportées par des historiens spécialistes de la région étudiée ? `}</li>\n      <li parentName=\"ul\">{`Comment prendre en compte, au moment de l’enquête et du raisonnement, l’importante stratification de transformations, de réductions et de décisions interprétatives constituant la chaîne qui relie les sources initiales avec les données qui en ont été tirées ? `}</li>\n      <li parentName=\"ul\">{`Comment prendre en compte l’incertitude ou l’incomplétude des données tout en proposant une analyse scientifiquement solide des phénomènes étudiés ? `}</li>\n      <li parentName=\"ul\">{`Comment faire dialoguer les formes classiques de l’écriture historique - le récit déployé phrase après phrase, l’argument déroulé paragraphe par paragraphe - avec les formes d’écriture diagrammatique et computationnelle qu’implique la réalisation d’un site web ? `}</li>\n      <li parentName=\"ul\">{`Et enfin, comment gérer l’inhabituelle collaboration interdisciplinaire et partition d’expertises qu’implique une telle écriture multimodale ?`}</li>\n    </ul>\n    <p>{`Toutes ces questions ont été travaillées à l’occasion de la séquence de collaboration d’environ six mois qui a mené à l’élaboration de ce site, dont voici un bref récit.`}</p>\n    <h2 {...{\n      \"id\": \"dune-série-de-questionnements-à-une-semaine-denquête\"\n    }}>{`D’une série de questionnements à une semaine d’enquête`}</h2>\n    <p>{`L’étude de cas dont ce site est l’aboutissement a été articulée autour d’un format de collaboration intensive que nous appelons datasprint et qui consiste à faire travailler ensemble des expert.e.s de plusieurs disciplines sur un temps court et avec des questions de recherche déterminées à l’avance, sur la base d’un ou plusieurs jeux de données préparés pour l’occasion.`}</p>\n    <p>{`En amont du datasprint, nous avons conduit pendant plusieurs mois un double travail de préparation des données, et de préparation des questions de recherche. Sur le plan des données, les équipes de navigo et de toflit18 données ont dû effectuer un important travail de nettoyage et d’affinement concernant les régions et les périodes étudiées : le fait de projeter une étude de cas précise a fait émerger des problèmes qui étaient restés dans l’ombre faute de besoin d’un réexamen approfondi. Un travail très important a également été effectué pour “aligner” les deux bases, c’est-à-dire pour mettre en correspondance les lieux et les types de produits commercés ou transportés tels qu’ils sont décrits dans chacune des bases.`}</p>\n    <p>{`Sur le plan de la préparation des questions de recherche de départ, nous avons conduit une série de réunions préliminaires reliées par des documents en ligne rédigés collaborativement, qui nous ont aidé à identifier des questions à la fois pertinentes en regard de l’histoire de la région et de la littérature existante, mais aussi de ce que les données nous permettaient - ou pas - d’explorer et de visualiser. Ce travail d’ajustement et de mise en correspondance entre les questions et les données a ainsi couru d’octobre 2020 à avril 2021, et nous a permis à la fois d’identifier les activités d’exploration les plus pertinentes à proposer aux participants durant l’atelier, et d’éviter les chausses-trappes qui nous auraient conduit dans des questionnements impossibles à résoudre.`}</p>\n    <p>{`De ce travail de préparation est né un document de questionnement scientifique destiné à expliciter les questions de recherche à explorer partagé à tous les participant.e.s de la semaine de datasprint. Ainsi, au début du datasprint, l’étude de cas était structurée en deux groupes, correspondant à deux lignes d’enquête complémentaires mais aussi à la constitution de deux équipes équilibrées pour la collaboration :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`la première équipe devait se consacrer à étudier le dynamisme de la région du Poitou par rapport à la France et au monde en général (avec l’hypothèse d’un déclin par rapport au reste de la France au cours du dix-huitième siècle)`}</li>\n      <li parentName=\"ul\">{`la seconde équipe devait se consacrer à étudier les relations de complémentarité et de domination entre ports de la région, de manière notamment à distinguer les flux et circuits commerciaux qui y sont associés`}</li>\n    </ul>\n    <p>{`Sur cette base, un “kit de bienvenue” a été conçu pour permettre à tou.te.s les expert.e.s de rapidement saisir les multiples dimensions de l’atelier, et nous avons conduit quelques enquêtes préliminaires permettant de résoudre les questions les plus évidentes pour tirer le meilleur parti possible de la concentration d’expertises multiples sur un temps court et très dense permise par le format de travail datasprint.`}</p>\n    <h3 {...{\n      \"id\": \"faire-avec-les-conditions-de-recherche\"\n    }}>{`Faire avec les conditions de recherche`}</h3>\n    <p>{`La semaine du datasprint, qui a eu lieu début avril 2021, s’est avérée coïncider avec un moment de forte reprise de l’épidémie de covid-19 en France en général et à Paris en particulier. Cela nous a contraint à effectuer l’atelier en ligne. Conduire un datasprint en ligne revenait à se priver de l’incommensurable apport des échanges informels et autres possibilités d’affichage, de circulation et de spatialisation offerts par le travail dans un même lieu physique. À cette contrainte s’est ajoutée la subite fermeture des écoles maternelles et primaires ladite semaine, qui a occasionné une sérieuse charge extra-professionnelle pour une part substantielle des participant.e.s.`}</p>\n    <p>{`Le datasprint a néanmoins eu lieu, et nous avons décidé de considérer les conditions particulières dans lesquelles il s’est conduit non seulement comme des contraintes demandant de recalibrer drastiquement nos attentes, mais aussi comme des opportunités d’invention et d’expérimentation appelant à adapter nos manières de procéder par rapport aux modalités initialement planifiées.`}</p>\n    <h3 {...{\n      \"id\": \"improvisations-et-adaptations\"\n    }}>{`Improvisations et adaptations`}</h3>\n    <p>{`Durant le datasprint, la diversité des compétences des participant.e.s a impliqué de remettre à plat la répartition des tâches. Ainsi, chacun a pu être amené à suggérer des pistes de recherche, manipuler les données, et se pencher sur l’analyse et la mise en forme des résultats. Cette semaine a notamment été l’occasion d’expérimenter avec un grand nombre de technologies utilisées durant les activités d’enquête, notamment `}<a href=\"https://jupyter.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`jupyter notebook`}</a>{`, `}<a href=\"https://kepler.gl/\" target=\"blank\" rel=\"noopener noreferrer\">{`kepler.gl`}</a>{`, `}<a href=\"https://vega.github.io/vega/\" target=\"blank\" rel=\"noopener noreferrer\">{`vega`}</a>{`, ou encore `}<a href=\"https://matplotlib.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`matplotlib`}</a>{`. Nous avons néanmoins également parfois touché aux limites de ce principe en condition “zoomifiée”, certaines discussions spécialisées (sur le plan technique ou sur le plan historique par exemple) nécessitant parfois de reformer les corps disciplinaires et des moments d’apparté transversaux.`}</p>\n    <p>{`Le format datasprint implique par ailleurs une dimension expérimentale, parfois chaotique, et les difficultés de communications impliquées par la conduite en ligne ont amplifié cette dimension. Nous avons donc construit nos journées de travail sur un canevas allégé en terme d’amplitude horaire, et sous une forme tentant de varier les rythmes et les échelles d’interaction : un point de plénière en matinée, suivi de travail en deux groupes, eux-mêmes rapidement re-divisés en binômes ou en moments de travail individuel. `}</p>\n    <p>{`Sur le plan technique, nous avons opté pour une salle zoom permanente ouverte durant toute la semaine et divisée en “breakout rooms” (salles de travail) permettant de travailler en plus petits ensembles ; nous avons également soutenu la semaine avec un dossier google drive très organisé dans lequel l’ensemble des activités ont été archivées et consignées.`}</p>\n    <p>{`Pour faciliter le processus d’intercompréhension, des procédures méthodologiques ont également été proposées aux participants. Ainsi, des personnes jouant le rôle de facilitateurs ont fait le lien entre les différents groupes en circulant continuellement entre les différentes salles zoom de travail. Nous avons par ailleurs insisté sur l’importance de la documentation en structurant les activités de chaque jour autour de l’écriture de “rapports” remplis au fur et à mesure de la journée, dont une personne “scribe” était chargée de prendre soin afin de garder un maximum de traces et de permettre les échanges d’information asynchrones. Ces rapports ont finalement été progressivement abandonnés, car trop lourds étant donné le poids des autres activités. Nous avons également progressivement réduit les temps de visioconférence pour économiser les dépenses cognitives produites par les échanges en ligne.`}</p>\n    <p>{`Les séances de travail d’un datasprint provoquent parfois un “effet bulle” dans lequel chaque équipe peut rapidement se déconnecter du travail effectué par les autres, entraînant des blocages, des tâches effectuées en doublon ou des “angles morts”. Ce problème est amplifié par la conduite en ligne. Pour faire face à ce défi, nous avons rythmé les journées de points d’étapes effectuées à plusieurs échelles - par petits groupes, par équipes, ou en plénière - afin de partager les avancées. Par ailleurs, des visites informelles et autres “zoom surfing” ont permis de favoriser certaines circulations d’idées et de méthodes.`}</p>\n    <p>{`L’un des intérêts du format datasprint est enfin de favoriser une unité de temps pour le travail interdisciplinaire. L’intensité qu’implique cette unité de temps appelle cependant une valorisation à la hauteur des efforts fournis sur le temps court. Le temps du datasprint est, en temps normal, à la fois un temps d’exploration et d’enquête, et un temps de production de résultats. Cependant, ce principe a été confronté à deux spécificités dans notre cas : les conditions de travail en ligne ont demandé de revoir les attentes plus modestement, mais aussi le principe et les objectifs mêmes des datasprint de PORTIC qui, parce qu’ils visent la publication de sites web finalisés et contribuant de manière relativement précise à des études de cas très serrées (et non de rapports d’exploration des données comme c’est souvent le cas pour les autres datasprints). Face à ces spécificités, il nous a fallu articuler l’atelier avec un travail postérieur cadré par d’autres temporalités pour arriver à un résultat publiable.`}</p>\n    <h2 {...{\n      \"id\": \"la-fabrication-dun-site-web-comme-pivot-pour-lécriture-multimodale--entretenir-une-infrastructure-technique-et-méthodologique\"\n    }}>{`La fabrication d’un site web comme pivot pour l’écriture multimodale : entretenir une infrastructure technique et méthodologique`}</h2>\n    <p>{`À partir du travail effectué lors du datasprint, nous avons engagé une seconde phase d’approfondissement et de continuation des enquêtes initiées pendant la semaine de travail intensif. Sur le fond, les axes de recherche initialement envisagés ont été progressivement remaniés. Cela a été fait dès la fin de la semaine de datasprint, au moment de la rédaction d’un document de synthèse mettant en regard les visualisations produites durant la semaine. Ce travail a été ensuite continué par Cécile Asselin qui a effectué un travail de synthèse et de nettoyage sur les productions de la semaine.`}</p>\n    <h3 {...{\n      \"id\": \"une-écriture-multimodale\"\n    }}>{`Une écriture multimodale`}</h3>\n    <p>{`Afin de construire progressivement, à partir des explorations du datasprint, un document propre à être publié et à transmettre un récit et des arguments à partir des données des deux bases, nous avons tenté d’utiliser la perspective de la fabrication d’un site pour articuler trois types “d’écriture” : la confection de nouveaux fichiers de données correspondant aux enquêtes soulevées par les activités de la semaine (écriture computationnelle) ; la confection de visualisations d’informations (écriture diagrammatique) ; enfin, bien sûr, la mise en récit et en argument historique de l’étude de cas (écriture en prose).`}</p>\n    <p>{`Pour ce faire, nous avons décidé de structurer le site en une série de trois parties à la structure identique : une “visualisation principale” constituant l’argument principal de la partie, accompagné d’un texte se fondant d’abord sur elle puis suivant ses propres développement, accompagné de “visualisations secondaires”. Cette organisation visuelle et rhétorique a induit un mode de travail itératif sur le registre du “ping pong” qui s’est déployé en trois temps : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`dans la foulée du datasprint, les historien.ne.s ont d’abord travaillé à préciser les arguments de chacune des trois parties (avril-mai 2021)`}</li>\n      <li parentName=\"ul\">{`nous avons ensuite organisé deux jours intensifs de conception avec une équipe réduite d’ingénieur.e.s et de designers (Cécile Asselin, Robin de Mourat, Christine Plumejeaud, Paul Girard, Maxime Zoffoli) durant lesquels nous avons conçu des propositions de visualisations principales (fin mai 2021)`}</li>\n      <li parentName=\"ul\">{`les historien.es ont, à la suite de ces deux jours, repris la main sur l’écriture, enrichie et structurée par les propositions constituées par les visualisations, en précisant leurs textes comme leurs besoins pour des visualisations complémentaires, qui ont été progressivement produites en fonction du texte (juin-septembre 2021)`}</li>\n    </ul>\n    <p>{`Dans ce cadre, nous avons progressivement négocié une infrastructure de travail orientée vers le développement progressif du présent site web. Ce dernier a tout autant servi d’objectif que de moyen de rencontre entre les différentes activités qui ont suivi la semaine d’atelier datasprint.`}</p>\n    <p>{`La fabrication du site présenté au public a été articulée autour d’un protocole automatisé qui a permis de mettre le site à jour quotidiennement pendant sa phase d’écriture et de développement, et ainsi de faire progresser conjointement sa structure, son aspect graphique et les divers contenus qui le peuplent (voir son `}<a href=\"https://github.com/medialab/portic-storymaps-2021\" target=\"blank\" rel=\"noopener noreferrer\">{`répertoire github`}</a>{` pour plus d’informations). Plus précisément, ce protocole automatisé consistait à récupérer les contenus écrits dans un google documents écrit par les historien.ne.s, les données des bases navigo et toflit18 sur leurs espaces numériques respectifs, et enfin à produire un ensemble de données optimisées pour le web avant de refabriquer le site.`}</p>\n    <p>{`Cette méthode de travail sur mesure, alternative à l’utilisation d’un CMS (type wordpress) ou d’une intégration des contenus entièrement “artisanale”, nous a permis de multiplier les itérations sur les données, les visualisations et les textes, afin de développer itérativement un document ajusté et cohérent pour la lecture. Elle nous a également permis d’échapper à une approche qui voudrait formater la production du site de manière trop séquentielle, c’est-à-dire faisant suivre un premier temps de “conception” puis un deuxième temps “d’exécution”, pour plutôt faire place à la découverte et au dialogue avec les différents matériaux en train de se développer. `}</p>\n    <p>{`Ainsi, la méthode de travail et de montage du site adoptée ici, outre la dimension d’optimisation qu’implique l’automatisation de certaines tâches, a été le moyen de favoriser un dialogue plus organique entre les différentes écritures en jeu dans ce document : en réalisant simultanément le design du site, celui des visualisations, et les textes qui les accompagnent, nous avons tenté de faire profiter chacune de ces activités l’une de l’autre, comme des sources d’invention ou de solidification mutuelle, plutôt que de les considérer comme des tâches spécialisées et/ou articulées selon un régime de subordination (de l’histoire à la technique, ou du visuel au textuel, ou de l’argument à son illustration, etc.).`}</p>\n    <h3 {...{\n      \"id\": \"un-site-destiné-à-tisser-des-liens-avec-dautres-activités-et-dautres-publics\"\n    }}>{`Un site destiné à tisser des liens avec d’autres activités et d’autres publics`}</h3>\n    <p>{`Ce site est pensé à la fois comme un objet autonome déroulant le récit scientifique de l’histoire de la région de La Rochelle au dix-huitième siècle, et comme la première pièce d’assemblages scientifiques et didactiques encore à venir. Nous l’avons conçu avec le projet de l’adresser à un public constitué d’étudiant.e.s en histoire, de professeur.e.s d’histoire du secondaire, ou d’amateur.ice.s avancés passionnés par le Poitou. Cependant, le site est également pensé pour pouvoir s’articuler avec deux publics complémentaires :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`vulgarisateurs et autres médiateurs pourront utiliser certaines des visualisations pour des initiatives destinées à un plus grand public`}</li>\n      <li parentName=\"ul\">{`historien.ne.s spécialisés pourront citer ces visualisations dans des publications conventionnelles en revues ou monographies et ainsi s’appuyer sur ces dernières pour continuer nos enquêtes`}</li>\n    </ul>\n    <p>{`Pour ce faire, nous avons notamment rendu chacune des visualisations “détachable” du récit proposé via la page atlas - et plus techniquement en dotant chacune des visualisations d‘une adresse URL propre.`}</p>\n    <p>{`Par ailleurs, le `}<a href=\"https://github.com/medialab/portic-storymaps-2021/\" target=\"blank\" rel=\"noopener noreferrer\">{`code source du site`}</a>{`, partagé sous licence libre, a été construit et documenté de manière à pouvoir être éventuellement dérivé - en tout ou partie - pour d’autres projets à venir : il pourra apporter des éléments utiles pour les prochaines études de cas du programme PORTIC mais aussi pour d’autres projets similaires. Il est enfin à noter que toutes les données utilisées - et les scripts qui les génèrent à partir des données complètes de toflit18 et navigo, accessibles toutes les deux librement - sont également inclus dans le code source du site, rendant nos visualisations et résultats entièrement reproductibles.`}</p>\n    <h2 {...{\n      \"id\": \"une-écriture-collective--crédits\"\n    }}>{`Une écriture collective : crédits`}</h2>\n    <p>{`Ce site est le résultat d’un processus d’enquête et d’écriture collective qui a mobilisé des personnes issues de plusieurs disciplines : histoire, économie, informatique, géomatique, design. Plus précisément, il est l’œuvre de :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`L’ingénieure stagiaire `}<a href=\"https://fr.linkedin.com/in/c%25C3%25A9cile-asselin-3659541b7\" target=\"blank\" rel=\"noopener noreferrer\">{`Cécile Asselin`}</a>{`, en double cursus ingénierie/sciences humaines, qui s’est consacrée à plein temps pendant six mois à la conduite méthodologique et technique de l’ensemble de l’étude de cas, accompagnée par `}<a href=\"https://medialab.sciencespo.fr/equipe/robin-de-mourat/\" target=\"blank\" rel=\"noopener noreferrer\">{`Robin de Mourat`}</a>{` (co-responsable scientifique du programme PORTIC)`}</li>\n      <li parentName=\"ul\">{`Le cœur de l’équipe Navigo : `}<a href=\"https://cmmc-nice.fr/membres-du-cmmc/silvia-marzagalli/\" target=\"blank\" rel=\"noopener noreferrer\">{`Silvia Marzagalli`}</a>{` (historienne du commerce et de la navigation - directrice et co-responsable scientifique du programme PORTIC) et `}<a href=\"https://lienss.univ-larochelle.fr/Plumejeaud-Christine-954\" target=\"blank\" rel=\"noopener noreferrer\">{`Christine Plumejeaud`}</a>{` (géomaticienne - co-responsable scientifique du programme PORTIC).`}</li>\n      <li parentName=\"ul\">{`Le cœur de l’équipe Toflit18 : `}<a href=\"https://www.ined.fr/fr/recherche/chercheurs/Charles%2BLo%25C3%25AFc\" target=\"blank\" rel=\"noopener noreferrer\">{`Loïc Charles`}</a>{` et `}<a href=\"https://leda.dauphine.fr/fr/membre/detail-cv/profile/guillaume-daudin.html\" target=\"blank\" rel=\"noopener noreferrer\">{`Guillaume Daudin`}</a>{` (historiens de l’économie moderne).`}</li>\n      <li parentName=\"ul\">{`Les historiens `}<a href=\"https://criham.labo.univ-poitiers.fr/membres/thierry-sauzeau/\" target=\"blank\" rel=\"noopener noreferrer\">{`Thierry Sauzeau`}</a>{` et `}<a href=\"https://www.univ-brest.fr/crbc/menu/Membres%2Bdu%2Blaboratoire/Enseignants-chercheurs/Pierrick_Pourchasse\" target=\"blank\" rel=\"noopener noreferrer\">{`Pierrick Pourchasse`}</a>{`, membres permanents du programme PORTIC ayant participé au datasprint et/ou à l’écriture du site`}</li>\n      <li parentName=\"ul\">{`La data librarian `}<a href=\"https://fr.linkedin.com/in/geraldine-geoffroy-4653ab19b\" target=\"blank\" rel=\"noopener noreferrer\">{`Géraldine Geoffroy`}</a>{` et le chercheur en informatique `}<a href=\"https://l3i.univ-larochelle.fr/Bouju-Alain-MCF-HDR\" target=\"blank\" rel=\"noopener noreferrer\">{`Alain Bouju`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Les ingénieurs en méthodes numériques et designers du laboratoire médialab de Sciences Po `}<a href=\"https://bmaz.github.io/\" target=\"blank\" rel=\"noopener noreferrer\">{`Béatrice Mazoyer`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/benjamin-ooghe-tabanou/\" target=\"blank\" rel=\"noopener noreferrer\">{`Benjamin Ooghe-Tabanou`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/guillaume-plique/\" target=\"blank\" rel=\"noopener noreferrer\">{`Guillaume Plique`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/heloise-thero/\" target=\"blank\" rel=\"noopener noreferrer\">{`Héloïse Théro`}</a>{`, et `}<a href=\"https://paulinegourlet.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Pauline Gourlet`}</a>{`, qui ont participé au datasprint.`}</li>\n      <li parentName=\"ul\">{`Les experts en traitement et visualisation de données invités pour l’occasion du datasprint puis pour la conception des visualisations principales de chacune des trois parties : l’ingénieur et ancien directeur technique du médialab `}<a href=\"https://fr.linkedin.com/in/paul-girard-57822118\" target=\"blank\" rel=\"noopener noreferrer\">{`Paul Girard`}</a>{` (pour l’entreprise `}<a href=\"https://www.ouestware.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Ouestware`}</a>{`) ainsi que le designer d’information expert en visualisation de données `}<a href=\"https://www.maximezoffoli.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Maxime Zoffoli`}</a>{`.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"dune-série-de-questionnements-à-une-semaine-denquête\",\n    level: 2,\n    title: \"D’une série de questionnements à une semaine d’enquête\",\n    children: [\n        {\n              id: \"faire-avec-les-conditions-de-recherche\",\n              level: 3,\n              title: \"Faire avec les conditions de recherche\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"improvisations-et-adaptations\",\n              level: 3,\n              title: \"Improvisations et adaptations\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"la-fabrication-dun-site-web-comme-pivot-pour-lécriture-multimodale--entretenir-une-infrastructure-technique-et-méthodologique\",\n    level: 2,\n    title: \"La fabrication d’un site web comme pivot pour l’écriture multimodale : entretenir une infrastructure technique et méthodologique\",\n    children: [\n        {\n              id: \"une-écriture-multimodale\",\n              level: 3,\n              title: \"Une écriture multimodale\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"un-site-destiné-à-tisser-des-liens-avec-dautres-activités-et-dautres-publics\",\n              level: 3,\n              title: \"Un site destiné à tisser des liens avec d’autres activités et d’autres publics\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"une-écriture-collective--crédits\",\n    level: 2,\n    title: \"Une écriture collective : crédits\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`About TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.695,\"time\":101700,\"words\":339}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"références\"\n    }}>{`Références`}</h1>\n    <h3 {...{\n      \"id\": \"sources-archivistiques\"\n    }}>{`Sources archivistiques`}</h3>\n    <p>{`Les données sur la navigation proviennent de la base de données Navigocorpus. Pour cette enquête, il s’agit plus particulièrement des:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`congés issus de la sous-série G5 conservés aux Archives Nationales de France`}</li>\n      <li parentName=\"ul\">{`congés de Lorient, Archives départementales du Morbihan, 10B-19`}</li>\n      <li parentName=\"ul\">{`congés de Saint-Tropez, Archives départementales du Var, 7 B 10`}</li>\n      <li parentName=\"ul\">{`Registres du Bureau de Santé de Marseille, 200 E 543 et 545`}</li>\n    </ul>\n    <p>{`Les données relatives aux expéditions négrières ont été complétées avec la base de données `}<a href=\"https://www.slavevoyages.org/voyage/database\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"https://www.slavevoyages.org/voyage/database\"\n        }}>{`https://www.slavevoyages.org/voyage/database`}</a></a></p>\n    <p>{`Les données relatives au commerce extérieur proviennent de `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Archives d’Outre-Mer, COMPLETER`}</li>\n      <li parentName=\"ul\">{`ANOM, Col. F 2B 14, tableau 28`}</li>\n      <li parentName=\"ul\">{`ANOM, Col. F 2 B 14, tableaux 3 et 5`}</li>\n      <li parentName=\"ul\">{`Archives Nationales de France, COMPLETER`}</li>\n    </ul>\n    <p>{`La majeure partie des cahiers de doléances étudiés sont tirés des Archives Départementales de Charente-Maritime (AD17). En effet, les Archives Départementales de la Vendée (AD85) ne conservent que de rares cahiers pour littoral du Poitou (Bouin, Noirmoutier, l’Ile d’Elle dans le marais poitevin). La collecte et/ou la transcription ont été réalisées selon deux modalités. Nous avons tout d’abord récupéré un ensemble de cahiers charentais transcrits sur le site `}<a href=\"http://www.histoirepassion.eu/?-1789-Cahiers-de-doleances-et-Etats-generaux-\" target=\"blank\" rel=\"noopener noreferrer\">{`Histoire Passion - Saintonge Aunis Angoumois`}</a>{`. Nous avons ensuite complété ce corpus grâce à la collaboration des AD17 et des AD85. Ainsi, de nouveaux cahiers ont été récupérés et transcrits par Thierry Sauzeau, le tout permettant d’évaluer l’exhaustivité et la teneur de l’échantillon utilisé. Le corpus de 163 cahiers recèle 14 cahiers de paroisses que complètent 5 cahiers de districts (groupes de paroisses) du littoral. L’ensemble de ce travail de consolidation et de mise en données est disponible et réutilisable `}<a href=\"https://docs.google.com/spreadsheets/d/1A8-OiTSYv7opCcWvF8tsJ0dmEXkHZMgN-7lhj-4hqFw/edit?usp%3Dsharing\" target=\"blank\" rel=\"noopener noreferrer\">{`à cette adresse`}</a>{`.`}</p>\n    <p>{`Les registres de délibération de la Chambre de Commerce de La Rochelle sont conservés aux Archives départementales de la Charente Maritime, 41 ETP 8 (accessibles en ligne: `}<a href=\"https://archinoe.fr/v2/ad17/visualiseur/ir_ead_visu_lien.html?ir%3D11431%26id%3D490014227\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"https://archinoe.fr/v2/ad17/visualiseur/ir%5C_ead%5C_visu%5C_lien.html?ir=11431&id=490014227\"\n        }}>{`https://archinoe.fr/v2/ad17/visualiseur/ir\\\\_ead\\\\_visu\\\\_lien.html?ir=11431`}{`&`}{`id=490014227`}</a></a>{`) `}</p>\n    <h3 {...{\n      \"id\": \"bibliographie\"\n    }}>{`Bibliographie`}</h3>\n    <p>{`Documents préliminaires déjà réalisés pouvant être utiles :`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <a href=\"https://docs.google.com/document/d/15AylB2sk_Jrru5GzLTjexs9K3iJgefhn/edit\" target=\"blank\" rel=\"noopener noreferrer\">https://docs.google.com/document/d/15AylB2sk\\_Jrru5GzLTjexs9K3iJgefhn/edit</a> \n      </li>\n    </ul>\n    <hr></hr>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"sources-archivistiques\",\n    level: 3,\n    title: \"Sources archivistiques\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bibliographie\",\n    level: 3,\n    title: \"Bibliographie\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`References`}</p>\n    <p>{`TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`some tests`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\n\nfunction SvgChart ({path}) {\n    return <img alt={path} src={`${process.env.PUBLIC_URL}${path}`} />\n} \n\nexport default SvgChart;","import GeographicMapChart from './GeographicMapChart';\n\nexport default GeographicMapChart;","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import DataProvider from './DataProvider';\n\nexport default DataProvider;","import TriangleChart from './TriangleChart';\n\nexport default TriangleChart;","import { useEffect, useState } from \"react\";\nimport { csvParse } from 'd3-dsv';\nimport get from 'axios';\n\nconst DataProvider = ({\n  data: dataFilename,\n  children\n}) => {\n  // raw marker data\n  const [data, setData] = useState(null);\n  const [loadingData, setLoadingData] = useState(true);\n  /**\n   * Marker data loading\n   */\n  useEffect(() => {\n    if (dataFilename) {\n      const dataURL = `${process.env.PUBLIC_URL}/data/${dataFilename}`;\n      get(dataURL)\n        .then(({ data: str }) => {\n          const extension = dataFilename.split('.').pop();\n          let newData;\n          if (extension === 'csv') {\n            newData = csvParse(str);\n          } else if (extension === 'geojson' || extension === 'json') {\n            newData = str;\n          }\n\n          setData(newData);\n          setLoadingData(false);\n        })\n        .catch((err) => {\n          setLoadingData(false);\n        })\n    }\n\n  }, [dataFilename])\n  return loadingData ? <div>Loading</div> : children(data)\n}\n\nexport default DataProvider;","\nimport { scaleLinear } from 'd3-scale';\nimport { extent, range, max } from 'd3-array';\nimport { useRef, useState, useEffect } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst { generic } = colorsPalettes;\n\n/**\n * LineChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data\n * @param {string} title \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * @param {array} annotations\n * @params {string} annotations[n].type ['span]\n * @params {number} annotations[n].start\n * @params {number} annotations[n].end\n * @params {string} annotations[n].axis ['x', 'y']\n * @params {string} annotations[n].label\n * \n * @param {function} tooltip\n * \n * @returns {react}\n */\nconst LineChart = ({\n  data,\n  title,\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  color,\n  x,\n  y,\n  tooltip,\n  margins: inputMargins = {},\n  annotations = []\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth - legendWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: yTickFormat,\n    tickSpan: yTickSpan,\n    domain: initialYDomain,\n    fillGaps\n  } = y;\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n  } = x;\n  let colorPalette;\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorModalities = uniq(data.map(d => d[color.field]));\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  const xDomain = initialXDomain || extent(data.filter(d => +d[y.field]).map(d => +d[x.field]));\n  const yDomain = initialYDomain || [0, max(data.map(d => +d[y.field]))];\n\n  const xScale = scaleLinear().domain(xDomain).range([margins.left, width - margins.right]).nice();\n  const yScale = scaleLinear().domain(yDomain).range([height - margins.bottom, margins.top]).nice();\n  const groups = color ? Object.entries(groupBy(data, d => d[color.field])) : [[undefined, data]];\n  let { values: xAxisValues } = axisPropsFromTickScale(xScale);\n  let { values: yAxisValues } = axisPropsFromTickScale(yScale, 10);\n  if (xTickSpan) {\n    xDomain[0] = xDomain[0] - xDomain[0] % xTickSpan;\n    xDomain[1] = xDomain[1] + (xTickSpan - xDomain[0] % xTickSpan);\n    xAxisValues = range(xDomain[0], xDomain[1], xTickSpan);\n    xScale.domain(xDomain);\n  }\n  if (yTickSpan) {\n    yDomain[0] = yDomain[0] - yDomain[0] % yTickSpan;\n    yDomain[1] = yDomain[1] + (yTickSpan - yDomain[0] % yTickSpan);\n    yAxisValues = range(yDomain[0], yDomain[1], yTickSpan);\n    yScale.domain(yDomain)\n  }\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"LineChart GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            <g className=\"axis left-axis ticks\">\n              <text x={margins.left - 10} y={margins.top - 10} className=\"axis-title\">\n                {y.title || y.field}\n              </text>\n              {\n                yAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(0, ${yScale(value)})`}\n                  >\n                    <text x={margins.left - 10} y={3}>\n                      {typeof yTickFormat === 'function' ? yTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"tick-mark\"\n                      x1={margins.left - 5}\n                      x2={margins.left}\n                      y1={0}\n                      y2={0}\n                    />\n                    <line\n                      className=\"background-line\"\n                      x1={margins.left}\n                      x2={xScale(xAxisValues[xAxisValues.length - 1])}\n                      y1={0}\n                      y2={0}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"axis bottom-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(${xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={height - margins.bottom + 20}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={yScale(yAxisValues[yAxisValues.length - 1])}\n                      y2={height - margins.bottom}\n                    />\n                    <line\n                      className=\"tick-mark\"\n                      x1={0}\n                      x2={0}\n                      y1={height - margins.bottom}\n                      y2={height - margins.bottom + 5}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"annotations-container\">\n              {\n                annotations\n                .filter(a => a.axis === 'x')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatHeight = height - yScale(yAxisValues[yAxisValues.length - 1]) - margins.bottom;\n                  const thatY1 = height - margins.bottom;\n                  const thatY2 = yScale(yAxisValues[yAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation x-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={xScale(start)}\n                        width={xScale(end) - xScale(start)}\n                        height={thatHeight}\n                        y={thatY2}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                      <line\n                        x1={xScale(start)}\n                        x2={xScale(start)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={xScale(end)}\n                        x2={xScale(end)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={xScale(end) + 20} \n                        x2={xScale(end) + 10} \n                        y1={thatY2 + labelPosition - 5}\n                        y2={thatY2 + labelPosition - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                      <text\n                        x={xScale(end) + 22}\n                        y={thatY2 + labelPosition}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n              {\n                annotations\n                .filter(a => a.axis === 'y')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatX1 = margins.left;\n                  const thatX2 = xScale(xAxisValues[xAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation y-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={thatX1}\n                        width={thatX2 - thatX1}\n                        y={yScale(start)}\n                        height={Math.abs(yScale(end) - yScale(start))}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                       <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(start)}\n                        y2={yScale(start)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(end)}\n                        y2={yScale(end)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={thatX1 + labelPosition - 5} \n                        x2={thatX1 + labelPosition - 5} \n                        y1={yScale(start) - 15}\n                        y2={yScale(start) - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                     <text\n                        x={thatX1 + labelPosition}\n                        y={yScale(start) - 10}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n            </g>\n            <g className=\"lines-container\">\n              {\n                groups.map(([groupName, items], groupIndex) => {\n                  const color = colorPalette && groupName ? colorPalette[groupName] : generic.dark;\n                  return (\n                    <g key={groupIndex}>\n                      {\n                        items.map((item, itemIndex) => {\n                          let next;\n                          let consecutive;\n                          const hasNext = itemIndex < items.length - 1;\n                          if (hasNext) {\n                            next = items[itemIndex + 1];\n                            consecutive = +item[x.field] + 1 === +next[x.field];\n                          }\n                          return (\n                            <>\n                              {\n                                (hasNext && fillGaps)\n                                  || (hasNext && consecutive && +item[y.field] && +next[y.field])\n                                  ?\n                                  <line\n                                    className=\"chart-line\"\n                                    x1={xScale(+item[x.field])}\n                                    x2={xScale(+next[x.field])}\n                                    y1={yScale(+item[y.field])}\n                                    y2={yScale(+next[y.field])}\n                                    style={{ stroke: color }}\n                                  />\n                                  : null\n                              }\n                              {\n                                +item[y.field] > 0 ?\n                                  <g key={itemIndex} className=\"data-dot-container\">\n                                    <circle\n                                      className=\"data-dot\"\n                                      fill={color}\n                                      r={height / 200}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                    />\n                                    <circle\n                                      className=\"data-dot-big\"\n                                      fill={color}\n                                      r={5}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                    />\n                                    <circle\n                                      fill={'transparent'}\n                                      r={5}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                      data-tip={tooltip ? tooltip(item) : undefined}\n                                      data-for=\"line-tooltip\"\n                                    />\n                                  </g>\n                                  : null\n                              }\n                            </>\n                          )\n                        })\n                      }\n                    </g>\n                  );\n                })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight + margins.top\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([genre, color], genreIndex) => (\n                        <li\n                          key={genre}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {genre}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"line-tooltip\" />\n    </>\n  )\n}\nexport default LineChart;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"8 min read\",\"minutes\":7.975,\"time\":478500,\"words\":1595}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport SvgChart from '../../components/SvgChart';\nimport VegaChart from '../../components/VegaChart';\nimport NetworkGraphChart from '../../components/NetworkGraphChart';\nimport GeographicMapChart from '../../components/GeographicMapChart';\nimport TriangleChart from '../../components/TriangleChart';\nimport BoatsIllustration from '../../components/BoatsIllustration';\nimport DataProvider from '../../components/DataProvider';\nimport LineChart from '../../components/LineChart';\nimport BarChart from '../../components/BarChart';\nimport colorPalettes from '../../colorPalettes.js';\nimport { Step3Objects } from '../../visualizations/PrincipalVisualizationPart3/renderObjectsFunctions.js'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Test en prod`}</p>\n    <h2 {...{\n      \"id\": \"carto-en-reactd3svg\"\n    }}>{`Carto en react+d3+SVG`}</h2>\n    <p>{`Ci-dessous un proto/boilerplate pour rendre du svg + données avec la galaxie d3 + du rendu direct en SVG via react.`}</p>\n    <h3 {...{\n      \"id\": \"fond-de-carte---test-custom-layer-avec-config-coast-from-nantes-to-bordeaux\"\n    }}>{`Fond de carte - test custom layer avec config “coast from Nantes to Bordeaux”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'part_3_step3_viz_customs_offices_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname'\n          }\n        }, {\n          type: 'custom',\n          data: visData,\n          renderObjects: Step3Objects\n        }]} projectionTemplate='coast from Nantes to Bordeaux' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider> \n    <h3 {...{\n      \"id\": \"fond-de-carte---test-flows-avec-config-world\"\n    }}>{`Fond de carte - test flows avec config “World”`}</h3>\n    <DataProvider data={'world_1789_23mars2021_level0.json'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'aggregated_flows.json'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'flows',\n          data: visData,\n          size: {\n            field: 'tonnages_cumulés'\n          }\n        }]} projectionTemplate='World' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-france\"\n    }}>{`Fond de carte - config “France”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'ports_locations_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'points',\n          data: visData,\n          color: {\n            field: 'admiralty',\n            palette: colorPalettes.admiralties\n          },\n          size: {\n            field: 'customs_region'\n          },\n          label: {\n            field: 'port'\n          }\n        }]} projectionTemplate='France' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-rotated-poitou\"\n    }}>{`Fond de carte - config “rotated Poitou”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'part_3_step1_viz_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'points',\n          data: visData,\n          color: {\n            field: 'customs_office',\n            palette: colorPalettes.customs_office\n          },\n          size: {\n            field: 'mean_tonnage'\n          },\n          label: {\n            field: 'port'\n          }\n        }]} projectionTemplate='rotated Poitou' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-poitou\"\n    }}>{`Fond de carte - config “Poitou”`}</h3>\n    <p>{`Cartographie des destination des bateaux aillant un port d’attache dans la région, par tonnage cumulé (couleur = amirauté) :`}</p>\n    <GeographicMapChart backgroundFilename=\"cartoweb_france_1789_geojson.geojson\" dataFilename=\"navigo-out-of-ships-from-region.csv\" markerColor=\"pointcall_admiralty\" markerSize=\"tonnage\" label=\"pointcall\" showLabels projectionTemplate='Poitou' height={800} width={1200} mdxType=\"GeographicMapChart\" />\n    <h2 {...{\n      \"id\": \"fond-de-carte-sans-template-pour-la-config\"\n    }}>{`Fond de carte sans template pour la config`}</h2>\n    <GeographicMapChart backgroundFilename=\"cartoweb_france_1789_geojson.geojson\" dataFilename=\"navigo-out-of-ships-from-region.csv\" markerColor=\"pointcall_admiralty\" markerSize=\"tonnage\" label=\"pointcall\" showLabels mdxType=\"GeographicMapChart\" />\n    {\n      /* # Tests composant LineChart\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data.filter(d => d.region === 'France')}\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 5,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n             annotations={[\n                   {\n                     type: 'span',\n                     start: 1756,\n                     end: 1763,\n                     axis: 'x',\n                     label: 'guerre de sept ans'\n                   },\n                   {\n                     type: 'span',\n                     start: 400000000,\n                     end: 500000000,\n                     axis: 'y',\n                     label: 'période de faste'\n                   }\n                 ]}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de titre\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'Région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de line chart (fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`,\n               fillGaps: true\n             }}\n             color={{\n               field: 'region',\n               title: 'Région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de linechart (minimum de props)\"\n             // width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               // title: 'année',\n             }}\n             y={{\n               field: 'Imports',\n               // title: 'imports',\n               // tickSpan: 100000000,\n               // tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               // title: 'Région'\n             }}\n             // tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      # Tests composant BarChart\n      ## Horizontal bar chart\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart (sans fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickFormat: (d, i) => +d%5 === 0 ? d : undefined,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             annotations={[\n               {\n                 type: 'span',\n                 start: 1756,\n                 end: 1763,\n                 axis: 'x',\n                 label: 'guerre de sept ans'\n               },\n               {\n                 type: 'span',\n                 start: 400000000,\n                 end: 500000000,\n                 axis: 'y',\n                 label: 'période de faste'\n               }\n             ]}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart (fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked, fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (grouped, fill gaps)\"\n             width={window.innerWidth - 20}\n             layout={'groups'}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped, no fill gaps)\"\n             width={window.innerWidth - 20}\n             layout={'groups'}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      ## Vertical bar charts\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             y={{\n               field: 'year',\n               title: 'année',\n               // tickFormat: (d, i) => +d%5 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               // tickSpan: 1000000,\n               //tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_LR_partners.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked)\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             height={200}\n             y={{\n               field: 'year',\n               title: 'année',\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'partner',\n               title: 'partenaire'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} depuis ${d.partner}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_LR_partners.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked, dimensionnement par la hauteur des lignes)\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             y={{\n               field: 'year',\n               title: 'année',\n               rowHeight: 30,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'partner',\n               title: 'partenaire'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} depuis ${d.partner}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped)\"\n             width={window.innerWidth - 20}\n             orientation={'vertical'}\n             layout={'groups'}\n             y={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 50000000,\n               tickFormat: v => `${v / 1000}k lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped - dimensionnement par hauteur des lignes)\"\n             width={window.innerWidth - 20}\n             orientation={'vertical'}\n             layout={'groups'}\n             y={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               rowHeight: 50\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 50000000,\n               tickFormat: v => `${v / 1000}k lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      ## Test triangle \n      <TriangleChart \n       dataFilename=\"part_3_step1_viz_data.csv\" \n       rowHeight={300}\n       totalWidth = {1600}\n       />\n      ## Test courbes de bézier\n      <BezierComponent\n       dataFilename=\"part_3_step3_viz_customs_offices_data.csv\"\n       cx={300}\n       cy={250}\n       r={210}\n       inPercentage={10}\n       // start={Math.PI / 2}\n       // end={Math.PI * 3 / 2}\n       />\n      # Test bateaux\n      <BoatsIllustration />\n      \n      # Commerce multi-échelle dans la région de La Rochelle\n      \n      Voici un tour d'horizon des modules react préparés pour faciliter le développement :\n      ## Image SVG (avec webpack)\n      On intègre une image  SVG depuis le local (elle sera donc packée par webpack) :\n      \n      ## Image SVG (sans webpack)\n      On intègre ici directement une image à partir de son URL en ligne (depuis le dossier `public`)\n      ##### ! cassé pour le moment\n      // <SvgChart path =\"/svg/ports-region-1789.svg\" />\n      ## Visualisation vega\n      Les visualisations vega ont besoin d'un fichier csv stocké dans le dossier `public/data` et d'une spec vega.\n      <VegaChart \n       data=\"sorties_navires_vers_colonies.csv\" \n       spec={{\n         \"mark\": \"rect\",\n         \"encoding\": {\n           \"x\": {\n             \"field\": \"port_depart\",\n             \"type\": \"nominal\"\n           },\n           \"y\": {\n             \"field\": \"port_destination\",\n             \"type\": \"nominal\"\n           },\n           \"color\": {\n             \"type\": \"quantitative\",\n             \"field\": \"tonnage\",\n             \"aggregate\": \"sum\"\n           }\n           \n         }\n       }}\n      />\n      ## Réseau avec sigma\n      Les visualisations sigma ont besoin d'un fichier gexf stocké dans le dossier `public/data`.\n      Paramètres :\n      * `nodeColor` : attribut pour couleur\n      * `nodeSize` : attribut pour taille\n      * `labelDensity` : densité des labels (float dans [0, 1])\n      \n      <NetworkGraphChart \n       data=\"toflit_aggregate_1789_only_out.gexf\" \n       nodeColor={`admiralty`}\n       nodeSize={`inside_degree`}\n       labelDensity={0.5}\n      />\n      */\n    }\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"carto-en-reactd3svg\",\n    level: 2,\n    title: \"Carto en react+d3+SVG\",\n    children: [\n        {\n              id: \"fond-de-carte---test-custom-layer-avec-config-coast-from-nantes-to-bordeaux\",\n              level: 3,\n              title: \"Fond de carte - test custom layer avec config “coast from Nantes to Bordeaux”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---test-flows-avec-config-world\",\n              level: 3,\n              title: \"Fond de carte - test flows avec config “World”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-france\",\n              level: 3,\n              title: \"Fond de carte - config “France”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-rotated-poitou\",\n              level: 3,\n              title: \"Fond de carte - config “rotated Poitou”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-poitou\",\n              level: 3,\n              title: \"Fond de carte - config “Poitou”\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"fond-de-carte-sans-template-pour-la-config\",\n    level: 2,\n    title: \"Fond de carte sans template pour la config\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import { useState, useEffect, useMemo, useReducer } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport {v4 as genId} from 'uuid';\n\nimport {useInterval} from '../../helpers/hooks';\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\nimport './BoatsIllustration.scss';\n\nconst PASS_DURATION = 100000;\nconst UPDATE_RATE = 4000;\n\nconst Hull = ({\n  width,\n  height,\n}) => {\n  const bottomRightX = width * .7;\n  const bottomLeftX = width * .05;\n  return (\n    <path\n      className=\"hull\"\n      d={`M 0 0 L ${width / 3} ${0} L ${width / 3} ${height / 4} L ${width * .6} ${height / 4} L ${width * .6} 0 L ${width} 0 L ${bottomRightX} ${height} L ${bottomLeftX} ${height} Z`}\n    />\n  )\n\n}\n\nconst Sail = ({\n  width,\n  height,\n  sailSpeed,\n  distance = 1\n}) => {\n\n  const randomFactor = useMemo(() => Math.random() * .4 + 1, [])\n  \n  const minRightX = width;\n  const minLeftX = 0;\n  const maxLeftX = 5 * distance;\n  const maxRightX = width + 5 * distance;\n\n  const step1 = {\n    points: `0,${height * .1} ${width},${0} ${maxRightX},${height / 2} ${width},${height * .9} 0,${height} ${maxLeftX} ${height / 2}`\n  }\n  const step2 = {\n    points: `0,${height * .1} ${width},${0} ${minRightX},${height / 2} ${width},${height * .9} 0,${height} ${minLeftX} ${height / 2}`\n  }\n\n  const {points} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 500 * sailSpeed * randomFactor }\n  });\n  return (\n    <>\n      <animated.polygon\n        points={points}\n        className=\"sail\"\n      />\n    </>\n  )\n}\n\nconst Matt = ({\n  width,\n  height,\n  sailSpeed,\n  distance\n}) => {\n  const secondWidth = width * .7;\n  return (\n    <>\n      <g transform={`translate(${width/2 - secondWidth/2}, ${height * .1})`}>\n        <Sail sailSpeed={sailSpeed} distance={distance} width={secondWidth} height={height /4} />\n      </g>\n      <g transform={`translate(0, ${height * .4})`}>\n        <Sail sailSpeed={sailSpeed} distance={distance} width={width} height={height * .45} />\n      </g>\n      <line\n        x1={width / 2}\n        x2={width / 2}\n        y1={0}\n        y2={height * 1.1}\n      />\n    </>\n  )\n}\n\nconst Boat = ({\n  x,\n  height,\n  distance\n}) => {\n  const [hullHeightRatio, setHullHeightRatio] = useState(.2);\n  const [mattNumber, setMattNumber] = useState(1);\n  const matts = useMemo(() => {\n    let m = [];\n    for (let i = 0; i < mattNumber; i++) {\n      m.push({ heightRatio: 1 })\n    }\n    return m;\n  }, [mattNumber])\n\n  const step1 = {\n    transform: `skewX(-3)`\n  }\n  const step2 = {\n    transform: `skewX(3)`\n  }\n  const {transform} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 3000 }\n  });\n\n\n  useEffect(() => {\n    const nOfMatts = Math.round(Math.random() * 2) + 1;\n    const newHullHeightRatio = .1 + Math.random() * .1;\n    setMattNumber(nOfMatts)\n    setHullHeightRatio(newHullHeightRatio);\n  }, []);\n  const randomFactor = useMemo(() => Math.random(), [])\n\n\n  const boatWidth = height;\n\n  return (\n    <animated.g\n      className=\"boat\"\n      transform={transform}\n    >\n      {\n        matts.map((matt, mattIndex) => {\n          const displace = (boatWidth * .9);\n          const x = ((mattIndex) / (matts.length)) * displace;\n          const width = (boatWidth / matts.length) * .8;\n          return (\n            <g key={mattIndex} className=\"matt\" transform={`translate(${x}, 0)`}>\n              <Matt\n                width={width}\n                height={height - height * hullHeightRatio}\n                sailSpeed={randomFactor * .5 + 1}\n                distance={distance}\n              />\n            </g>\n          )\n        })\n      }\n      <g transform={`translate(0, ${height - height * hullHeightRatio})`}>\n        <Hull\n          width={boatWidth}\n          height={height * hullHeightRatio}\n        />\n      </g>\n    </animated.g>\n  )\n}\n\nconst Bird = ({\n  boatHeight,\n  containerHeight,\n  distance\n}) => {\n  \n  const dimension = containerHeight / 20 * (distance / 2);\n  const step1 = {\n    points: `0,${0}, ${dimension/2},${dimension/3} ${dimension},${0} ${dimension/2} ${dimension / 2}`\n  }\n  const step2 = {\n    points: `0,${dimension}, ${dimension/2},${0} ${dimension},${dimension} ${dimension/2} ${dimension / 3}`\n  }\n\n  const moveSteps = useMemo(() => {\n    const steps = []\n    for (let i = 0 ; i < 30 ; i++) {\n      const y = Math.random() * boatHeight * 1.3 + containerHeight - boatHeight * 1.5;\n      const x = Math.random() * boatHeight * 2 - boatHeight;\n      const scale = Math.random() + .5\n      steps.push({\n        transform: `translate(${x}, ${y})scale(${scale})`\n      })\n    }\n    return steps;\n  }, [boatHeight, containerHeight])\n\n  const {points} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 300 }\n  });\n  const {transform} = useSpring({\n    loop: true,\n    to: [...moveSteps, moveSteps[0]],\n    from: moveSteps[0],\n    config: { duration: 900 }\n  });\n  return (\n    <animated.g className=\"bird\" transform={transform}>\n      <animated.polygon\n        points={points}\n      />\n    </animated.g>\n  )\n}\n\nconst MovingBoat = ({\n  containerHeight,\n  containerWidth,\n  rightToLeft,\n  startAt,\n  size,\n  distance = 1\n}) => {\n  const birds = useMemo(() => {\n    if (distance > .5 && Math.random() > .5) {\n      const numberOfBirds = 1 + Math.round(Math.random() * 20);\n      let b = [];\n      for (let i = 0 ; i < numberOfBirds ; i++) {\n        b.push(i);\n      }\n      return b;\n    } else {\n      return [];\n    }\n  }, [distance])\n  const start = -containerWidth * 0.3; \n  const end = containerWidth * 1.3;\n  const step1 = {\n    transform: `translate(${rightToLeft ? end : start}, 0)`\n  }\n  const step2 = {\n    transform: `translate(${rightToLeft ? start : end}, 0)`\n  }\n  if (startAt) {\n    step1.transform =  `translate(${startAt}, 0)`\n  }\n  const randomFactor = useMemo(() => Math.random(), [])\n  const {transform} = useSpring({\n    from: step1,\n    to: step2,\n    config: { duration: PASS_DURATION * (2 - distance * (1 + randomFactor / 10)) }\n  });\n  const height = containerHeight * 0.2 * size * distance;\n  return (\n    <animated.g\n      transform={transform}\n    >\n      <g style={{opacity: distance}} transform={rightToLeft ? 'scale(-1, 1)' : ''}>\n        <g transform={`translate(0, ${containerHeight - height})`}>\n          <Boat\n            x={0}\n            height={height}\n            distance={distance}\n          />\n        </g>\n        {\n          birds.map(index => (\n            <Bird\n              containerHeight={containerHeight}\n              boatHeight={height}\n              distance={distance}\n              key={index}\n            />\n          ))\n        }\n        \n      </g>\n    </animated.g>\n  )\n}\n\n\nconst BoatsIllustration = ({\n  width: inputWidth = 1200,\n  height: inputHeight = 100,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const createBoat = (payload = {}) => {\n    const {startAt = 0} = payload;\n    const id = genId();\n    const distance = Math.random() * .8 + .2;\n    const rightToLeft = Math.random() >= .5;\n    const size = Math.round(Math.random() * 3) + 1;\n    return {\n      id,\n      distance, \n      rightToLeft,\n      size,\n      createdAt: new Date().getTime(),\n      startAt\n    }\n  }\n  const [boats, updateBoats] = useReducer((b, action) => {\n    switch(action.type) {\n      case 'removeBoat':\n        return Object.entries(b).reduce((res, [id, boat]) => {\n          if (id !== action.payload) {\n            return {\n              ...res,\n              [id]: boat\n            }\n          } else {\n            return res;\n          }\n        }, {});\n      case 'createBoat':\n      default:\n        const boat = createBoat(action.payload);\n        return {\n          ...b,\n          [boat.id]: boat\n        }\n    }\n  }, {});\n\n  useEffect(() => {\n    // add boats regularly\n    const timeout = setTimeout(() => {\n      // add boat\n      updateBoats({type: 'createBoat'})\n    }, PASS_DURATION / 10)\n    return () => clearTimeout(timeout)\n  }, [boats, updateBoats])\n\n  useInterval(() => {\n    const now = new Date();\n    Object.entries(boats).reduce((res, [id, boat]) => {\n      if (now.getTime() < boat.createdAt + PASS_DURATION * 1.3) {\n        return {\n          ...res,\n          [id]: boat\n        }\n      } else {\n        updateBoats({type: 'removeBoat', payload: id})\n        return res;\n      }\n    }, {})\n  }, UPDATE_RATE)\n\n  useEffect(() => {\n    for (let i = 0 ; i < 5 ; i++) {\n      updateBoats({type: 'createBoat', payload: {startAt: width * Math.random()}})\n    }\n  }, []);/* eslint react-hooks/exhaustive-deps : 0 */\n\n  return (\n    <svg className=\"BoatsIllustration\" width={width} height={height}>\n      {\n        Object.entries(boats).map(([id, {\n          distance, \n          rightToLeft, \n          size,\n          startAt\n        }]) => (\n          <MovingBoat \n            key={id} \n            distance={distance} \n            size={size} \n            rightToLeft={rightToLeft} \n            containerHeight={height} \n            containerWidth={width} \n            startAt={startAt}\n          />\n        ))\n      }\n    </svg>\n  )\n}\n\nexport default BoatsIllustration;","import BoatsIllustration from './BoatsIllustration';\n\nexport default BoatsIllustration;","\nimport {useContext, useEffect, useRef, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\n\nimport {VisualizationControlContext} from '../../helpers/contexts';\n\nconst Caller = ({id: visualizationId, ...props}) => {\n  const ref = useRef(null);\n  const [id] = useState(genId());\n  const {\n    activeVisualization,\n    onBlockClick,\n    onRegisterVisualization,\n    onUnregisterVisualization,\n  } = useContext(VisualizationControlContext);\n\n  useEffect(() => {\n    // on wrappe dans un setTimeout pour avoir une ref non-nulle vers le composant\n    setTimeout(() => {\n      let payload = {...props};\n      payload = {\n        ...payload,\n        ref,\n        visualizationId,\n        id\n      }\n      onRegisterVisualization(payload)\n    })\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id])\n\n  const onClick = e => {\n    if (typeof onBlockClick === 'function') {\n      onBlockClick(id, ref);\n    }\n  }\n  return (\n    <div\n      ref={ref}\n      onClick={onClick} \n      className={cx(\"Caller\", {\n        'is-active': activeVisualization && id === activeVisualization.id, \n        'is-clearfix': !visualizationId,\n        'is-hidden': process.env.NODE_ENV !== 'development',\n        'is-devmode': process.env.NODE_ENV === 'development',\n      })}\n    >\n      {\n        process.env.NODE_ENV === 'development' ?\n        <>\n          {\n          visualizationId ?\n          <>caller pour la visualisation <code>{visualizationId}</code> </>\n          :\n          <>caller sans id (agit comme un clearfix)</>\n        }{\n          Object.keys(props).length ? \n            <span>avec les paramètres {JSON.stringify(props)}</span>\n          : null\n        }\n        </>\n        :\n        null\n      }\n      \n    </div>\n  );\n}\n\nexport default Caller;","import Caller from './Caller';\n\nexport default Caller;","import { geoPath } from \"d3-geo\";\nimport { generatePalette } from '../../helpers/misc';\nimport { uniq } from 'lodash';\nimport cx from 'classnames';\nimport { useSpring, animated } from 'react-spring'\nimport { useEffect, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst GeoPart = ({ d: initialD, projection, project, palette, layer, width, height}) => {\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const currentD = project(initialD);\n\n  const animationProps = useSpring({\n    to: {\n      d: currentD\n    },\n    immediate: !isInited\n  });\n\n  // @todo do this cleanly (removing out of bound objects to improve performance)\n  // const boundsAbs = geoPath().bounds(initialD);\n  // const boundsRel = [projection(boundsAbs[0]), projection(boundsAbs[1])];\n  // let outOfBounds = boundsRel[0][0] > width;\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  });\n  return (\n    <animated.path\n      d={animationProps.d}\n      className=\"geopart\"\n      data-tip={layer.tooltip ? layer.tooltip(initialD) : undefined}\n      data-for=\"geo-tooltip\"\n      style={{\n        fill: layer.color !== undefined && palette !== undefined ? palette[initialD.properties[layer.color.field]] : 'transparent'\n      }}\n    />\n  )\n}\n\n\n// @TODO : mettre en place une palette de couleurs quantitative \n\nconst ChoroplethLayer = ({ layer, projection, width, height, reverseColors }) => {\n\n  let palette;\n  const project = geoPath().projection(projection);\n\n  if (!layer.data) {\n    console.info(layer);\n    return null;\n  }\n\n  if (layer.data.features && layer.color && layer.color.field) {\n    // colors palette building\n    const colorValues = uniq(layer.data.features.map(datum => datum.properties[layer.color.field]));\n    if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n      palette = layer.color.palette;\n    } else if (layer.color.generatedPalette) {\n      const colors = generatePalette('map', layer.data.features.length);\n      palette = colorValues.reduce((res, key, index) => ({\n        ...res,\n        [key]: colors[index]\n      }), {});\n    }\n  }\n\n  return (\n    <>\n      <g className={cx(\"ChoroplethLayer\", { 'reverse-colors': reverseColors })}>\n        {\n          layer.data.features.map((d, i) => {\n            return (\n              <GeoPart \n                key={d.properties.id || d.properties.name || i} \n                {...{projection, project, palette, layer, d, width, height}}\n              />\n            )\n          })\n        }\n      </g>  \n    </>\n  );\n\n}\n\nexport default ChoroplethLayer;","\nimport { useMemo } from 'react';\nimport { uniq } from 'lodash';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\n\nimport { generatePalette } from '../../helpers/misc';\nimport { useSpring, animated, Transition } from 'react-spring'\nimport { useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\n\nconst PointGroup = ({\n  projection,\n  datum,\n  layer,\n  opacity,\n  onGroupMouseEnter,\n  onGroupMouseLeave,\n  displayLabel\n}) => {\n  const { tooltip } = layer;\n  const { latitude, longitude, size: area, color, label, rawSize, labelPosition = 'right', labelSize, index } = datum;\n  const size = Math.sqrt(area / Math.PI)\n  const [x, y] = projection([+longitude, +latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { transform } = useSpring({\n    to: {\n      transform: `translate(${x},${y})`\n    },\n    immediate: !isInited\n  });\n  return (\n    <>\n      <animated.g\n        className=\"point-group\"\n        transform={transform}\n        style={{\n          zIndex: labelSize,\n          opacity: opacity\n        }}\n        onMouseEnter={() => onGroupMouseEnter(index)}\n        onMouseMove={() => onGroupMouseEnter(index)}\n        onMouseLeave={() => onGroupMouseLeave()}\n        data-for=\"geo-tooltip\"\n        data-tip={typeof tooltip === 'function' ? tooltip(datum) : undefined}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={size}\n          style={{ fill: color }}\n          className=\"marker\"\n        />\n        {\n          layer.size.displayMetric && labelSize > 6 ?\n            <text\n              x={0}\n              y={labelSize / 4}\n              textAnchor=\"middle\"\n              fontSize={labelSize / 2}\n              fill=\"white\"\n            >\n              {rawSize}\n            </text>\n            : null\n        }\n\n        {\n          label && displayLabel ?\n            <text\n              x={labelPosition === 'right' ? size + 5 : -size - 5}\n              y={size / 2}\n              fill={layer.color && layer.color.labelsColor}\n              textAnchor={labelPosition === 'right' ? 'start' : 'end'}\n              fontSize={labelSize}\n            >\n              {label}\n            </text>\n            : null\n        }\n      </animated.g>\n    </>\n\n  );\n}\n\nconst StackedLabelGroup = ({\n  layer,\n  datum,\n  thatIndex,\n  opacity,\n  stackedRowHeight,\n  onGroupMouseEnter,\n  onGroupMouseLeave,\n  labelFontSize,\n  projection\n}) => {\n  const { tooltip } = layer;\n  const { latitude, longitude, size: area, label, /*labelPosition = 'right', labelSize, index*/ } = datum;\n  const size = Math.sqrt(area / Math.PI)\n  const [x, y] = projection([+longitude, +latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { x2, y2, transformLabel } = useSpring({\n    to: {\n      x2: x - size,\n      y2: y,\n      transformLabel: `translate(${window.innerWidth * 0.01}, ${datum.labelY})`\n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g\n      style={{\n        // zIndex: labelSize,\n        opacity: opacity\n      }}\n      onMouseEnter={() => onGroupMouseEnter(thatIndex)}\n      onMouseMove={() => onGroupMouseEnter(thatIndex)}\n      onMouseLeave={() => onGroupMouseLeave()}\n      data-for=\"geo-tooltip\"\n      data-tip={typeof tooltip === 'function' ? tooltip(datum) : undefined}\n    >\n      <animated.g className=\"label-container\" transform={transformLabel}>\n        <text style={{ fontSize: labelFontSize }}>\n          {\n            label\n          }\n        </text>\n      </animated.g>\n      <animated.line\n        x1={labelFontSize * label.length * .5 + window.innerWidth * 0.01}\n        y1={datum.labelY - stackedRowHeight * .2}\n        x2={x2}\n        y2={y2}\n      />\n    </animated.g>\n  )\n}\n\nconst PointsLayer = ({ layer, projection, width, height }) => {\n\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  /**\n    * Data aggregation for viz (note : could be personalized if we visualize other things than points)\n  */\n  const markerData = useMemo(() => {\n    if (layer.data) {\n\n      // regroup data by coordinates\n      const coordsMap = {};\n      layer.data.forEach(datum => {\n        // id\n        const mark = datum.latitude + ',' + datum.longitude;\n        if (!coordsMap[mark]) {\n          coordsMap[mark] = {\n            label: layer.label ? datum[layer.label.field] : undefined,\n            labelPosition: layer.label ? layer.label.position : undefined,\n            latitude: +datum.latitude,\n            longitude: +datum.longitude,\n            color: layer.color !== undefined ? datum[layer.color.field] : 'default',\n            size: (layer.size !== undefined && layer.size.field !== undefined) ? isNaN(+datum[layer.size.field]) ? 0 : +datum[layer.size.field] : 0\n          }\n        } else {\n          coordsMap[mark].size += (isNaN(+datum[layer.size.field]) ? 0 : +datum[layer.size.field])\n        }\n      })\n\n      let grouped = Object.entries(coordsMap).map(([_mark, datum]) => datum);\n      // console.log(\"grouped : \", grouped)\n\n\n      let palette;\n      if (layer.color !== undefined) {\n        // colors palette building\n        const colorValues = uniq(grouped.map(g => g.color));\n        if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n          palette = layer.color.palette;\n        } else {\n          const colors = generatePalette('map', colorValues.length);\n          palette = colorValues.reduce((res, key, index) => ({\n            ...res,\n            [key]: colors[index]\n          }), {});\n        }\n      }\n\n      // size building\n\n      // compute size (would have been more elegand with a ternary but I did not manage to write it properly)\n      let sizeCoef = width / 300; // default size\n      if (layer.size !== undefined && layer.size.custom !== undefined) {\n        sizeCoef = parseInt(layer.size.custom * width / 100);\n      }\n\n      const sizeExtent = extent(grouped.map(g => g.size));\n      // basing the scale on area rather than radius\n      const radiusRange = [3, width / 30];\n      const areaRange = radiusRange.map(r => Math.PI * r * r);\n      const sizeScale = scaleLinear().domain(sizeExtent).range(areaRange) // adapt size to width, @TODO : enable to parameter scale (with domain & range)\n      const labelSizeScale = scaleLinear().domain(sizeExtent).range([8, width / 30]) // adapt size to width, @TODO : enable to parameter scale (with domain & range)\n      grouped = grouped.map(datum => ({\n        ...datum,\n        color: layer.color !== undefined ? palette[datum.color] : 'grey',\n        size: layer.size !== undefined ? layer.size.custom !== undefined ? sizeCoef : sizeScale(datum.size) : width / 100,\n        rawSize: datum.size,\n        labelSize: layer.size !== undefined ? labelSizeScale(datum.size) : width / 100\n      }))\n\n      // console.log(\"grouped (PointsLayer): \", grouped)\n      return grouped;\n    }\n  }, [projection, width, layer])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  let visibleMarkers = markerData\n    .filter(({ latitude, longitude }) => latitude && longitude && !isNaN(latitude) && !isNaN(longitude))\n    .sort((a, b) => {\n      if (a.latitude > b.latitude) {\n        return 1;\n      }\n      return -1;\n    })\n\n  const onGroupMouseEnter = index => {\n    if (hoveredIndex !== index)\n      setHoveredIndex(index);\n  }\n  const onGroupMouseLeave = () => {\n    setTimeout(() => {\n      if (hoveredIndex !== null)\n        setHoveredIndex(null);\n    })\n  }\n  const stackedLabelsTop = height * .1;\n  const stackedLabelsHeight = height * .9;\n  const stackedRowHeight = stackedLabelsHeight / visibleMarkers.length;\n  const maxLabelFontSize = window.innerHeight * 0.02;\n  const labelFontSize = stackedRowHeight < maxLabelFontSize ? stackedRowHeight : maxLabelFontSize;\n  if (layer.stackLabels) {\n    visibleMarkers = visibleMarkers\n      .sort((a, b) => {\n        if (a.latitude > b.latitude) {\n          return -1;\n        }\n        return 1;\n      })\n      .map((d, i) => ({\n        ...d,\n        labelY: stackedRowHeight * i + stackedLabelsTop\n      }))\n  }\n  visibleMarkers = visibleMarkers.map((d, index) => ({ ...d, index }));\n  return (\n    <g className=\"PointsLayer\">\n      {\n        layer.stackLabels ?\n          <g className=\"stacked-labels-container\">\n            <Transition\n              // items={visibleMarkers.map((d, i) => ({...d, labelPosition: i%2 === 0 ? 'left' : 'right', index: i}))}\n              items={visibleMarkers}\n              from={{ opacity: 0 }}\n              enter={{ opacity: 1 }}\n              leave={{ opacity: 0 }}\n            >\n              {({ opacity }, datum, thatIndex) => (\n                <StackedLabelGroup\n                  key={datum.label}\n                  {...{\n                    projection,\n                    datum,\n                    layer,\n                    opacity: hoveredIndex !== null ? hoveredIndex === datum.index ? 1 : .1 : opacity,\n                    thatIndex: datum.index,\n                    onGroupMouseEnter,\n                    onGroupMouseLeave,\n                    stackedRowHeight,\n                    labelFontSize,\n                  }}\n                />\n              )\n\n              }\n            </Transition>\n          </g>\n          : null\n      }\n      <Transition\n        // items={visibleMarkers.map((d, i) => ({...d, labelPosition: i%2 === 0 ? 'left' : 'right', index: i}))}\n        items={visibleMarkers}\n        from={{ opacity: 0 }}\n        enter={{ opacity: 1 }}\n        leave={{ opacity: 0 }}\n      >\n        {({ opacity }, datum, index) => (\n          <PointGroup\n            key={datum.label}\n            {...{\n              projection,\n              datum,\n              layer,\n              opacity: hoveredIndex !== null ? hoveredIndex === datum.index ? 1 : .1 : opacity,\n              index: datum.index,\n              onGroupMouseEnter,\n              onGroupMouseLeave,\n              displayLabel: !layer.stackLabels\n            }}\n          />\n        )\n\n        }\n      </Transition>\n      {/* {\n        visibleMarkers\n          .map((datum, index) => {\n            return (\n              <PointGroup\n                key={datum.label}\n                {...{ projection, datum, layer }}\n              />\n            )\n          })\n      } */}\n    </g>\n  );\n}\n\nexport default PointsLayer;","\nimport { useMemo, useState, useEffect } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport cx from 'classnames';\nimport { max } from 'd3-array';\nimport { uniq } from 'lodash';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nimport { useSpring, animated } from 'react-spring'\n\n/*\nPrincipe : path entre deux point géographiques, dont le stroke peut varier, et on peut avoir la direction avec une fleche \n\nformat des données attendu (json) : \n\nExemple :\n\"flow_id\": \"45.95_-0.9_46.166667_-1.15\", \n\"port_dep\": \"Charente\", \n\"port_dest\": \"La Rochelle\", \n\"latitude_dep\": 45.95, \n\"longitude_dep\": -0.9, \n\"latitude_dest\": 46.166667, \n\"longitude_dest\": -1.15, \n\"nb_flows\": 22, \n\"tonnages_cumulés\": 730}\n\n@TODO : régler le fait que la pointe des flèches ne soit pas à l'arrivée (en l'état c'est la base du triangle qui est sur les coords d'arrivée) => se règle en reculant le triangle :   viewBox=\"-10 0 10 10\" &  <path d=\"M -10 0 L 0 5 L -10 10 Z\" fill=\"black\" /> (à ce moment il fut rétrécir la longueur du path qui fait la barre de la flèche)\n@TODO : mettre un point au départ de mes flows ? (pas adapté quand on a des points de départ et d'arrivée qui se recoupent)\n*/\n\nconst FlowGroup = ({\n  arrowSize,\n  xDep: inputXDep,\n  yDep: inputYDep,\n  xDest: inputXDest,\n  yDest: inputYDest,\n  strokeWidth: inputStrokeWidth,\n  width,\n  height,\n  projectionTemplate,\n  datum,\n  layer,\n  color = 'black',\n}) => {\n  const footprint = `${inputXDep}-${inputYDep}-${inputXDest}-${inputYDest}`\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, []);\n  let path = `M ${inputXDep} ${inputYDep} L ${inputXDest} ${inputYDest}`;\n  // let cp1X = 0, cp1Y = 0, cp2X = 0, cp2Y = 0;\n  // left to right\n  // if (inputXDest > inputXDep) {\n  //   cp1Y = inputYDep;\n  //   cp2Y = inputYDest;\n  //   cp1X = inputXDep - Math.log(inputXDest - inputXDep) // inputXDest + (inputXDest - inputXDep) / 2;\n  //   cp2X = inputXDep - Math.log(inputXDest - inputXDep) // inputXDest + (inputXDest - inputXDep) / 2;\n  //   // @todo clean that someday\n  //   if (inputYDest > height / 2 && projectionTemplate === \"World\") {\n  //     cp1X -= width * .3;\n  //     cp2X -= width * .3;\n  //   }\n  //   // top to bottom\n  //   if (inputYDest > inputYDep) {\n  //     if (projectionTemplate === 'France') {\n  //       cp1X -= width;\n  //       cp2X -= width;\n  //     }\n  //     path = `M ${inputXDep} ${inputYDep} C ${cp1X}, ${cp1Y} ${cp2X}, ${cp2Y} ${inputXDest}, ${inputYDest}`;\n  //     // bottom to top\n  //   } else {\n  //     // cp2X = inputXDest;\n  //     cp1X = inputXDep - (inputXDest - inputXDep) * 2.5;\n  //     cp2X = inputXDep - (inputXDest - inputXDep) * 2.5;\n  //     cp1Y = inputYDep;\n  //     cp2Y = inputYDest;\n  //     path = `M ${inputXDep} ${inputYDep} C ${cp1X}, ${cp1Y} ${cp2X}, ${cp2Y} ${inputXDest}, ${inputYDest}`;\n  //   }\n  //   // right to left\n  // } else {\n  //   // top to bottom\n  //   if (inputYDest > inputYDep) {\n  //     cp1X = inputXDest + (width / 4 + inputXDest > inputXDep ? 0 : width / 4);\n  //     cp1Y = inputYDep;\n\n  //     cp2X = inputXDest + (width / 4 + inputXDest > inputXDep ? 0 : width / 4);\n  //     cp2Y = inputYDep;\n\n  //     path = `M ${inputXDep} ${inputYDep} C ${cp1X}, ${cp1Y} ${cp2X}, ${cp2Y} ${inputXDest}, ${inputYDest}`;\n  //     // bottom to top\n  //   } else {\n\n\n  //     // path = `M ${inputXDep} ${inputYDep} C ${cp1X}, ${cp1Y} ${cp2X}, ${cp2Y} ${inputXDest}, ${inputYDest}`;\n  //   }\n  // }\n  const { d, labelDepTransform, labelDestTransform, strokeWidth } = useSpring({\n    to: {\n      xDep: inputXDep,\n      yDep: inputYDep,\n      xDest: inputXDest,\n      yDest: inputYDest,\n      d: path,\n      strokeWidth: fixSvgDimension(inputStrokeWidth),\n      labelDepTransform: `translate(${inputXDep}, ${inputYDep})`,\n      labelDestTransform: `translate(${inputXDest}, ${inputYDest})`,\n      arrowPath: `M ${inputXDep} ${inputYDep} L ${inputXDest} ${inputYDest}`\n    },\n    immediate: !isInited\n  });\n  const fontSize = window.innerWidth * 0.01;\n  return (\n    <g className=\"flow-group\">\n      <defs>\n        <marker id={`triangle-${footprint}`} viewBox=\"0 0 10 10\"\n          refX=\"1\" refY=\"5\"\n          markerUnits=\"strokeWidth\"\n          markerWidth={arrowSize} markerHeight={arrowSize}\n          orient=\"auto\">\n          <path d=\"M 0 0 L 10 5 L 0 10 Z\" fill={color} />\n        </marker>\n      </defs>\n      {/* <animated.line\n      x1={xDep}\n      y1={yDep}\n      x2={xDest}\n      y2={yDest}\n      stroke=\"blue\"\n    /> */}\n      {/* <circle\n        r={4}\n        cx={cp1X}\n        cy={cp1Y}\n        r={2}\n        fill=\"red\"\n      />\n      <circle\n        r={4}\n        cx={cp2X}\n        cy={cp2Y}\n        r={5}\n        fill=\"green\"\n      /> */}\n      <animated.path\n        d={d}\n        strokeWidth={strokeWidth * 3}\n        fill=\"none\"\n        stroke={color}\n        opacity={0}\n      />\n      <animated.path\n        d={d}\n        strokeWidth={strokeWidth}\n        markerEnd={`url(#triangle-${footprint})`}\n        fill=\"none\"\n        stroke={color}\n      />\n      {\n        layer.label && layer.label.fields ?\n          <>\n            <animated.g className={cx(\"label\", {'is-always-visible': layer.label.alwaysVisible})} transform={labelDepTransform}>\n              <text\n                textAnchor={inputXDest < inputXDep ? 'start' : 'end'}\n                x={inputXDest < inputXDep ? 10 + inputStrokeWidth * 2 : -10 - inputStrokeWidth}\n                y={fontSize * .3}\n                fontSize={fontSize}\n              >\n                {datum[layer.label.fields[0]]}\n              </text>\n            </animated.g>\n            <animated.g className={cx(\"label\", {'is-always-visible': layer.label.alwaysVisible})} transform={labelDestTransform}>\n              <text\n                textAnchor={inputXDest > inputXDep ? 'start' : 'end'}\n                x={inputXDest > inputXDep ? 10 + inputStrokeWidth * 2 : -10 - inputStrokeWidth}\n                y={fontSize * .3}\n                fontSize={fontSize}\n              >\n                {datum[layer.label.fields[1]]}\n              </text>\n            </animated.g>\n          </>\n          : null\n      }\n      {/* <animated.path \n      d={arrowPath} \n      stroke=\"black\" \n      strokeWidth={strokeWidth} \n      markerEnd=\"url(#triangle)\" \n    /> */}\n      {/* <line x1={xDep} y1={yDep} x2={xDest} y2={yDest} stroke=\"black\" stroke-width={size} markerEnd=\"url(#triangle)\" /> */}\n    </g>\n  )\n}\n\nconst FlowsLayer = ({\n  layer,\n  projection,\n  width,\n  height,\n  projectionTemplate\n}) => {\n\n  /**\n    * Data aggregation for viz (note : could be personalized if we visualize other things than points)\n  */\n  const markerData = useMemo(() => {\n    if (layer.data) {\n\n      // console.log(\"data : \", layer.data)\n      // size building\n      const strokeWidthScale = scaleLinear().domain([\n        0,\n        max(\n          layer.data.map((flow) => {\n            // return +flow[tonnages_cumulés];\n            // console.log(\"flow[layer.size.field] : \", flow[layer.size.field])\n            return +flow[layer.size.field];\n          })\n        )\n      ]).range([1, width * height / 20000]);\n\n      const arrowSizeScale = strokeWidthScale.copy().range([0, width * height / 100000]);\n\n      let grouped = layer.data.map(flow => ({ // je ne sais pas si grouped reste le plus adapté\n        ...flow,\n        // color: palette[datum.color],\n        strokeWidth: strokeWidthScale(+flow[layer.size.field]),\n        arrowSize: arrowSizeScale(layer.data.strokeWidth)\n      }))\n      let palette;\n      if (layer.color !== undefined) {\n        // colors palette building\n        const colorValues = uniq(grouped.map(g => g[layer.color.field]));\n        if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n          palette = layer.color.palette;\n        } else {\n          const colors = generatePalette('map', colorValues.length);\n          palette = colorValues.reduce((res, key, index) => ({\n            ...res,\n            [key]: colors[index]\n          }), {});\n        }\n        grouped = grouped.map(datum => ({\n          ...datum,\n          color: layer.color !== undefined ? palette[datum[layer.color.field]] : 'grey',\n        }))\n      }\n      // console.log(\"grouped : \", grouped)\n      return grouped;\n    }\n  }, [projection, width, layer, height])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  // console.log(\"markerData (FlowsLayer) : \", markerData)\n\n  return (\n    <g className=\"FlowsLayer\" >\n      {\n        markerData\n          .filter(({ latitude_dep, longitude_dep, latitude_dest, longitude_dest }) => latitude_dep && longitude_dep && latitude_dest && longitude_dest && !isNaN(latitude_dep) && !isNaN(longitude_dep) && !isNaN(latitude_dest) && !isNaN(longitude_dest))\n          .map((datum, index) => {\n            const { latitude_dep, longitude_dep, latitude_dest, longitude_dest, strokeWidth, arrowSize, color } = datum;\n            const [xDep, yDep] = projection([+longitude_dep, +latitude_dep]);\n            const [xDest, yDest] = projection([+longitude_dest, +latitude_dest]);\n            // console.log(\"[xDep, yDep] / [xDest, yDest] : \", [xDep, yDep], \" / \", [xDest, yDest]);\n\n            return (\n              <FlowGroup\n                {\n                ...{\n                  arrowSize,\n                  xDep,\n                  yDep,\n                  xDest,\n                  yDest,\n                  strokeWidth,\n                  datum,\n                  layer,\n                  width,\n                  color,\n                  height,\n                  projectionTemplate,\n                }\n                }\n              />\n            );\n          })\n      }\n    </g>\n  );\n}\n\nexport default FlowsLayer;","\n\n\nconst CustomObjectLayer = ({ layer, projection, width, height, projectionTemplate }) => {\n    return (\n        <g className=\"CustomObjectsLayer\">\n          {\n            typeof layer.renderObjects === 'function' ?\n                layer.renderObjects({data: layer.data, projection, width, height, projectionTemplate})\n            :\n            layer.data\n              // .filter(({ latitude, longitude }) => latitude && longitude && !isNaN(latitude) && !isNaN(longitude))\n              .map((datum, index) => {\n                // const { latitude, longitude, size, color, label } = datum;\n                // const [x, y] = projection([+longitude, +latitude]);\n                return layer.renderObject({ datum, projection, width, height, projectionTemplate })\n              })\n          }\n        </g>\n      );\n}\n\nexport default CustomObjectLayer;","import { useEffect, useState } from \"react\"\n\nconst Button = ({\n    children,\n    onMouseDown,\n    ...props\n  }) => {\n    const [isMouseDown, setState] = useState(false)\n  \n    useEffect(() => {\n      let interval\n      if (isMouseDown) {\n        console.log(\"setInterval\")\n        interval = setInterval(onMouseDown, 100)\n      }\n      return () => {\n        console.log(\"clearInterval\")\n        clearInterval(interval)\n      }\n    }, [isMouseDown, onMouseDown])\n  \n    return <button\n      {...props}\n      onMouseDown={() => {\n        setState(true)\n      }}\n      onMouseUp={() => {\n        setState(false)\n      }}\n      style={{ background: isMouseDown ? 'red' : undefined }}\n    >\n      {children}\n    </button>\n  }\n\n  export default Button ;","import { useState, useEffect } from \"react\" ;\n\nconst Input = ({\n    value: inputValue,\n    onBlur,\n    ...props\n  }) => {\n    const [value, setValue] = useState(inputValue)\n    useEffect(() => {\n      setValue(inputValue)\n    }, [inputValue])\n  \n    return <input\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value)\n      }}\n      onBlur={(e) => {\n        onBlur(e.target.value)\n      }}\n    />\n  }\n  \nexport default Input ;  ","import { uniq } from \"lodash-es\";\nimport { generatePalette } from '../../helpers/misc';\n\n\nconst Legend = ({\n  layers,\n  position\n}) => {\n  return (\n    <div className={`Legend ${typeof position === 'string' ? position : ''}`}>\n      <h5 className=\"legend-main-title\">Légende</h5>\n      {\n        layers.map((layer, id) => {\n          let hasSize;\n          let hasColors;\n          let colorModalities;\n          if (layer.size && layer.size.field) {\n            hasSize = true;\n          }\n          if (layer.color && layer.color.field) {\n            hasColors = true;\n            const colorValues = uniq(layer.data.map(datum => datum[layer.color.field]))\n            // @todo refactor the following with PointsLayer as an util\n            let palette;\n            // colors palette building\n            if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n              palette = layer.color.palette;\n            } else {\n              const colors = generatePalette('map', colorValues.length);\n              palette = colorValues.reduce((res, key, index) => ({\n                ...res,\n                [key]: colors[index]\n              }), {});\n            }\n            colorModalities = Object.entries(palette);\n          }\n          return (\n            <>\n              {\n                hasSize ?\n                <div key={id} className=\"size-legend-container\">\n                  {/* <h6 className=\"legend-title\">Taille des cercles</h6> */}\n                  <div className=\"size-legend-item\">\n                  <span className=\"size-icon-container\">\n                    <span />\n                    <span />\n                  </span>\n                  <span className=\"label\">\n                  {layer.size.title || layer.size.field}\n                  </span>\n                  </div>\n                </div>\n                : null\n              }\n              {\n                hasColors ?\n                <div key={id + 'b'} className=\"color-legend-container\">\n                  <h6 className=\"legend-title\">{layer.color.title || layer.color.field}</h6>\n                  <ul className=\"modalities-list\">\n                    {\n                      colorModalities.map(([modality, color]) => (\n                        <li key={modality}>\n                          <span style={{background: color}} className=\"color-marker\" />\n                          <span className=\"label\">{modality}</span>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </div>\n                : null\n              }\n            </>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Legend;","/* DOCUMENTATION : API de ce GéoComponent\n\n  Principe :\n    Composants réutilisable pour toutes les cartes utilisés sur les sites PORTIC\n    cartographie en SVG\n    -> permet de faire des cartes choroplèthes, de représenter des ports, des flux de navires, ...\n\n  Paramètres : \n    * width : largeur de la carte (par défaut à 1500 px)\n    * height : hauteur de la carte (par défaut à 1500 px)\n\n    * layers : différentes couches de la carte ('choropleth', 'points', 'flows', 'custom'), à chaque layer il faut donner un fichier de données (stocké dans public/data) pour construire le objets qui le constituent, les couleurs, tailles, labels de ces objets sont paramètrables \n        si layer 'custom' choisi, il faut passer au layer une fonction d'affichage des données :\n        - renderObject : donner un objet de donnée en paramètre, la fonction s'occupe de construire sa représentation SVG et de la positionner individuellement sur la carte\n        - renderObjects : donner un dataset, la fonction s'occupe de construire une représentation SVG de l'ensemble des objets, et de gérer leurs positionnement sur la carte (souvent adapté quand le positionnement n'est pas géographique, qu'on a besoin de gérer les espacements entre objets ...)\n\n    * projectionTemplate : configuration de carte utilisée fréquemment ('France', 'coast from Nantes to Bordeaux', 'Poitou', 'rotated Poitou')\n    * projectionConfig: configuration de carte customisée (ce paramètre prime sur projectionTemplate si les 2 sont données en même temps)\n\n    * debug : permet d'ajuster manuellement la configuration de la carte quand true (les paramètres de zoom, les coordonnées du centre, la rotation et les translations sont ajustables)\n    \n  @TODO : documenter ce component de manière standardisée\n  */\n\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { geoEqualEarth } from \"d3-geo\";\nimport ChoroplethLayer from './ChoroplethLayer';\nimport PointsLayer from './PointsLayer';\nimport FlowsLayer from './FlowsLayer';\nimport CustomObjectLayer from './CustomObjectLayer';\n// import TriangleChart from '../TriangleChart/TriangleChart';\nimport Button from './Button';\nimport Input from './Input';\nimport Legend from './Legend';\n\nimport './GeographicMapChart.scss'\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\nconst GeographicMapChart = ({\n  width: inputWidth = 1500,\n  height: inputHeight = 1500,\n  title,\n  layers = [],\n  projectionTemplate: initialProjectionTemplate,\n  projectionConfig: inputProjectionConfig, // customed config that will overwrite a template (optional argument) \n  debug = false, // @TODO : à réparer\n  withLegend,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // viz params variables\n  const [scale, setScale] = useState(200)\n  const [rotation, setRotation] = useState(0)\n  const [translationX, setTranslationX] = useState(width / 2)\n  const [translationY, setTranslationY] = useState(height / 2)\n  const [centerX, setCenterX] = useState(-1.7475027) // -1.7475027 pour centrer sur région\n  const [centerY, setCenterY] = useState(46.573642) // 46.573642\n\n  const [projectionTemplate, setProjectionTemplate] = useState(initialProjectionTemplate)\n\n  // trick for nice animations\n  useEffect(() => {\n    // setTimeout(() => {\n      setProjectionTemplate(initialProjectionTemplate);\n    // })\n  }, [initialProjectionTemplate])\n\n\n  // define a default map Config\n  const defaultProjectionConfig = useMemo(() => {\n    return {\n      rotationDegree: 0,\n      centerX: 2.4486203,\n      centerY: 46.8576176,\n      scale: height * 5\n    };\n  }, [height]) // repsonsive : se fait en fonction de la height de l'écran\n\n  /**\n   * d3 projection making\n   */\n  const projection = useMemo(() => { // def les bonnes valeurs pour la config de la projection // enregistrer dans le state // les appliquer dans la projection\n\n    let projectionConfig = { ...defaultProjectionConfig } // casser la référence à defaultProj pour respecter principe react qu'on ne modifie pas un objet reçu en argument\n\n    let projection = geoEqualEarth()\n\n    switch (projectionTemplate) {\n      case 'World':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * .5,\n          centerX: -1,\n          centerY:  15,\n          // translationX: width * 0.4,\n          // translationY: height * 0.28\n        }\n        break;\n      case 'coast from Nantes to Bordeaux':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 24,\n          centerX: -1.7475027,\n          centerY: 46.573642,\n          translationX: width * 0.4,\n          translationY: height * 0.28\n        }\n        break;\n      case 'Poitou':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 30,\n          centerX: -1.7475927,\n          // centerY: 46.573872,\n          centerY: 47.4,\n          // translationX: width * 0.4,\n          translationX: width * 0.45,\n          translationY: 0\n        }\n        break;\n      case 'Poitou zoomed':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 23,\n          centerX: -1.7475927,\n          // centerY: 46.573872,\n          centerY: 47.4,\n          // translationX: width * 0.4,\n          translationX: width * 0.45,\n          translationY: 0\n        }\n        break;\n      case 'rotated Poitou':\n        projectionConfig = {\n          ...projectionConfig,\n          rotationDegree: 58,\n          scale: height * 32,\n          centerX: -1.7475027,\n          centerY: 46.573642,\n          translationX: width * 0.29,\n          translationY: height * 0.25\n        }\n        break;\n      case 'France':\n      default: // as France config \n        // console.log('projection config in dry version', projectionConfig);\n        // console.log(`we are taking the config as specified in config parameters ===> if not specified, the view should correspond to France`);\n        break;\n    }\n\n    if (inputProjectionConfig !== undefined) {\n      projectionConfig = {\n        ...projectionConfig,\n        ...inputProjectionConfig\n      }\n    }\n\n    // update the config\n    setScale(projectionConfig.scale)\n\n    setRotation(projectionConfig.rotationDegree)\n\n    setCenterX(projectionConfig.centerX)\n    setCenterY(projectionConfig.centerY)\n\n    if (projectionConfig.translationX !== undefined) {\n      setTranslationX(projectionConfig.translationX)\n      setTranslationY(projectionConfig.translationY)\n    }\n    else {\n      projectionConfig.translationX = width / 2;\n      projectionConfig.translationY = height / 2;\n      setTranslationX(width / 2)\n      setTranslationY(height / 2)\n    }\n\n    projection\n      .scale(projectionConfig.scale)\n\n    projection.center([projectionConfig.centerX, projectionConfig.centerY])\n\n    if (projectionConfig.rotationDegree) {\n      projection.angle(projectionConfig.rotationDegree)\n    }\n\n    projection.translate([projectionConfig.translationX, projectionConfig.translationY])\n\n    return projection;\n  }, [width, height, defaultProjectionConfig, inputProjectionConfig, projectionTemplate]) \n\n\n\n  // const [xCenterPoint, yCenterPoint] = projection([centerX, centerY]);\n  return (\n    <div className=\"GeographicMapChartWrapper\">\n\n      {title ? <h5 className=\"visualization-title\">{title}</h5> : null}\n\n      {\n        debug ?\n          <>\n            <h2>scale: {scale}, rotation: {rotation}, translationX: {translationX}, translationY: {translationY}, centerX: {centerX}, centerY: {centerY}</h2>\n            <div className=\"table\">\n              <ul id=\"horizontal-list\">\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setScale(scale * 1.6)}>scale+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setScale(scale / 1.6)}>scale-</Button>\n                    </li>\n                    <li>\n                      <Input value={scale} placeHolder={\"entrez une valeur pour la scale\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? scale : +str\n                        setScale(val)\n                      }} />\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => { console.log(\"DOWN !!\"); setRotation(rotation + 2) }}>rotation+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setRotation(rotation - 2)}>rotation-</Button>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setTranslationX(translationX * 1.2)}>translationX+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setTranslationX(translationX * 0.8)}>translationX-</Button>\n                    </li>\n                    <li>b\n                      <Button onMouseDown={() => setTranslationY(translationY * 1.2)}>translationY+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setTranslationY(translationY * 0.8)}>translationY-</Button>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setCenterX(centerX + 0.3)}>centerX+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setCenterX(centerX - 0.3)}>centerX-</Button>\n                    </li>\n                    <li>b\n                      <Button onMouseDown={() => setCenterY(centerY + 0.3)}>centerY+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setCenterY(centerY - 0.3)}>centerY-</Button>\n                    </li>\n                    <li>\n                      <Input value={centerX} placeHolder={\"entrez une valeur pour la latitude\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? centerX : +str\n                        setCenterX(val)\n                      }} />\n                    </li>\n                    <li>\n                      <Input value={centerY} placeHolder={\"entrez une valeur pour la longitude\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? centerY : +str\n                        setCenterY(val)\n                      }} />\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </>\n          : null\n      }\n\n      <svg className=\"GeographicMapChart\" width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n\n        {\n          layers.map((layer, layerIndex) => {\n\n            switch (layer.type) {\n              case 'choropleth':\n                return <ChoroplethLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                  reverseColors={layer.reverseColors}\n                />\n\n              case 'points':\n                return <PointsLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                />\n\n              case 'flows': \n                return <FlowsLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                  projectionTemplate={projectionTemplate}\n                />\n\n              case 'custom':\n                return <CustomObjectLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  projectionTemplate={projectionTemplate}\n                  width={width}\n                  height={height}\n                />\n\n              default:\n                return <g key={layerIndex}><text>Unsupported layer type</text></g>\n            }\n          })\n        }\n        {/* <circle cx={xCenterPoint} cy={yCenterPoint} r={5} fill={'red'} />\n        <rect x=\"58%\" y=\"78%\" width={width * 0.4} height={height * 0.2} rx=\"15\" ry=\"15\" fill={'white'} opacity={0.5} /> */}\n      </svg>\n      {\n        withLegend ?\n        <Legend layers={layers} position={withLegend} />\n        : null\n      }\n      <ReactTooltip id=\"geo-tooltip\" />\n    </div>\n  )\n}\n\nexport default GeographicMapChart;\n\n\n// old GeoComp handling for configs\n\n\n/*\nconst projection = useMemo(() => {\n  setTranslationX(width/2)\n  setTranslationY(height/2)\n\n let projection = geoEqualEarth() // ce qui vaut dans tous les cas ...\n   .scale(scale)\n   .translate([translationX, translationY]) // put the center of the map at the center of the box in which the map takes place ?\n\n if (backgroundData) { // que si center on region\n   if (centerOnRegion) {\n     setScale(height*24); // 500000 //*24\n     setCenterX(-1.7475027);\n     setCenterY(46.573642);\n     projection\n       .scale(scale) // 50000 for a centered map\n       .center([centerX, centerY]) // -1.7475027, 46.573642 for a centered map\n       .translate([translationX * 0.8, translationY * 0.56]) // @TODO : stabiliser avec coefficients calculés (pour l'instant c'est du bricolage : j'essaie de cadrer entre Nantes et Bordeaux)\n   } else {\n     // if bg data is available fit on whole geometry\n     projection\n       .fitSize([width, height], backgroundData)\n   }\n   if (rotationDegree !== 0) { // seul cas où on veut une carte tournée pour le moment c'est dans le cas step 1 main viz part 3\n     setScale(width*28)\n     setRotation(rotationDegree);\n     projection\n       .angle(rotation)\n       .translate([translationX * 0.65, translationY * 0.65]) // dans ce cas besoin de décaler la carte vers la droite et vers le haut :  @TODO stabiliser avec coefficients calculés (pour l'instant c'est du bricolage)\n   }\n\n }\n return projection;\n}, [backgroundData, width, height, centerOnRegion, scale, rotation, translationX, translationY, centerX, centerY, rotationDegree])\n\n*/\n","var map = {\n\t\"./en/about.mdx\": [\n\t\t225\n\t],\n\t\"./en/footer.mdx\": [\n\t\t641,\n\t\t5\n\t],\n\t\"./en/introduction.mdx\": [\n\t\t216\n\t],\n\t\"./en/metadata\": [\n\t\t337,\n\t\t0\n\t],\n\t\"./en/metadata.js\": [\n\t\t337,\n\t\t0\n\t],\n\t\"./en/part-1.mdx\": [\n\t\t219\n\t],\n\t\"./en/part-2-1.mdx\": [\n\t\t642,\n\t\t6\n\t],\n\t\"./en/part-2-2.mdx\": [\n\t\t643,\n\t\t7\n\t],\n\t\"./en/part-2-3.mdx\": [\n\t\t644,\n\t\t8\n\t],\n\t\"./en/part-2-intro.mdx\": [\n\t\t221\n\t],\n\t\"./en/part-3.mdx\": [\n\t\t223\n\t],\n\t\"./en/references.mdx\": [\n\t\t227\n\t],\n\t\"./en/test-scrolly.mdx\": [\n\t\t645,\n\t\t9\n\t],\n\t\"./en/tests.mdx\": [\n\t\t228\n\t],\n\t\"./fr/a-propos.mdx\": [\n\t\t224\n\t],\n\t\"./fr/footer.mdx\": [\n\t\t121\n\t],\n\t\"./fr/introduction.mdx\": [\n\t\t215\n\t],\n\t\"./fr/metadata\": [\n\t\t338,\n\t\t1\n\t],\n\t\"./fr/metadata.js\": [\n\t\t338,\n\t\t1\n\t],\n\t\"./fr/partie-1.mdx\": [\n\t\t218\n\t],\n\t\"./fr/partie-2.mdx\": [\n\t\t220\n\t],\n\t\"./fr/partie-3.mdx\": [\n\t\t222\n\t],\n\t\"./fr/references.mdx\": [\n\t\t226\n\t],\n\t\"./fr/test-scrolly.mdx\": [\n\t\t646,\n\t\t10\n\t],\n\t\"./fr/tests.mdx\": [\n\t\t229\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 634;\nmodule.exports = webpackAsyncContext;","const Test = ({\n  datasets = {}\n}) => {\n  return(\n    <div className=\"Test\">\n      <div>Ceci est un appel pour une visualisation qui n'a pas encore été développée</div>\n      {\n        Object.keys(datasets).length ? \n        <div>\n          <h3>Datasets de la visualisation :</h3>\n          {\n            Object.entries(datasets)\n            .map(([datasetName, values]) => {\n              return (\n              <div key={datasetName}>\n                <h3>{datasetName}</h3>\n                <pre>\n                  <code>\n                    {\n                      JSON.stringify(values, null, 2)\n                    }\n                  </code>\n                </pre>\n              </div>\n              )\n            })\n          }\n        </div>\n        : null\n      }\n    </div>\n    )\n}\n\nexport default Test;","import { scalePow, scaleBand, scaleLinear } from \"d3-scale\";\nimport { range } from \"lodash\";\nimport { extent, max } from 'd3-array';\nimport { useMemo, useRef, useState, useEffect } from \"react\";\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport cx from 'classnames';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport colorsPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\n\nconst prettifyValue = str => {\n  const inted = Math.round(+str) + '';\n  let finalStr = '';\n  let count = 0;\n  for (let i = inted.length - 1; i >= 0; i--) {\n    const char = inted[i];\n    count++;\n\n    finalStr = char + finalStr;\n    if (count === 3) {\n      count = 0;\n      finalStr = ',' + finalStr;\n    }\n  }\n  if (finalStr[0] === ',') {\n    finalStr = finalStr.slice(1);\n  }\n\n  return finalStr;\n}\n\nconst LongitudinalTradeChart = ({\n  data: inputData,\n  // fields: if null, viz will not show the corresponding data\n  absoluteField,\n  shareField,\n  herfindhalField,\n\n  width,\n  height: wholeHeight,\n  axisLeftTitle,\n  axisRightTitle,\n\n  startYear,\n  endYear,\n  fillGaps,\n  barTooltipFn,\n  cityName,\n  highlightYears,\n  title,\n  colorScaleMessages,\n  annotations = [],\n  margins\n}) => {\n  const data = useMemo(() => inputData.filter(d => +d.year >= startYear & +d.year <= endYear), [startYear, endYear, inputData])\n  const headerRef = useRef(null);\n  const footerRef = useRef(null);\n  const [height, setHeight] = useState(wholeHeight);\n  useEffect(() => {\n    // handling ref updates to set the correct height\n    setTimeout(() => {\n      let newHeight = wholeHeight;\n      if (headerRef && headerRef.current) {\n        newHeight = wholeHeight - headerRef.current.offsetHeight;\n        if (footerRef && footerRef.current) {\n          newHeight -= footerRef.current.offsetHeight;;\n        }\n      }\n      setHeight(newHeight);\n      ReactTooltip.rebuild();\n    })\n\n  }, [wholeHeight])\n\n\n  const yearsExtent = extent(data.map((d) => +d.year));\n  const yearsEnumerated = range(...yearsExtent);\n\n  const xBand = scaleBand()\n    .domain([...yearsEnumerated, endYear, endYear + 1])\n    .range([margins.left, width - margins.right])\n    .padding(0.1);\n  const herfindhalColorScale = scalePow()\n    .domain(extent(data, (d) => +d[herfindhalField]))\n    .range([colorsPalettes.generic.accent2, 'grey']);\n  // const herfindhalOpacityScale = herfindhalColorScale.copy()\n  // .range([1, 0.5])\n\n  const yearDomain = xBand.domain().map((y) => +y);\n  const yearTicks = yearDomain\n    .filter((y) => y % 5 === 0)\n  const yAbsoluteScale = scaleLinear()\n    .domain([0, max(data, (d) => +d[absoluteField])])\n    .nice()\n    .range([height - margins.bottom, margins.top]);\n  const yShareScale = scaleLinear()\n    .domain([0, max(data, (d) => +d[shareField])])\n    .nice()\n    .range([height - margins.bottom, margins.top]);\n\n  const { values: rightYAxisValues } = axisPropsFromTickScale(yAbsoluteScale, Math.round(height / 20));\n  let { values: leftYAxisValue } = axisPropsFromTickScale(yShareScale, Math.round(height / 20));\n  if (yShareScale.domain()[1] - yShareScale.domain()[0] <= 5) {\n    leftYAxisValue = axisPropsFromTickScale(yShareScale, 5).values;\n  }\n  return (\n    <div className={cx(\"LongitudinalTradeChart\", { 'has-highlights': highlightYears !== undefined })}>\n      <div className=\"chart-header\" ref={headerRef}>\n        <h3 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h3>\n        <div className=\"axis-headers-container\">\n          <div style={{\n            background: axisLeftTitle && axisLeftTitle.length ? colorsPalettes.generic.accent2 : undefined,\n            marginLeft: margins.left,\n          }} className=\"axis-header axis-header-left\">\n            {axisLeftTitle}\n          </div>\n          {\n            colorScaleMessages ?\n              <div className=\"color-scale-container\">\n                <div className=\"color-scale-detail\">\n                  <div\n                    className=\"bar\"\n                    style={{\n                      background: `linear-gradient(to right, ${herfindhalColorScale(herfindhalColorScale.domain()[0])}, ${herfindhalColorScale(herfindhalColorScale.domain()[1])})`\n                    }}\n                  />\n                  <div className=\"labels\">\n                    <span>{colorScaleMessages.maximum}</span>\n                    {/* <span>{colorScaleMessages.title}</span> */}\n                    <span>{colorScaleMessages.minimum}</span>\n                  </div>\n                </div>\n              </div>\n              : null\n          }\n          <div style={{\n            background: axisRightTitle && axisRightTitle.length ? colorsPalettes.generic.accent1 : undefined,\n            marginRight: margins.right,\n          }} className=\"axis-header axis-header-right\">\n            {axisRightTitle}\n          </div>\n        </div>\n      </div>\n      <svg width={width} height={height}>\n        <g\n          className=\"axis axis-left\"\n        >\n          {\n            leftYAxisValue.map(value => {\n              return (\n                <g key={value} className=\"axis-group\">\n                  <line\n                    x1={margins.left * .8}\n                    x2={margins.left}\n                    y1={yShareScale(value)}\n                    y2={yShareScale(value)}\n                    stroke={colorsPalettes.generic.accent2}\n                  />\n                  <line\n                    x1={margins.left}\n                    x2={width - margins.right}\n                    y1={yShareScale(value)}\n                    y2={yShareScale(value)}\n                    stroke={colorsPalettes.generic.accent2}\n                    strokeDasharray={'2, 2'}\n                    opacity={.2}\n                  />\n                  <text\n                    x={margins.left * .7}\n                    y={yShareScale(value) + height / 100}\n                    fill={colorsPalettes.generic.accent2}\n                  >\n                    {Math.round(+value * 100) + '%'}\n                  </text>\n                </g>\n              )\n            })\n          }\n        </g>\n        <g\n          className=\"axis axis-right\"\n        >\n          {\n            rightYAxisValues.map(value => {\n              return (\n                <g key={value} className=\"axis-group\">\n                  <line\n                    x1={xBand(yearTicks[0]) + xBand.bandwidth() / 2}\n                    x2={xBand(yearTicks[yearTicks.length - 1])}\n                    y1={yAbsoluteScale(value)}\n                    y2={yAbsoluteScale(value)}\n                    stroke={colorsPalettes.generic.accent1}\n                    strokeDasharray={'4, 2'}\n                    opacity={.5}\n                  />\n                  <text\n                    x={width - margins.right + 2}\n                    y={yAbsoluteScale(value) + height / 100}\n                    fill={colorsPalettes.generic.accent1}\n                  >\n                    {value > 0 ? Math.round(value / 1000000) + 'm livres t.' : 0}\n                  </text>\n                </g>\n              )\n            })\n          }\n        </g>\n        <g className=\"axis axis-bottom\">\n          <line\n            y1={height - margins.bottom}\n            y2={height - margins.bottom}\n            x1={xBand(yearTicks[0]) + xBand.bandwidth() / 2}\n            x2={xBand(yearTicks[yearTicks.length - 1]) + xBand.bandwidth() / 2}\n            stroke={'lightgrey'}\n          />\n          {\n            yearTicks\n              .map((year, i) => {\n                const x = xBand(year) + xBand.bandwidth() / 2;\n                const y = height - margins.bottom;\n                return (\n                  <g\n                    key={i}\n                    className=\"axis-group\"\n                    transform={`translate(${x}, ${y})`}\n                  >\n                    <line\n                      x1={0}\n                      x2={0}\n                      y1={0}\n                      y2={margins.bottom / 6}\n                      stroke=\"grey\"\n                    />\n                    <g\n                      transform={`translate(${(xBand.bandwidth() * .5)}, ${margins.bottom / 2})`}\n                    >\n                      <text fill=\"grey\">\n                        {year}\n                      </text>\n                    </g>\n                  </g>\n                )\n              })\n          }\n        </g>\n        <g className=\"annotations-container\">\n          {\n            annotations\n              .filter(({ startYear: aStartYear, endYear: aEndYear }) => aStartYear >= startYear && aEndYear <= endYear)\n              .map((annotation, annotationIndex) => {\n                const { startYear, endYear: initialEndYear } = annotation;\n                const endYear = initialEndYear + 1;\n                return (\n                  <g className=\"annotation\" key={annotationIndex}>\n                    <rect\n                      x={xBand(startYear)}\n                      width={xBand(endYear) - xBand(startYear)}\n                      height={fixSvgDimension(height - margins.top - margins.bottom)}\n                      y={margins.top}\n                      fill=\"url(#diagonalHatch)\"\n                      opacity={.4}\n                    />\n                    <line\n                      x1={xBand(startYear)}\n                      x2={xBand(startYear)}\n                      y1={margins.top}\n                      y2={height - margins.bottom}\n                      stroke=\"grey\"\n                      opacity={.4}\n                      strokeDasharray={'4,2'}\n                    />\n                    <line\n                      x1={xBand(endYear)}\n                      x2={xBand(endYear)}\n                      y1={margins.top}\n                      y2={height - margins.bottom}\n                      stroke=\"grey\"\n                      opacity={.4}\n                      strokeDasharray={'4,2'}\n                    />\n                    <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                          M0,4 l4,-4\n                          M3,5 l2,-2\"\n                        style={{ stroke: 'grey', opacity: .5, strokeWidth: 1 }} />\n                    </pattern>\n\n                  </g>\n                )\n              })\n          }\n        </g>\n\n        <g className=\"bars-container\">\n          {\n            data.map((d) => {\n              return (\n                <rect\n                  key={d.year}\n                  x={xBand(+d.year)}\n                  y={yShareScale(d[shareField])}\n                  width={xBand.bandwidth()}\n                  height={fixSvgDimension(yShareScale(0) - yShareScale(d[shareField]))}\n                  fill={herfindhalField && d[herfindhalField] ? herfindhalColorScale(+d[herfindhalField]) : colorsPalettes.generic.dark}\n                  // opacity={herfindhalField && d[herfindhalField]\n                  //         ? herfindhalOpacityScale(+d[herfindhalField])\n                  //         : 1}\n                  data-tip={barTooltipFn ?\n                    barTooltipFn(d.year, (d[shareField] * 100).toFixed(2), cityName, d[herfindhalField] && (+d[herfindhalField] || 0).toFixed(2))\n                      .replace('[colorBox]', `<span style=\"display:inline-block;width: .8em;height:.8em;background:${herfindhalColorScale(+d[herfindhalField] || 0)}\"></span>`)\n                    : undefined}\n                  data-for={cityName}\n                  data-effect=\"solid\"\n                  data-html={true}\n                  data-class=\"bar-tooltip\"\n                  data-place=\"left\"\n                  className={cx('graph-bar', { 'is-highlighted': highlightYears && highlightYears.includes(+d.year) })}\n                />\n              )\n            })\n          }\n        </g>\n\n        <g\n          className=\"lines-container\"\n        >\n          {/* data points circles */\n            data\n              .sort((a, b) => {\n                if (+a.year > +b.year) {\n                  return 1;\n                }\n                return -1;\n              })\n              .filter(datum => +datum[absoluteField])\n              .map((datum, index) => {\n                \n                const x = xBand(+datum.year) + xBand.bandwidth() / 2;\n                const y = yAbsoluteScale(+datum[absoluteField]);\n                return (\n                  <>\n                    <circle\n                      key={index}\n                      {\n                      ...{\n                        cx: x,\n                        cy: y,\n                        r: width * 0.005\n                      }\n                      }\n                      fill={'transparent'}\n                      data-tip={`${datum.year} : export de <strong>${prettifyValue(+datum[absoluteField])}</strong> livres tournois.`}\n                      data-for={cityName}\n                      data-class=\"bar-tooltip\"\n                      data-html={true}\n                    />\n                    <circle\n                      key={index + 'a'}\n                      {\n                      ...{\n                        cx: x,\n                        cy: y,\n                        r: 1.5\n                      }\n                      }\n                      fill={colorsPalettes.generic.accent1}\n                    />\n                  </>\n                )\n              })\n          }\n          {\n            data\n              .sort((a, b) => {\n                if (+a.year > +b.year) {\n                  return 1;\n                }\n                return -1;\n              })\n              // .filter((d, index) => {\n              //   const next = data[index + 1];\n              //   if (+d.year === 1787 && !barTooltipFn) {\n              //     console.log('2 next for 1787', d.year, +next.year, next)\n              //   }\n              //   return index < data.length - 1\n              //     && (fillGaps ? true : +next.year === +d.year + 1)\n              // })\n              .map((datum, index) => {\n                const next = data[index + 1];\n                if (index === data.length - 1 || fillGaps ? false : +next.year !== +datum.year + 1) {\n                  return null;\n                }\n                if (!next) {\n                  return null;\n                }\n                const x1 = xBand(+datum.year) + xBand.bandwidth() / 2;\n                const x2 = xBand(+next.year) + xBand.bandwidth() / 2;\n                const y1 = yAbsoluteScale(+datum[absoluteField]);\n                const y2 = yAbsoluteScale(+next[absoluteField]);\n                if (!+datum[absoluteField] || !+next[absoluteField]) {\n                  return null;\n                }\n                const ratio = +next[absoluteField] > +datum[absoluteField] ? +next[absoluteField] / +datum[absoluteField] - 1 : -(1 - +next[absoluteField] / +datum[absoluteField]);\n                return (\n                  <line\n                    key={datum.year}\n                    {\n                    ...{\n                      x1,\n                      x2,\n                      y1,\n                      y2\n                    }\n                    }\n                    stroke={colorsPalettes.generic.accent1}\n                    title={`${datum.year}-${next.year}`}\n                    strokeWidth={2}\n                    data-tip={`${datum.year} → <strong>${prettifyValue(+datum[absoluteField])}</strong> livres tournois <br/>${next.year} → <strong>${prettifyValue(+next[absoluteField])}</strong> livres tournois<br/><i>(${ratio > 0 ? '+' : ''}${Math.round(ratio * 100)}%)</i>`}\n                    data-for={cityName}\n                    data-class=\"bar-tooltip\"\n                    data-html={true}\n                  />\n                )\n              })\n          }\n\n        </g>\n\n        <g className=\"annotations-container\">\n          {\n            annotations\n              .filter(({ startYear: aStartYear, endYear: aEndYear }) => aStartYear >= startYear && aEndYear <= endYear)\n              .map((annotation, annotationIndex) => {\n                const { startYear, endYear: initialEndYear, label, row = 0, labelPosition = 'right' } = annotation;\n                const endYear = initialEndYear + 1;\n                return (\n                  <g className=\"annotation\" key={annotationIndex}>\n                    {\n                      labelPosition === 'right' ?\n                        <>\n                          <line\n                            x1={xBand(endYear) + 20}\n                            x2={xBand(endYear) + 10}\n                            y1={margins.top + 7.5 + row * 20}\n                            y2={margins.top + 7.5 + row * 20}\n                            stroke=\"grey\"\n                            markerEnd=\"url(#arrowhead)\"\n                          />\n                          <text\n                            x={xBand(endYear) + 22}\n                            y={margins.top + 10 + row * 20}\n                            fontSize={'.5rem'}\n                            fill=\"grey\"\n                          >\n                            {label}\n                          </text>\n                        </>\n                        :\n                        <>\n                          <line\n                            x1={xBand(startYear) - 20}\n                            x2={xBand(startYear) - 10}\n                            y1={margins.top + 7.5 + row * 20}\n                            y2={margins.top + 7.5 + row * 20}\n                            stroke=\"grey\"\n                            markerEnd=\"url(#arrowhead)\"\n                          />\n                          <text\n                            x={xBand(startYear) - 22}\n                            y={margins.top + 10 + row * 20}\n                            fontSize={'.5rem'}\n                            textAnchor={'end'}\n                            fill=\"grey\"\n                          >\n                            {label}\n                          </text>\n                        </>\n                    }\n\n                    <defs>\n                      <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\"\n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                        <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                      </marker>\n                    </defs>\n                    <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                          M0,4 l4,-4\n                          M3,5 l2,-2\"\n                        style={{ stroke: 'grey', opacity: .5, strokeWidth: 1 }} />\n                    </pattern>\n\n                  </g>\n                )\n              })\n          }\n        </g>\n\n      </svg>\n\n\n      <ReactTooltip id={cityName} />\n\n    </div>\n  );\n};\nexport default LongitudinalTradeChart;\n","import {useRef, useState, useEffect, useMemo} from 'react';\nimport { sortBy, sum } from \"lodash\";\nimport { scaleLinear, scalePow } from 'd3-scale';\nimport {extent} from 'd3-array';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport colorsPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from '../../helpers/misc';\n\n// TODO:\n// - click on products highlight same product on all years ?\n// - click on products make label bigger for small ones ?\n\nconst ProductsDistributionChart = ({\n  data: allData,\n  tradeData = [],\n  field,\n  partTreshold,\n  height: wholeHeight,\n  barWidth,\n  herfindhalField,\n  years,\n  width,\n  title,\n  margins,\n  productTooltipFn,\n  compareFrom\n}) => {\n  const titleRef = useRef(null);\n  const svgRef = useRef(null);\n  const yearsRef = useRef(new Array(years.length))\n\n  useEffect(() => {\n    setTimeout(() => {\n      ReactTooltip.rebuild();\n    })\n  }, [wholeHeight])\n\n  const [hoveredProduct, setHoveredProduct] = useState(undefined);\n  let height = fixSvgDimension(wholeHeight);\n  const yearLabelHeight = height / 20 + 10;\n\n  if (titleRef && titleRef.current) {\n    height = wholeHeight - titleRef.current.getBoundingClientRect().height - yearLabelHeight;\n  }\n  const finalData= useMemo(() => {\n    if (compareFrom) {\n      const lastYear = years[years.length - 1];\n      const lastYearData =  allData.filter(datum => datum.year + '' === lastYear + '');\n      const lastYearTotalValue = sum(lastYearData.map((d) => +d[field])); \n      let partAcc = 0;\n      // Sort by trade value and keep only the top products which totalizes partTreshold of share\n      const dataTillTreshold = sortBy(lastYearData, (d) => -d[field])\n      .filter((d) => {\n        partAcc += +d[field];\n        return partAcc <= partTreshold * lastYearTotalValue;\n      });\n      const topProducts = dataTillTreshold.map(d => d.product);\n      // group the long tail of low value (under the part Treshold) products as one aggregated misc\n      const aggregatedMiscProducts = {\n        [field]: lastYearTotalValue - sum(dataTillTreshold.map((d) => +d[field])),\n        product: `${lastYearData.length - dataTillTreshold.length} autres types de produits`,\n      };\n      dataTillTreshold.push(aggregatedMiscProducts);\n    return years.reduce((dict, year) => {\n\n        if (year === lastYear) {\n          return {\n            ...dict,\n            [year]: dataTillTreshold\n          }\n        }\n        const thisData = allData.filter(datum => datum.year + '' === year + '');\n        const thisTotalValue =  sum(thisData.map((d) => +d[field]));\n        const thisYearData = thisData.filter(d => topProducts.includes(d.product))\n        .sort((a, b) => {\n          if (+a[field] > +b[field]) {\n            return -1;\n          }\n          return 1;\n        })\n        thisYearData.push({\n          [field]: thisTotalValue - sum(thisYearData.map((d) => +d[field])),\n          product: `${thisData.length - thisYearData.length} autres types de produits`,\n        })\n        return {\n          ...dict,\n          [year]: thisYearData\n        }\n      });\n    }\n    return years.reduce((dict, year) => {\n      const thisYearData =  allData.filter(datum => datum.year + '' === year + '');\n      const totalValue = sum(thisYearData.map((d) => +d[field])); \n      let partAcc = 0;\n      // Sort by trade value and keep only the top products which totalizes partTreshold of share\n      const dataTillTreshold = sortBy(thisYearData, (d) => -d[field])\n      .filter((d) => {\n        partAcc += +d[field];\n        return partAcc <= partTreshold * totalValue;\n      });\n      // const topProducts = dataTillTreshold.map(d => d.product);\n      // group the long tail of low value (under the part Treshold) products as one aggregated misc\n      const aggregatedMiscProducts = {\n        [field]: totalValue - sum(dataTillTreshold.map((d) => +d[field])),\n        product: `${thisYearData.length - dataTillTreshold.length} autres types de produits`,\n      };\n      dataTillTreshold.push(aggregatedMiscProducts);\n      return {\n        ...dict,\n        [year]: dataTillTreshold\n      }\n    }, {})\n\n  }, [years, JSON.stringify(allData)])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  const links = useMemo(() => {\n    const yearsToLink = years.filter((y, i) => i < years.length - 1)\n\n    return yearsToLink\n    .map((year, i) => {\n      const nextYear = years[i + 1];\n      const thisData = finalData[year + ''];\n      const nextData = finalData[nextYear + ''];\n      if (!nextData) {\n        return null;\n      }\n\n      const thisYearTotalValue = sum(thisData.map((d) => +d[field]));    \n      const thisYearScaleValue = (value) => {\n        const v = (value / thisYearTotalValue) * height;\n        return v;\n      };\n      const nextYearTotalValue = sum(nextData.map((d) => +d[field]));    \n      const nextYearScaleValue = (value) => {\n        const v = (value / nextYearTotalValue) * height;\n        return v;\n      };\n      let thisYearOffset = 0;\n      // const thisYearLabelScale = scaleLinear().domain(extent(thisData, datum => +datum[field])).range([height / 100, height / 15])\n\n      return thisData.reduce((res, datum, datumIndex) => {\n        let otherOffset = 0;\n        let otherHeight;\n        let thisHeight = thisYearScaleValue(datum[field]);\n        /* @todo if label adjust\n        let thisFontSize =  i === thisData.length - 1 ? 10 : thisYearLabelScale(+datum[field]);\n        if (isHighlighted && thisFontSize < 10) {\n          thisFontSize = 10;\n        }\n        */\n        thisYearOffset += thisHeight;\n        const hasNext = nextData.find(otherDatum => {\n          otherHeight = nextYearScaleValue(otherDatum[field]);\n          otherOffset += otherHeight;\n          if (otherDatum.product === datum.product) {\n            return true;\n          }\n          return false;\n        });\n        if (hasNext) {\n          return [\n            ...res,\n            {\n              product: datum.product,\n              y1: thisYearOffset/* + thisFontSize*/,\n              height1: thisHeight,\n              y2: otherOffset - otherHeight,\n              height2: otherHeight,\n            }\n          ]\n        } else {\n          return res;\n        }\n      }, [])\n    })\n      \n  }, [finalData, years, height]);\n  \n\n  const herfindhalColorScale = scalePow()\n    .domain(extent(tradeData, (d) => +d[herfindhalField]))\n    .range([colorsPalettes.generic.accent2, 'grey']);\n  const svgOffset = yearsRef.current && yearsRef.current.length && yearsRef.current[0] ? yearsRef.current[0].parentNode.offsetTop : undefined;\n  return (\n    <div className=\"ProductsDistributionChart\">\n      <h3  className=\"visualization-title\" style={{marginLeft: margins.left}} ref={titleRef}>{title}</h3>\n      <div \n        className={cx(\"years-container\", {'has-highlights': hoveredProduct !== undefined})}\n        style={{\n          marginLeft: margins.left + 5,\n          marginRight: margins.right + width * .002,\n        }}\n      >\n      <svg \n        ref={svgRef} \n        className={cx(\"links-container\", {'has-highlights': hoveredProduct})} \n        style={{top: svgOffset}} \n        width={width} \n        height={height}\n      >\n        {\n          links.map((yearLinks, i) => {\n            const ref1 = yearsRef.current && yearsRef.current.length >= i && yearsRef.current[i] && yearsRef.current[i];\n            const ref2 = yearsRef.current && yearsRef.current.length >= i + 1 && yearsRef.current[i + 1] && yearsRef.current[i + 1];\n            const x1 = ref1 ? yearsRef.current[i].getBoundingClientRect().width : 0;\n            const x2 = ref2 && svgRef.current ? yearsRef.current[i + 1].getBoundingClientRect().x - svgRef.current.getBoundingClientRect().x : width;\n            return (\n            <g className=\"year-links\" key={i}>\n              {\n                yearLinks.map(({product, y1: initialY1, height1, y2: initialY2, height2}, index) => {\n                  const y1= initialY1 - height1 / 2;\n                  const y2= initialY2 + height2/2;\n                  const isHighlighted = hoveredProduct === product;\n                  return (\n                    <path\n                      key={index}\n                      d={`M ${x1} ${y1} C ${x1 + (x2 - x1) * .5} ${y1} ${x1 + (x2 - x1) * .5} ${y2} ${x2} ${y2}`}\n                      className={cx('link', {'is-highlighted': isHighlighted})}\n                    />\n                  );\n                })\n              }\n            </g>\n          )})\n        }\n      </svg>\n      {\n        years.map((year, yearIndex) => {\n          const data = allData.filter(datum => datum.year + '' === year + '');\n          const flows = tradeData.filter((d) => d.year === year + '');\n          const her = flows && +flows[0][herfindhalField];\n          const color = her\n          ? herfindhalColorScale(+her) // d3.rgb(200, 50, 0, herfindhalScale(+her))\n          : \"lightgrey\";\n          const totalValue = sum(data.map((d) => +d[field]));    \n          \n          const scaleValue = (value) => {\n            const v = (value / totalValue) * height;\n            return v;\n          };\n          const dataTillTreshold = finalData[year + ''];\n\n          const labelScale = scaleLinear().domain(extent(data, datum => +datum[field])).range([height / 100, height / 15])\n\n          return (\n            <div\n            key={yearIndex}\n            className=\"year-column\"\n          >\n            <h4 className=\"year-label\">\n              <span>{year}</span>\n            </h4>\n            <div \n            \n            className=\"year-items\">\n              <div className=\"dimensions-placeholder\"\n                ref={(element) => {yearsRef.current[yearIndex] = element}}\n                style={{\n                  width: `${barWidth}px`, height: 0,\n                  position: 'absolute',\n                  top: 0,\n                  left: yearIndex === years.length - 1 ? undefined : 0,\n                  right: yearIndex === years.length - 1 ? 0 : undefined,\n                }}\n              />\n            {dataTillTreshold &&\n              dataTillTreshold.map((d, i) => {\n                const isHighlighted = hoveredProduct === d.product;\n                let fontSize =  i === dataTillTreshold.length - 1 ? 10 : labelScale(+d[field]);\n                if (isHighlighted && fontSize < 10) {\n                  fontSize = 10;\n                }\n                return (\n                <div\n                  key={d.product}\n                  style={{\n                    height: `${scaleValue(d[field])}px`,\n                  }}\n                  className={cx(\"product-group\", {'is-highlighted': isHighlighted})}\n                  onClick={() => {\n                    if (hoveredProduct !== d.product && i !== dataTillTreshold.length - 1) {\n                      setHoveredProduct(d.product);\n                    } else {\n                      setHoveredProduct(undefined);\n                    }\n                  }}\n                  data-tip={productTooltipFn && i !== dataTillTreshold.length - 1 ? \n                    productTooltipFn(year, d.product, (d[field] / totalValue * 100).toFixed(2))\n                    : undefined}\n                  data-for={'product-tooltip'}\n                  data-html={true}\n                  data-class=\"bar-tooltip\"\n                  data-place={yearIndex === 0 ? 'right' : 'left'}\n                  data-effect=\"solid\"\n                >\n                  <div\n                    style={{\n                      height: \"100%\",\n                      width: `${barWidth}px`,\n                      maxWidth: `${barWidth}px`,\n                      minWidth: `${barWidth}px`,\n                      backgroundColor: color,\n                    }}\n                    className=\"bar\"\n                  ></div>\n                  <span\n                    className=\"label\"\n                    style={{\n                      fontSize\n                    }}\n                  >\n                    {d.product}\n                  </span>\n                </div>\n              )\n              })}\n              </div>\n          </div>\n          )\n        })\n      }\n      </div>\n      <ReactTooltip id={'product-tooltip'} />\n    </div>\n  );\n};\n\nexport default ProductsDistributionChart;","import DeclineChart from './DeclineChart';\n\nexport default DeclineChart;","import cx from 'classnames';\nimport LongitudinalTradeChart from \"./LongitudinalTradeChart\";\nimport ProductsDistributionChart from './ProductsDistributionChart';\n\nimport './DeclineChart.scss';\nimport { fixSvgDimension } from '../../helpers/misc';\n\nconst DeclineChart = (props) => {\n  const {\n    width: inputWidth, \n    height: containerHeight, \n    lang = 'fr',\n    startYear = 1720,\n    endYear = 1789,\n    productTradePartThreshold = 0.9,\n    rows,\n    datasets = {},\n    atlasMode\n  } = props;\n  const height = atlasMode ? 1200 : fixSvgDimension(containerHeight);\n  const width = fixSvgDimension(inputWidth);\n  const messages = {\n    franceOverviewTitle: {\n      fr: (start, end) => `Évolution de la valeur des exports du royaume de France de ${start} à ${end}`,\n      en: (start, end) => `Evolution of the value of exports from the kingdom of France from ${start} to ${end}`\n    },\n    tradeEvolutionTitle: {\n      fr: (cityName, start, end) => `Évolution du commerce de la direction des fermes de ${cityName} de ${start} à ${end}`,\n      en: (cityName, start, end) => `Evolution of the direction des fermes of ${cityName} trade from ${start} to ${end}`\n    },\n    top90PctTitle: {\n      fr: (cityName, start, end) => `Comparaison des parts des produits exportés par la direction des fermes de ${cityName} totalisant plus de 90% du commerce en ${start} et en ${end} (ports francs non pris en compte)`,\n      en: (cityName, start, end) => `Comparison of shares of the top 90% of exported products by the direction des fermes of ${cityName} in ${start} and in ${end} (ports francs non pris en compte)`,\n    },\n    partInPct: {\n      fr: () => 'part des exports fr.',\n      en: () => 'share of french exports'\n    },\n    absoluteValue: {\n      fr: () => 'valeur absolue des exports',\n      en: () => 'exports\\' absolute value'\n    },\n    herfindalLegendTitle: {\n      // fr: () => `Degré de diversité du commerce (inverse de l’indice de Herfindahl)`,\n      // en: () => `Degree of trade diversity (inverse of the Herfindahl index)`,\n      fr: () => `degré de diversité du commerce`,\n      en: () => `degree of trade diversity`,\n    },\n    herfindal0: {\n      fr: () => `commerce peu diversifié`,\n      en: () => `fewly diversified trade`,\n    },\n    herfindal1: {\n      fr: () => `commerce très diversifié`,\n      en: () => `very diversified trade`,\n    },\n    barTooltip: {\n      fr: (year, pct, city, herfindal) => `En <strong>${year}</strong>, ${pct}% des biens exportés depuis la France le sont à partir de <strong>${city}</strong>.<br/><br/>Concentration du commerce <i>(indice de Herfindahl-Hirschmann : somme du carré des parts du marché français par classe de produits exportés)</i> : <span>[colorBox] ${herfindal}</span>`,\n      en: (year, pct, city, herfindal) => `In <strong>${year}</strong>, ${pct}% of exported goods from France are exported <strong>${city}</strong>.<br/><br/>Trade concentration <i>(Herfindahl-Hirschmann index : sum of square french market' shares sorted by exported products classes)</i> : <span>[colorBox] ${herfindal}</span>`,\n    },\n    productTooltip: {\n      fr: (year, product, pct) => `En <strong>${year}</strong>, les produits de la classe \"${product}\" représentent <strong>${pct}%</strong> de la valeur des biens exportés par la direction des fermes de La Rochelle.`,\n      en: (year, product, pct) => `In <strong>${year}</strong>, products classed as \"${product}\" represent ${pct}% of goods exported by La Rochelle's direction des fermes.`,\n    },\n    sevenYearsWar: {\n      fr: () => 'guerre de sept ans',\n      en: () => 'seven years war'\n    },\n    austriaWar: {\n      fr: () => 'guerre franco-britannique au sein de la guerre de succession d’Autriche',\n      en: () => 'guerre franco-britannique au sein de la guerre de succession d’Autriche',\n    },\n    usIndependance: {\n      fr: () => 'guerre d’indépendance Américaine',\n      en: () => 'guerre d’indépendance Américaine',\n    },\n    laRochelleDiaspora: {\n      fr: () => 'Organisation de convois partant de La Rochelle pour échapper aux Anglais',\n      en: () => 'Organisation de convois partant de La Rochelle pour échapper aux Anglais',\n    },\n    // absolute1789: {\n    //   fr: item => `Total des exports en 1789 : ${(item.Exports / 1000000).toFixed(1)} m. de livres tournois`,\n    //   en: item => `Total des exports en 1789 : ${(item.Exports / 1000000).toFixed(1)} m. de livres tournois`\n    // }\n  }\n  const margins = { top: 10, right: 50, bottom: 30, left: 50 };\n\n  const totalRows = Object.entries(rows).reduce((sum, [id, count]) => sum + count, 0)\n  const renderRow = (row, rowFlex, rowIndex) => {\n    switch(row) {\n      case 'France':\n        if (!datasets['decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data.csv'].filter((d) => d.region === \"France\")}\n            absoluteField=\"Exports\"\n            title={messages.franceOverviewTitle[lang](startYear, endYear)}\n            axisLeftTitle={''}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            margins={margins}\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: .5,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 3,\n                label: messages.usIndependance[lang]()\n              },\n\n              \n            ]}\n            // fillGaps\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'La Rochelle':\n        if (!datasets['decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data.csv'].filter((d) => d.region === \"La Rochelle\")}\n            absoluteField=\"Exports\"\n            shareField=\"Exports_share\"\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.tradeEvolutionTitle[lang]('La Rochelle', startYear, endYear)}\n            axisLeftTitle={messages.partInPct[lang]()}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            margins={margins}\n            barTooltipFn={messages.barTooltip[lang]}\n            cityName=\"La Rochelle\"\n            highlightYears={rows.comparison > 0 ? [startYear, endYear] : undefined}\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: 1,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1747,\n                endYear: 1747,\n                row: 2,\n                label: messages.laRochelleDiaspora[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 3,\n                label: messages.usIndependance[lang]()\n              },\n              // {\n              //   type: 'span',\n              //   startYear: 1789,\n              //   endYear: 1789,\n              //   row: 4,\n              //   labelPosition: 'left',\n              //   label: messages.absolute1789[lang](datasets['decline_longitudinal_data.csv'].find((d) => d.region === \"La Rochelle\" && d.year === \"1789\"))\n              // },\n            ]}\n            colorScaleMessages={{\n              title: messages.herfindalLegendTitle[lang](),\n              minimum: messages.herfindal0[lang](),\n              maximum: messages.herfindal1[lang](),\n            }}\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'Bordeaux':\n        if (!datasets['decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data.csv'].filter((d) => d.region === \"Bordeaux\")}\n            absoluteField=\"Exports\"\n            shareField=\"Exports_share\"\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.tradeEvolutionTitle[lang]('Bordeaux', startYear, endYear)}\n            axisLeftTitle={messages.partInPct[lang]()}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            barTooltipFn={ messages.barTooltip[lang]}\n            cityName=\"Bordeaux\"\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                row: 0.5,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: 0,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 1,\n                label: messages.usIndependance[lang]()\n              },\n            ]}\n            margins={margins}\n            colorScaleMessages={{\n              title: messages.herfindalLegendTitle[lang](),\n              minimum: messages.herfindal0[lang](),\n              maximum: messages.herfindal1[lang](),\n            }}\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'comparison':\n        if (!datasets[`decline_LR_products.csv`] || !datasets['decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <ProductsDistributionChart\n            data={datasets[`decline_LR_products.csv`]}\n            tradeData={datasets['decline_longitudinal_data.csv']}\n            field=\"Exports\"\n            key={rowIndex}\n            partTreshold={productTradePartThreshold}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            barWidth={width * 0.02}\n            years={[atlasMode ? 1750 : startYear, atlasMode ? 1789 : endYear]}\n            margins={margins}\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.top90PctTitle[lang]('La Rochelle', atlasMode ? 1750 : startYear, atlasMode ? 1789 : endYear)}\n            productTooltipFn={messages.productTooltip[lang]}\n            width={width}\n          />\n        )\n      default:\n        return <div>{row}</div>\n    }\n  }\n  return (\n    <div className=\"DeclineChart\">\n      {\n        Object.entries(rows).map(([rowId, rowFlex], rowIndex) => {\n          return (\n            <div className={cx('row', {'is-visible': rows[rowId]})}>\n                {renderRow(rowId, rowFlex, rowIndex)}\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default DeclineChart;\n","import Decline from '../components/DeclineChart';\n\nconst PrincipalVisualizationPart1 = ({width, height, step, ...props}) => {\n  if (props.atlasMode) {\n    return (\n      <Decline \n        startYear={1720} \n        endYear={1789} \n        rows={{'France': 1, 'La Rochelle': 1, 'Bordeaux': 1, 'comparison': 1}}  \n        {...{width, height, ...props}} \n      />\n    )\n  }\n  switch(step + '') {\n    case '1':\n      return <Decline startYear={1720} endYear={1789} rows={{'France': 2, 'La Rochelle': 3, 'Bordeaux': 3, 'comparison': 0}}  {...{width, height, ...props}} />\n    case '2':\n      return <Decline startYear={1720} endYear={1789} rows={{'France': 0, 'La Rochelle': 1, 'Bordeaux': 1, 'comparison': 0}} {...{width, height, ...props}} />\n    case '3':\n      return <Decline startYear={1750} endYear={1789} rows={{'France': 0, 'La Rochelle': 1, 'Bordeaux': 0, 'comparison': 2}} {...{width, height, ...props}} />\n    case '4':\n    default:\n      return <Decline startYear={1750} endYear={1789} rows={{'France': 1, 'La Rochelle': 1, 'Bordeaux': 0, 'comparison': 1}} {...{width, height, ...props}} />\n    \n  }\n}\n\nexport default PrincipalVisualizationPart1;","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport {\n  schemeAccent as colorScheme1,\n  schemeDark2 as colorScheme2,\n  schemePaired as colorScheme3\n} from 'd3-scale-chromatic';\nimport cx from 'classnames';\n\nimport { prepareAlluvialData } from './utils';\n\nimport './CircularAlluvialChart.scss';\nimport { min } from 'd3-array';\nimport { uniq } from 'lodash-es';\nimport { cartesian2Polar, fixSvgDimension, trimText } from '../../helpers/misc';\nimport ReactTooltip from 'react-tooltip';\nimport { useSpring, animated } from 'react-spring'\n\nconst colorSchemes = [colorScheme1, colorScheme2, colorScheme3];\n\nconst G =({children, className, onClick, ...inputProps})  => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.g className={className} onClick={onClick} {...props}>\n      {children}\n    </animated.g>\n  )\n}\nconst Text =({children, onClick, className, style, ...inputProps})  => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.text className={className} onClick={onClick} style={style} {...props}>\n      {children}\n    </animated.text>\n  )\n}\nconst Line = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.line className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nconst Circle = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.circle className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nconst Rect = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.rect className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nconst Path = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.path className={className} onClick={onClick} style={style} {...props} />\n  )\n}\n\nconst CircularAlluvialChart = ({\n  data: inputData = [],\n  sumBy,\n  steps,\n  width: inputWidth = 1200,\n  height : inputHeight = 800,\n  filters = [],\n  debug = false,\n  title,\n  colorsPalettes,\n  centerHorizontalLabels = true,\n  displaceHorizontalLabels = true,\n  tooltips,\n  lang,\n}) => {\n  const titleRef = useRef(null);\n  let height = titleRef.current ? inputHeight - titleRef.current.getBoundingClientRect().height : inputHeight;\n  height = fixSvgDimension(height);\n  const width = fixSvgDimension(inputWidth);\n  // state is used for managing interactions through svg elements' classes\n  const [highlightedFlow, setHighlightedFlow] = useState(undefined);\n  const [highlightedFilter, setHighlightedFilter] = useState(undefined);\n  // rebuild data each time data or viz params are changed\n  const data = useMemo(() => {\n    const vizData = prepareAlluvialData(inputData, { sumBy, steps });\n    return vizData;\n  }, [inputData, sumBy, steps]);\n  const filtersTotal = useMemo(() => {\n    if (filters && filters.length) {\n      return inputData\n      .filter(flow => filters.find(({key, value}) => flow[key] === value))\n      .reduce((sum, flow) => sum + (+flow[sumBy]), 0)\n    }\n    return inputData.reduce((sum, flow) => sum + (+flow[sumBy]), 0)\n  }, [inputData, sumBy, filters]);\n\n  let tooltipContent;\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setHighlightedFlow(undefined);\n    setHighlightedFilter(undefined);\n  }, [filters])\n\n  // build categorical color scales\n  const colorScales = useMemo(() => {\n    const modalitiesMap = data.reduce((cur, datum) => {\n      const ids = uniq(datum.nodes.map(node => node.id));\n      return {\n        ...cur,\n        [datum.field]: cur[datum.field] ? uniq([...cur[datum.field], ...ids]) : ids\n      }\n    }, {});\n    return Object.entries(modalitiesMap).reduce((cur, [field, values], fieldIndex) => {\n      let counter = 0;\n      return {\n        ...cur,\n        [field]: values.reduce((m, value) => {\n          counter++;\n          return { ...m, [value]: colorSchemes[fieldIndex][counter - 1] }\n        }, {})\n      }\n    }, {})\n  }, [data]);\n\n  // dimensions are aligned with the smallest dimension of the container (width or height)\n  const smallestDimension = useMemo(() => {\n    return min([width, height])\n  }, [width, height])\n\n  // bar size and height is relative to dimensions\n  let BAR_SIZE = smallestDimension * .3;\n  const BAR_WIDTH = smallestDimension / 50;\n  // margin for double bars\n  const HORIZONTAL_MARGIN = smallestDimension * .2;\n  const textScale = scaleLinear().range([smallestDimension / 120, smallestDimension / 50]).domain([0, 1])\n  // these radiuses are used to align bars extremities on the three implicit circles they form\n  // (circle 1 : inner intersection of the 4 bars)\n  // (circle 2 : outer intersection of the external point of 4 bars)\n  // (circle 3 : outer intersection of the internal point of 4 bars)\n  const secondCircleRadius = cartesian2Polar(-smallestDimension / 2 + BAR_SIZE, -HORIZONTAL_MARGIN / 2).distance;\n  const thirdCircleRadius = cartesian2Polar(-smallestDimension / 2, -HORIZONTAL_MARGIN / 2 + BAR_WIDTH).distance;\n  const HORIZONTAL_DISPLACE = Math.abs(smallestDimension / 2 - thirdCircleRadius);\n  const VERTICAL_BAR_SIZE = smallestDimension / 2 - secondCircleRadius;\n\n  const stepScales = {\n    0: {\n      orientation: 'horizontal',\n      direction: 'top',\n      displaceX: HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 - HORIZONTAL_MARGIN / 2,\n      displaceText: HORIZONTAL_MARGIN * .2 + 5\n    },\n    1: {\n      orientation: 'vertical',\n      displaceX: smallestDimension / 2,\n      displaceY: 0,\n    },\n    2: {\n      orientation: 'horizontal',\n      displaceX: smallestDimension - BAR_SIZE - HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 - HORIZONTAL_MARGIN / 2,\n      displaceText: HORIZONTAL_MARGIN * .2 + 5,\n      direction: 'top',\n    },\n    3: {\n      orientation: 'horizontal',\n      displaceX: smallestDimension - BAR_SIZE - HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 + HORIZONTAL_MARGIN / 2,\n      displaceText: -5,\n      direction: 'bottom',\n    },\n    4: {\n      orientation: 'vertical',\n      displaceX: smallestDimension / 2,\n      displaceY: smallestDimension - BAR_SIZE,\n    },\n    5: {\n      orientation: 'horizontal',\n      displaceY: smallestDimension / 2 + HORIZONTAL_MARGIN / 2,\n      displaceX: HORIZONTAL_DISPLACE,\n      displaceText: -5,\n      direction: 'bottom'\n    }\n  }\n  // const highlightedNode = highlightedFilter ? steps.find(s => s.field === highlightedFilter.key).find(node => node.id === highlightedFilter.value) : undefined;\n  const highlightedNode = highlightedFilter ? data.find(s => s.field === highlightedFilter.key).nodes.find(node => node.id === highlightedFilter.value) : undefined;\n  const highlightedNodeTotal = highlightedNode ? highlightedNode.flows.reduce((sum, f) => sum + (+f[sumBy]), 0) : 0;\n  return (\n    <>\n      <h5 ref={titleRef} className=\"visualization-title\">{title}</h5>\n      <svg \n        data-for=\"alluvial-tooltip\"\n        data-tip={tooltipContent}\n        width={width} \n        height={height} \n        className={cx(\"CircularAlluvialChart\", { 'has-filters': filters.length, 'has-highlight': highlightedFlow || highlightedFilter })}\n      >\n        <G  transform={`translate(${width * .05}, ${height * .05})scale(.9)`}>\n        <G className=\"background-marks\" transform={`translate(${width / 2 - smallestDimension / 2}, 0)`} >\n          <Line x1={0} x2={smallestDimension} y1={smallestDimension / 2} y2={smallestDimension / 2} />\n          {\n            debug ?\n              <>\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={smallestDimension * .5}\n                />\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={thirdCircleRadius}\n                />\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={secondCircleRadius}\n                />\n\n              </>\n              : null\n          }\n          <Text\n            x={smallestDimension / 2}\n            y={smallestDimension / 2 - HORIZONTAL_MARGIN * .8 + BAR_WIDTH}\n            style={{\n              fontWeight: (highlightedFilter && highlightedFilter.index <= 2) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 800 : undefined\n            }}\n          >\n            EXPORTS\n          </Text>\n          <Text\n            x={smallestDimension / 2}\n            y={smallestDimension / 2 + HORIZONTAL_MARGIN * .8 + BAR_WIDTH}\n            style={{\n              fontWeight: (highlightedFilter && highlightedFilter.index > 2 ) || (highlightedFlow && highlightedFlow.stepIndex > 2) ? 800 : undefined\n            }}\n          >\n            IMPORTS\n          </Text>\n        </G>\n        <G \n        transform={`translate(${width / 2 - smallestDimension / 2}, 0)`}>\n          {\n            data\n              .map((step, stepIndex) => {\n                const { orientation, direction, displaceX, displaceY: initialDisplaceY, displaceText } = stepScales[stepIndex];\n                let displaceY = initialDisplaceY;\n                let nodesSizeScale = scaleLinear().domain([0, 1]).range([0, orientation === 'vertical' ? VERTICAL_BAR_SIZE : BAR_SIZE - HORIZONTAL_DISPLACE]);\n                let displaceLabels = 0;\n                return (\n                  <G\n                    className={cx(\"step-container\", 'is-oriented-' + orientation)}\n                    key={stepIndex}\n                  >\n                    <Rect\n                      x={displaceX}\n                      y={displaceY}\n                      width={orientation === 'vertical' ? BAR_WIDTH : BAR_SIZE}\n                      height={orientation === 'vertical' ? BAR_SIZE : BAR_WIDTH}\n                      fill=\"white\"\n                      className=\"step-bar-background\"\n                    />\n                    {\n                      /** for each node display links to next */\n\n                      step.nodes\n                        .map((node, nodeIndex) => {\n                          return (\n                            <G\n                              className={cx(\"links-group\")}\n                              key={nodeIndex}\n                            >\n                              {\n                                node.flows\n                                  .filter(f => f.nextPosition)\n                                  .map((flow, linkIndex) => {\n                                    const handleClick = () => {\n                                      if (highlightedFlow && highlightedFlow._id === flow._id) {\n                                        setHighlightedFilter(undefined);\n                                        setHighlightedFlow(undefined);\n                                      }\n                                      else {\n                                        if (highlightedFilter) {\n                                          setHighlightedFilter(undefined);\n                                        }\n                                        setHighlightedFlow({...flow, stepIndex});\n                                      }\n                                      \n                                    }\n                                    const nextStepScales = stepScales[stepIndex + 1];\n                                    let nextNodesSizeScale = scaleLinear().domain([0, 1]).range([0, nextStepScales.orientation === 'vertical' ? VERTICAL_BAR_SIZE : BAR_SIZE - BAR_WIDTH / 3]);\n\n                                    let x1 = displaceX + BAR_WIDTH;\n                                    let y1 = displaceY + nodesSizeScale(flow.displacePart);\n\n                                    let x2 = nextStepScales.displaceX //+ stepXScale(stepIndex + 1);\n                                    let y2 = nextStepScales.displaceY + nextNodesSizeScale(flow.nextPosition.displacePart);\n\n                                    let x3 = nextStepScales.displaceX // + stepXScale(stepIndex + 1);\n                                    let y3 = nextStepScales.displaceY + nextNodesSizeScale(flow.nextPosition.displacePart) + nextNodesSizeScale(flow.valuePart);\n\n                                    let y4 = displaceY + nodesSizeScale(flow.displacePart) + nodesSizeScale(flow.valuePart);\n                                    let x4 = displaceX + BAR_WIDTH;\n\n                                    if (orientation === 'horizontal') {\n                                      x1 = displaceX + nodesSizeScale(flow.displacePart);;\n                                      y1 = displaceY + (direction === 'bottom' ? BAR_WIDTH : 0);\n                                      y4 = displaceY + (direction === 'bottom' ? BAR_WIDTH : 0);\n                                      x4 = displaceX + nodesSizeScale(flow.displacePart) + nodesSizeScale(flow.valuePart);\n                                    }\n                                    if (nextStepScales.orientation === 'horizontal') {\n                                      x2 = nextStepScales.displaceX + nextNodesSizeScale(flow.nextPosition.displacePart) + nextNodesSizeScale(flow.valuePart)\n                                      y2 = nextStepScales.displaceY + (nextStepScales.direction === 'bottom' ? BAR_WIDTH : 0);\n\n                                      x3 = nextStepScales.displaceX + nextNodesSizeScale(flow.nextPosition.displacePart);\n                                      y3 = nextStepScales.displaceY + (nextStepScales.direction === 'bottom' ? BAR_WIDTH : 0);\n                                    }\n                                    // @todo do this cleaner\n                                    if (stepIndex === 3) {\n                                      x2 += BAR_WIDTH;\n                                      x3 += BAR_WIDTH;\n                                      y2 += BAR_WIDTH;\n                                      y3 += BAR_WIDTH;\n                                    }\n                                    if (stepIndex === 4) {\n                                      x1 -= BAR_WIDTH;\n                                      x4 -= BAR_WIDTH;\n                                      y1 += BAR_WIDTH;\n                                      y4 += BAR_WIDTH;\n                                    }\n                                    // large arc control point 1\n                                    let controlPoint1AX = x1,\n                                      controlPoint1AY = y2,\n                                      // large arc control point 2\n                                      controlPoint1BX = x1,\n                                      controlPoint1BY = y2,\n                                      // little arc control point 1\n                                      controlPoint2AX = x4,\n                                      controlPoint2AY = y3,\n                                      // little arc control point 2\n                                      controlPoint2BX = x4,\n                                      controlPoint2BY = y3;\n                                    if (stepIndex === 1 || stepIndex === 4) {\n                                      // large arc control point 1\n                                      controlPoint1AX = x2;\n                                      controlPoint1AY = y1;\n                                      // large arc control point 2\n                                      controlPoint1BX = x2;\n                                      controlPoint1BY = y1;\n                                      // little arc control point 1\n                                      controlPoint2AX = x3;\n                                      controlPoint2AY = y4;\n                                      // little arc control point 2\n                                      controlPoint2BX = x3;\n                                      controlPoint2BY = y4;\n                                    }\n                                    if (stepIndex === 0) {\n                                      controlPoint1AY = y1 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n                                      controlPoint1BX = x2 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n\n                                      controlPoint2BY = y4 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y4 - y3);\n                                      controlPoint2AX = x3 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x3 - x4);\n\n                                    } else if (stepIndex === 1) {\n                                      controlPoint1AX = x1 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n                                      controlPoint1BY = y2 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n\n                                      controlPoint2AY = y3 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                      controlPoint2BX = x4 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                    } else if (stepIndex === 3) {\n                                      controlPoint1AY = y1 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n                                      controlPoint1BX = x2 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n\n                                      controlPoint2AX = x3 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                      controlPoint2BY = y4 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                    } else if (stepIndex === 4) {\n                                      controlPoint1AX = x1 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n                                      controlPoint1BY = y2 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n\n                                      controlPoint2BX = x4 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                      controlPoint2AY = y3 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                    }\n                                    const {flow_type, customs_office, product, partner} = flow;\n                                    const value = flow[sumBy];\n                                    const tContent = tooltips.flow[lang]({flow_type, customs_office, product, sumBy, value, partner})\n                                    return (\n                                      <G\n                                        onClick={handleClick}\n                                        className={cx(\"flow-link\", {\n                                          'is-filtered-in': filters && filters.find(({ key, value }) => flow[key] === value),\n                                          'is-highlighted': (highlightedFlow && highlightedFlow._id === flow._id) ||\n                                            (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                        })}\n                                        key={linkIndex}\n                                        data-for=\"alluvial-tooltip\"\n                                        data-tip={tContent}\n                                      >\n                                        {/* <Path \n                                    d={`\n                                    M ${x1} ${y1} \n                                    Q ${controlPoint1AX} ${controlPoint1AY}, ${x2} ${y2} \n                                    L ${x3} ${y3}\n                                    Q ${controlPoint2AX} ${controlPoint2AY}, ${x4} ${y4} \n                                    Z\n                                    `.trim().replace(/\\n/g, ' ')}\n                                    title={'Valeur : ' + flow.valueAbs}\n                                    style={{fill: colorScales[step.field][node.id]}}\n                                  /> */}\n                                        <Path\n                                          d={`\n                                    M ${x1} ${y1} \n                                    C ${controlPoint1AX},${controlPoint1AY} ${controlPoint1BX},${controlPoint1BY} ${x2} ${y2} \n                                    L ${x3} ${y3}\n                                    C ${controlPoint2AX},${controlPoint2AY} ${controlPoint2BX},${controlPoint2BY} ${x4} ${y4} \n                                    Z\n                                    `.trim().replace(/\\n/g, ' ')}\n                                          style={{ fill: colorsPalettes ? colorsPalettes[step.field][node.id] : colorScales[step.field][node.id] }}\n                                        />\n                                        {\n                                          debug ?\n                                            <>\n                                              {/* control line for control point 1 for large arc */}\n                                              <Line\n                                                stroke={'red'}\n                                                x1={x1}\n                                                y1={y1}\n                                                x2={controlPoint1AX}\n                                                y2={controlPoint1AY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint1AX}\n                                                cy={controlPoint1AY}\n                                                r={2}\n                                                fill=\"red\"\n                                              />\n                                              {/* control line for control point 2 for large arc */}\n                                              <Line\n                                                stroke={'blue'}\n                                                x1={x2}\n                                                y1={y2}\n                                                x2={controlPoint1BX}\n                                                y2={controlPoint1BY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint1BX}\n                                                cy={controlPoint1BY}\n                                                r={2}\n                                                fill=\"blue\"\n                                              />\n                                              {/* control line for control point 1 for small arc */}\n                                              <Line\n                                                stroke={'green'}\n                                                x1={x3}\n                                                y1={y3}\n                                                x2={controlPoint2AX}\n                                                y2={controlPoint2AY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint2AX}\n                                                cy={controlPoint2AY}\n                                                r={2}\n                                                fill=\"green\"\n                                              />\n                                              {/* control line for control point 2 for small arc */}\n                                              <Line\n                                                stroke={'lightblue'}\n                                                x1={x4}\n                                                y1={y4}\n                                                x2={controlPoint2BX}\n                                                y2={controlPoint2BY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint2BX}\n                                                cy={controlPoint2BY}\n                                                r={2}\n                                                fill=\"lightblue\"\n                                              />\n                                            </>\n                                            : null\n                                        }\n                                      </G>\n                                    )\n                                  })\n                              }\n                            </G>\n                          )\n                        })\n                    }\n                    {\n                      step.nodes.map((node, nodeIndex) => {\n                        const nodeHeight = nodesSizeScale(node.valuePart);\n                        const initialY = nodesSizeScale(node.displacePart);\n                        const initialWidth = BAR_WIDTH;\n                        const initialHeight = nodeHeight - 2;\n\n                        let y = displaceY + initialY;\n                        let x = displaceX;\n                        let nodeWidth = initialWidth;\n                        let actualHeight = initialHeight;\n                        if (orientation === 'horizontal') {\n                          nodeWidth = initialHeight;\n                          actualHeight = initialWidth;\n                          x = displaceX + initialY;\n                          y = displaceY;\n                        }\n                        if (stepIndex === 4) {\n                          y += BAR_WIDTH;\n                        }\n                        const handleClick = () => {\n                          if (highlightedFilter && highlightedFilter.value === node.id) {\n                            setHighlightedFlow(undefined);\n                            setHighlightedFilter(undefined);\n                          }\n                          else {\n                            if (highlightedFlow) {\n                              setHighlightedFlow(undefined);\n                            }\n                            setHighlightedFilter({ key: step.field, value: node.id, index: stepIndex })\n                          }\n                        }\n                        const isHighlighted = highlightedFilter && node.id === highlightedFilter.value && stepIndex === highlightedFilter.index;\n                        let labelHighlightPart = 0;\n                        if (highlightedFilter) {\n                          labelHighlightPart = node.flows.filter(f => f[highlightedFilter.key] === highlightedFilter.value).reduce((sum, f) => sum + (+f[sumBy]), 0) / highlightedNodeTotal;\n                        } else if (filters && filters.length) {\n                          labelHighlightPart = node.flows\n                          .filter(flow => filters.find(({ key, value }) => flow[key] === value))\n                          .reduce((sum, f) => sum + (+f[sumBy]), 0) \n                          / filtersTotal;\n                        }\n                        if (labelHighlightPart > 1) {\n                          labelHighlightPart = 1;\n                        }\n                        const isFilteredIn = filters && filters.find(({ key, value }) => node.flows.find(flow => flow[key] === value))\n                        let textRotate = 0;\n                        if (stepIndex === 0 || stepIndex === 2) {\n                          textRotate = 30;\n                        } else if (stepIndex === 3 || stepIndex === 5) {\n                          textRotate = -30;\n                        }\n                        const initialLabelX = orientation === 'vertical' ? x + BAR_WIDTH * 2 : x + (centerHorizontalLabels ? nodeWidth / 2 : 0);\n                        let labelX = initialLabelX;\n                        if (orientation === 'horizontal') {\n                      \n                          const minTextWidth = 20;\n                          if (displaceHorizontalLabels && displaceLabels && labelX < displaceLabels + minTextWidth) {\n                            labelX = displaceLabels + minTextWidth;\n                          }\n                          displaceLabels = labelX;\n                          // console.groupEnd('test');\n                        }\n                        const labelY = orientation === 'vertical' ? y + actualHeight / 2 : y + displaceText;\n                        const [labelMain, labelSecondary] = trimText(node.id, 20);\n                        const nodeHasHighlights = (highlightedFlow && node.flows.find(flow => flow._id === highlightedFlow._id)) ||\n                        (highlightedFilter && step.id === highlightedFilter.key && node.id === highlightedFilter.value);\n                        const nodeIsHighlighted = (highlightedFilter && step.field === highlightedFilter.key && node.id === highlightedFilter.value);\n                        const labelFontSize = (highlightedFilter || highlightedNode) ? labelHighlightPart > 0 ? textScale(labelHighlightPart) : textScale(node.valuePart) : textScale(1)\n                        const tContent = tooltips.node[lang](node, stepIndex);\n                        return (\n                          <G\n                            className={cx(\"step-node-container\", {\n                              'has-highlights': nodeHasHighlights,\n                              'is-filtered-in': isFilteredIn,\n                              'is-highlighted': nodeIsHighlighted,\n                            })}\n                            key={node.id}\n                            onClick={handleClick}\n                            data-for=\"alluvial-tooltip\"\n                            data-tip={tContent}\n                          >\n                            <Rect\n                              x={x}\n                              y={y}\n                              width={nodeWidth}\n                              height={actualHeight}\n                              className=\"node-level-node\"\n                            />\n                            <G\n                              transform={`\n                            translate(${labelX}, ${labelY})\n                            rotate(${textRotate})\n                          `}\n\n                              className={\n                                cx(\"node-level-label\", {\n                                  'is-filtered-in': isFilteredIn,\n                                  'is-highlighted': isHighlighted,\n                                  'is-secondary-highlighted': !isHighlighted && labelHighlightPart > 0\n                                })\n                              }\n                            >\n                              <Text\n                                style={{\n                                  fontSize: labelFontSize,\n                                  \n                                }}\n                              >\n                                {isFilteredIn || isHighlighted ? labelMain + ' ' + (labelSecondary ? labelSecondary : '') : `${labelSecondary ? labelMain + '...' : labelMain}`}\n                              </Text>\n                            </G>\n                            {\n                                displaceHorizontalLabels && initialLabelX !== labelX ?\n                                <Line\n                                  x1={x + nodeHeight / 2}\n                                  y1={stepIndex === 0 || stepIndex === 2 ? y + BAR_WIDTH : y}\n                                  x2={labelX}\n                                  y2={labelY}\n                                  className={\n                                    cx(\"label-line\", {\n                                      'is-filtered-in': isFilteredIn,\n                                      'is-highlighted': isHighlighted,\n                                      'is-secondary-highlighted': !isHighlighted && labelHighlightPart > 0\n                                    })\n                                  }\n\n                                />\n                                : null\n                            }\n                            {\n                              node.flows.map((flow, flowIndex) => {\n                                let flowX = x;\n                                let flowY = displaceY + nodesSizeScale(flow.displacePart);\n                                if (stepIndex === 4) {\n                                  flowY += BAR_WIDTH;\n                                }\n                                let flowWidth = BAR_WIDTH;\n                                let flowHeight = nodesSizeScale(flow.valuePart);\n                                if (orientation === 'horizontal') {\n                                  flowWidth = nodesSizeScale(flow.valuePart);\n                                  flowHeight = BAR_WIDTH;\n                                  flowX = displaceX + nodesSizeScale(flow.displacePart);\n                                  flowY = displaceY;\n                                }\n                                return (\n                                  <Rect\n                                    key={flowIndex}\n                                    x={flowX}\n                                    y={flowY}\n                                    width={flowWidth}\n                                    height={flowHeight}\n                                    className={\n                                      cx(\"flow-level-node\", {\n                                        'is-filtered-in': filters && filters.find(({ key, value }) => flow[key] === value),\n\n                                        'is-highlighted': (highlightedFlow && highlightedFlow._id === flow._id) ||\n                                          (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                        // || (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                      })\n                                    }\n                                    style={{ fill: colorsPalettes ? colorsPalettes[step.field][node.id] : colorScales[step.field][node.id] }}\n                                    title={node.id}\n                                  />\n                                )\n                              })\n                            }\n                          </G>\n                        )\n                      })\n                    }\n\n                  </G>\n                )\n              })\n          }\n        </G>\n        </G>\n      </svg>\n      <ReactTooltip id=\"alluvial-tooltip\" />\n    </>\n  )\n}\n\nexport default CircularAlluvialChart;","import groupBy from 'lodash/groupBy';\n\nexport const prepareAlluvialData = (inputData, spec) => {\n  const {sumBy, steps: stepsSpec} = spec;\n  // attribute an id to each flow\n  const data = inputData.map((d, index) => ({...d, _id: index}))\n  // compute nodes for each step\n  let steps = stepsSpec.map((step, stepIndex) => {\n    const {filters} = step;\n    let stepData = data;\n    if (filters && filters.length) {\n      // filter relevant flows\n      stepData = filters.reduce((current, {key, value}) => {\n        return current.filter(datum => {\n          return datum[key] === value;\n        })\n      }, stepData);\n    }\n    // count values for spec modalities\n    let groups = groupBy(stepData, d => d[step.field]);\n    groups = Object.entries(groups).map(([id, initialFlows]) => {\n      const flows = initialFlows.map(flow => {\n        let valueAbs;\n        // if a sumBy is define with sum with its value\n        if (sumBy) {\n          let actualValue = flow[sumBy];\n          actualValue = actualValue === '' ? 0 : actualValue;\n          valueAbs = +actualValue\n        } else valueAbs = 1;\n        return {\n          ...flow,\n          valueAbs\n        }\n      })\n      const valueAbs = flows.reduce((sum, flow) => {\n        return sum + flow.valueAbs\n      }, 0);\n      return {\n        id,\n        valueAbs,\n        flows\n      }\n    });\n    // compute relative part of each modality\n    const totalValue = groups.reduce((sum, g) => sum + g.valueAbs, 0);\n    groups = groups.map(g => ({\n      ...g,\n      valuePart: g.valueAbs / totalValue,\n      flows: g.flows.map(flow => ({\n        ...flow,\n        valuePart: flow.valueAbs / totalValue\n      }))\n      .sort((a, b) => {\n        // if (a.id > b.id) {\n        const sortAscending = stepIndex >= 2 && stepIndex <= 4 ? -1 : 1;\n        if (a.valuePart < b.valuePart) {\n          return sortAscending;\n        }\n        return -sortAscending;\n      })\n    }));\n    return {\n      ...step,\n      totalValue,\n      nodes: groups.sort((a, b) => {\n        // if (a.id > b.id) {\n        const sortAscending = stepIndex >= 2 && stepIndex <= 4 ? -1 : 1;\n        if (a.valuePart < b.valuePart) {\n          return sortAscending;\n        }\n        return -sortAscending;\n      })\n    }\n  })\n\n  // compute displacements for each step\n  steps = steps.map((step, index) => {\n    let displaceAbs = 0;\n    let displacePart = 0;\n    const newNodes = step.nodes.map(node => {\n      // computing flow-level displacement\n      let localDisplaceAbs = displaceAbs;\n      let localDisplacePart = displacePart;\n      const newNode = {\n        ...node,\n        displaceAbs,\n        displacePart,\n        flows: node.flows.map(flow => {\n          const newFlow = {\n            ...flow,\n            displaceAbs: localDisplaceAbs,\n            displacePart: localDisplacePart,\n            relativeDisplaceAbs: localDisplaceAbs - displaceAbs,\n            relativeDisplacePart: localDisplacePart - displacePart\n          }\n          localDisplaceAbs += flow.valueAbs;\n          localDisplacePart += flow.valuePart;\n          return newFlow;\n        })\n      };\n      displaceAbs += node.valueAbs;\n      displacePart += node.valuePart;\n      return newNode;\n    })\n    return {\n      ...step,\n      nodes: newNodes\n    }\n  })\n\n  // compute links\n  const stepsWithLinks = steps.map((step, index) => {\n    // for each step except last one\n    if (index < steps.length - 1) {\n      const nextStep = steps[index + 1];\n      const nextKey = nextStep.field;\n      const {nodes} = step;\n      // iterate over step's to add links\n      const newNodes = nodes.map((node, nodeIndex) => {\n        \n        const {flows} = node;\n        \n        const newFlows = flows.map((flow, flowIndex) => {\n          const nextVal = flow[nextKey];\n          const nextStepGroup = nextStep.nodes.find(({id}) => id === nextVal);\n          if (nextStepGroup) {\n            \n            const nextFlow = nextStepGroup.flows.find(flow2 => {\n              return (flow._id === flow2._id)\n            })\n            if (nextFlow) {\n              const {\n                displaceAbs,\n                displacePart,\n                relativeDisplaceAbs,\n                relativeDisplacePart\n              } = nextFlow;\n              const nextPosition = {\n                displaceAbs,\n                displacePart,\n                relativeDisplaceAbs,\n                relativeDisplacePart\n              }\n              return {\n                ...flow,\n                nextPosition\n              }\n            }\n          } else {\n          }\n          return flow;\n        })\n        return {\n          ...node,\n          flows: newFlows\n        }\n      });\n      return {\n        ...step,\n        nodes: newNodes\n      }\n    }\n    return step;\n  })\n\n  return stepsWithLinks;\n}","import React from 'react';\nimport Slider/*, { SliderTooltip }*/ from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst SliderRange = ({ title, min, max, value, onChange }) => {\n    const style = { width: 300, margin: 50 };\n\n    return (\n        <div style={style}>\n            <p>{title}</p>\n           <Range \n            allowCross={false} \n            min={min} \n            max={max} \n            value={value} \n            onChange={onChange} \n          />\n        </div>\n    )\n    }\n    \nexport default SliderRange;","import SliderRange from './SliderRange';\n\nexport default SliderRange;","import React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport { polarToCartesian } from '../../helpers/misc';\n\n\nconst AxisObject = ({\n  size,\n  MARGIN,\n  axisIndex,\n  axisRankScale,\n  axis,\n  label\n}) => {\n    const [rawX1, rawY1] = [size/2 + MARGIN / 2, size/2 + MARGIN / 2];\n    const [x2Rel, y2Rel] = polarToCartesian(size/2, axisRankScale(axisIndex))\n    const rawX2 = rawX1 + x2Rel;\n    const rawY2 = rawY1 + y2Rel;\n    let labelXDisplace = -MARGIN / 8;\n    let labelYDisplace = 15;\n    if (axisIndex > 0) {\n      labelYDisplace = -10;\n      if (axisIndex === axis.length / 2) {\n        labelYDisplace = -20;\n        labelXDisplace = -MARGIN / 6;\n      } else if (axisIndex < axis.length / 2) {\n        labelXDisplace = -MARGIN / 2;\n      } else {\n        labelXDisplace = 5;\n      }\n      // special cases\n      if (axisIndex === 3 || axisIndex === 5) {\n        labelYDisplace = -30;\n      }\n      if (axisIndex === 7) {\n        labelYDisplace = 5;\n      }\n      if (axisIndex === 1) {\n        labelYDisplace = 5;\n        labelXDisplace = -MARGIN/3;\n      }\n    }\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      labelX,\n      labelY\n    } = useSpring({\n      x1: rawX1,\n      y1: rawY1,\n      x2: rawX2,\n      y2: rawY2,\n      labelX: rawX2 + labelXDisplace,\n      labelY: rawY2 + labelYDisplace\n    })\n    return (\n      <g key={axisIndex} className=\"AxisObject\">\n        <animated.line\n          {\n            ...{\n              x1,\n              y1,\n              x2,\n              y2,\n            }\n          }\n        />\n        <animated.foreignObject \n          x={labelX} \n          y={labelY} \n          width={MARGIN * .7} \n          height={MARGIN}\n        >\n          <div className=\"label\">\n            {label}\n          </div>\n        </animated.foreignObject>\n      </g>\n    )\n}\n\nexport default AxisObject;","import { sum } from 'lodash';\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport { fixSvgDimension, polarToCartesian } from '../../helpers/misc';\n\nconst Circle = ({\n  cx: inputX,\n  cy: inputY,\n  r: inputR,\n  ...props\n}) => {\n  const {\n    cx,\n    cy,\n    r,\n  } = useSpring({\n    cx: fixSvgDimension(inputX),\n    cy: fixSvgDimension(inputY),\n    r: inputR\n  })\n  return (\n    <animated.circle\n      cx={cx}\n      cy={cy}\n      r={r}\n      {...props}\n    />\n  )\n}\n\nconst VisObject = ({\n  color,\n  data,\n  axisIndexMap,\n  axisRankScale,\n  center,\n  name,\n  radiusScale\n}) => {\n  const points = Object.entries(axisIndexMap)\n  .map(([key, index]) => {\n    const val = data[key] || 0;\n    const r = radiusScale(val);\n    const theta = axisRankScale(+index);\n    const [xRaw, yRaw] = polarToCartesian(r, theta);\n    const x = fixSvgDimension(xRaw + center[0]);\n    const y = fixSvgDimension(yRaw + center[1]);\n    return [x, y]\n  })\n  const {joinedPoints} = useSpring({\n    joinedPoints: points.map(([x, y]) => `${x},${y}`).join(' ')\n  });\n\n  let tooltipValues = Object.entries(data);\n  const sumOfParts = sum(tooltipValues.map(v => v[1]));\n  tooltipValues = tooltipValues.map(([key, val]) => [key, val / sumOfParts])\n  return (\n    <g \n      className=\"VisObject\"\n      data-for=\"radar-tooltip\"\n      data-html={true}\n      data-place=\"left\"\n      data-tip={`\n      <p>\n      ${name === 'Tous les bureaux' ? 'Parts des destinations des voyages de 1789 initiés depuis tous les ports de la région' : 'Part des destinations pour les voyages de 1789 initiés depuis des ports rattachés au bureau des fermes de <strong>' + name + '</strong>'} :\n      </p>\n      <ol>\n        ${\n          tooltipValues\n          .sort(([_key, portionA], [_key2, portionB]) => {\n            if (portionA > portionB) {\n              return -1;\n            }\n            return 1;\n          })\n          .map(([key, portion]) => `\n            <li>\n              <strong>${key}</strong> : <strong>${(portion * 100).toFixed(2)}%</strong>\n            </li>\n          `).join('\\n')\n        }\n      </ol>\n  `}\n    >\n      <animated.polygon\n        points={joinedPoints}\n        fill={color}\n        fillOpacity={.5}\n      />\n      {\n        points\n        .map(([x, y], index) => {\n          return (\n            <Circle\n              key={index}\n              cx={x}\n              cy={y}\n              r={1}\n              fill={color}\n            />\n          )\n        })\n      }\n    </g>\n  )\n}\n\nexport default VisObject;","import RadarPlot from './RadarPlot';\n\nexport default RadarPlot;","import { scaleLinear } from 'd3-scale';\nimport React, { useEffect, useMemo } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport Tooltip from 'react-tooltip';\n\nimport AxisObject from './AxisObject';\nimport VisObject from './VisObject';\n\nconst RadarPlot= ({\n  data,\n  size : wholeSize = 100,\n  axis,\n}) => {\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n  const axisIndexMap = useMemo(() =>\n    axis.reduce((res, a, aIndex) => ({\n      ...res,\n      [a]: aIndex\n    }), {})\n  , [axis])\n  const MARGIN = 100;\n  const size = wholeSize - MARGIN;\n  const { visCenter, visSize } = useSpring({\n    visCenter: size/2 + MARGIN / 2,\n    visSize: size/2,\n  })\n  const axisRankScale = scaleLinear().domain([0, axis.length]).range([Math.PI / 2, Math.PI * 2.5])\n  const radiusScale = scaleLinear().domain([0, 1]).range([0, size / 2])\n  return (\n    <>\n    <svg className=\"RadarPlot\" width={wholeSize} height={wholeSize}>\n      <animated.circle\n        cx={visCenter}\n        cy={visCenter}\n        r={visSize}\n        strokeWidth={.5}\n        stroke=\"grey\"\n        fill=\"none\"\n      />\n      <g className=\"background-container\">\n        {\n          axis.map((label, axisIndex) => (\n            <AxisObject\n              key={axisIndex}\n              {\n                ...{\n                  size,\n                  MARGIN,\n                  axisIndex,\n                  axisRankScale,\n                  axis,\n                  label\n                }\n              }\n            />\n          ))\n        }\n      </g>\n      <g className=\"objects-container\">\n        {\n          data.map((datum, datumIndex) => (\n            <VisObject\n              key={datum.meta.name}\n              color={datum.meta.color}\n              name={datum.meta.name}\n              data={datum.data}\n              axisIndexMap={axisIndexMap}\n              axisRankScale={axisRankScale}\n              center={[size/2 + MARGIN / 2, size/2 + MARGIN / 2]}\n              radiusScale={radiusScale}\n            />\n          ))\n        }\n      </g>\n    </svg>\n    <Tooltip id=\"radar-tooltip\" />\n    </>\n  )\n}\n\nexport default RadarPlot;\n","/* eslint react-hooks/exhaustive-deps : 0 */\nimport { useEffect, useMemo, useState } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport _, { maxBy, uniqBy, sumBy, values } from 'lodash';\nimport cx from 'classnames';\n\nimport SliderRange from '../../components/SliderRange';\nimport RadarPlot from '../../components/RadarPlot';\n\n\nconst prepareTravelData = datas => {\n  return _(datas)\n    .groupBy('destination_radar')\n    .map((dest, id) => {\n      var rObj = {};\n      rObj[id] = dest.length;\n      return rObj;\n    })\n    .value();\n};\n\nconst prepareTonnageData = (datas) => {\n  return _(datas)\n    .groupBy(\"destination_radar\")\n    .map((dest, id) => {\n      var rObj = {};\n      rObj[id] = sumBy(dest, \"tonnage\");\n      return rObj;\n    })\n    .value();\n};\n\n\nconst normalizeRadarValues = (datas, destCaptions) => {\n  // mapping on max value\n  const maxValue = maxBy(values(datas), function (o) {\n    return o;\n  });\n  // mapping on sum\n  // const maxValue = sum(values(datas))\n  var x = scaleLinear()\n    .domain([0, maxValue])\n    .range([0, 1]);\n  for (var key in datas) {\n    if (datas.hasOwnProperty(key)) {\n      datas[key] = x(datas[key]);\n    }\n  }\n  for (var dkey in destCaptions) {\n    if (!datas.hasOwnProperty(dkey)) {\n      datas[dkey] = 0\n    }\n  }\n\n  return datas;\n};\n\nconst RadarWrapper = ({\n  data: inputData,\n  globalWidth = 500,\n  minified,\n  title,\n  bureaux = \"tous\",\n  navigoAgregation = \"tonnage\",\n  minTonnage,\n  maxTonnage,\n  axis = [],\n  colorPalette\n}) => {\n  const [selectedBureaux, setSelectedBureaux] = useState(new Set(['Tous les bureaux']));\n  const [aggregationMethod, setAggregationMethod] = useState('tonnage');\n  const [tonnageFilterValues, setTonnageFilterValues] = useState([]);\n  const [datasetMaximumTonnage, setDatasetMaximumTonnage] = useState();\n  const datasetMinimumTonnage = 0;\n\n  /**\n   * DATA UPDATE\n   */\n  const data = useMemo(() => {\n    if (inputData) {\n      const newData = inputData.map(d => {\n        // remove csv empty values\n        if ((d.destination_radar !== '') & (d.ferme_bureau !== '')) {\n          return {\n            ferme_bureau: d.ferme_bureau,\n            destination_radar: d.destination_radar.replace(/['\"]+/g, ''),\n            tonnage: +d.tonnage\n          };\n        }\n        return undefined;\n      })\n        .filter(d => d)\n      // setDestCaptions(Object.assign({}, ...prepareDestCaptions(newData)))\n      let max = maxBy(newData, 'tonnage').tonnage;\n      setDatasetMaximumTonnage(max);\n      if (maxTonnage) {\n        max = +maxTonnage;\n      }\n      let min = datasetMinimumTonnage;\n      if (minTonnage) {\n        min = +minTonnage;\n      }\n      setTonnageFilterValues([min, max]);\n      return newData;\n    }\n    return inputData;\n  }, [inputData])\n\n  const bureauxList = useMemo(() => {\n    return [\n      'Tous les bureaux',\n      ...uniqBy(data, 'ferme_bureau').map(({ ferme_bureau }) => ferme_bureau)\n    ]\n  }, [data])\n\n  const filteredData = useMemo(() => {\n    const bureauxToKeep = Array.from(selectedBureaux);\n    return data\n      .filter(datum => {\n        if (bureauxToKeep.includes('Tous les bureaux')) {\n          return true;\n        }\n        return bureauxToKeep.includes(datum.ferme_bureau)\n      })\n      .filter(datum => {\n        if (aggregationMethod === 'tonnage' && tonnageFilterValues && tonnageFilterValues.length) {\n          return datum.tonnage >= tonnageFilterValues[0]\n            && datum.tonnage <= tonnageFilterValues[1]\n        }\n        return true;\n      })\n  }, [data, selectedBureaux, tonnageFilterValues])\n\n  /**\n   * UPDATE FROM PROPS\n   */\n  /** update from navigoAgregation prop */\n  useEffect(() => {\n    setAggregationMethod(navigoAgregation);\n  }, [navigoAgregation])\n\n  /** update from bureaux prop */\n  useEffect(() => {\n    if (bureaux) {\n      const cleanBureaux = (bureaux).split(',')\n      .map(b => b.trim())\n      .map(b => b === 'tous' ? 'Tous les bureaux' : b)\n    setSelectedBureaux(new Set(cleanBureaux));\n    }\n    \n  }, [bureaux])\n\n  /** update from maxTonnage prop */\n  useEffect(() => {\n    if (maxTonnage) {\n      if (tonnageFilterValues && tonnageFilterValues.length) {\n        setTonnageFilterValues([tonnageFilterValues[0], +maxTonnage]);\n      } else {\n        setTonnageFilterValues([0, +maxTonnage]);\n      }\n    }\n  }, [maxTonnage])\n\n  /** update from minTonnage prop */\n  useEffect(() => {\n    if (minTonnage) {\n      if (tonnageFilterValues && tonnageFilterValues.length) {\n        setTonnageFilterValues([+minTonnage, tonnageFilterValues[1]]);\n      } else {\n        const max = maxBy(data, 'tonnage').tonnage;\n        setTonnageFilterValues([+minTonnage, max]);\n      }\n    }\n  }, [minTonnage])\n\n\n  const radarData = useMemo(() => {\n    const bureauxObjects = Array.from(selectedBureaux);\n\n    return bureauxObjects.map((bureauName) => {\n      const relevantData = bureauName === 'Tous les bureaux' ? filteredData :\n        filteredData.filter(datum => datum.ferme_bureau === bureauName);\n      const preparedData = aggregationMethod === 'tonnage' ? prepareTonnageData(relevantData) : prepareTravelData(relevantData);\n      return {\n        data: normalizeRadarValues\n          (Object.assign({}, ...preparedData)\n          ),\n        meta: {\n          color: colorPalette[bureauName],\n          name: bureauName\n        }\n      }\n    })\n  }, [selectedBureaux, tonnageFilterValues, aggregationMethod]);\n\n  if (!data || !radarData) {\n    return null;\n  }\n  return (\n    <div className={cx(\"RadarWrapper\", { 'is-minified': minified })}>\n\n      <h5 className=\"visualization-title\">{title}</h5>\n      <RadarPlot\n        data={radarData.reverse()}\n        size={minified ? globalWidth * .4 : globalWidth * .7}\n        axis={axis}\n      />\n      <div\n        className={cx(\"controls-container\", { 'is-minified': minified })}\n      >\n        <div className=\"controls-contents\">\n          <strong>{filteredData.length}</strong> voyages agrégés par <span className=\"aggregation-controls-container\">\n\n            <select value={aggregationMethod} onChange={e => setAggregationMethod(e.target.value)}>\n              <option\n                key={'tonnage'}\n                id={'tonnage'}\n                value={'tonnage'}\n              >tonnage{aggregationMethod === 'tonnage' ? ` (navires de ${tonnageFilterValues[0]} à ${tonnageFilterValues[1]} tonneaux)` : ''}</option>\n              <option\n                key={'voyages'}\n                id={'voyages'}\n                value={'voyages'}\n              >nombre de voyages</option>\n            </select>\n            {\n              aggregationMethod && aggregationMethod === 'tonnage' &&\n              <span className=\"slider-container\">\n                <SliderRange\n                  min={datasetMinimumTonnage}\n                  max={datasetMaximumTonnage}\n                  value={tonnageFilterValues}\n                  onChange={value => [setTonnageFilterValues(value)]}\n                />\n              </span>\n            }\n          </span>\n          <ul className=\"bureaux-list\">\n            {\n              bureauxList.map((bureau, index) => {\n                const handleClick = () => {\n                  const newSelectedBureaux = new Set(selectedBureaux);\n                  if (selectedBureaux.has(bureau) && Array.from(selectedBureaux).length > 1) {\n                    newSelectedBureaux.delete(bureau);\n                  } else {\n                    newSelectedBureaux.add(bureau);\n                  }\n                  setSelectedBureaux(newSelectedBureaux);\n                }\n                return (\n                  <li\n                    key={index}\n                    onClick={handleClick}\n                    className={cx(\"bureau-item\", { 'is-active': selectedBureaux.has(bureau) })}\n                  >\n                    <span\n                      className=\"color-marker\"\n                      style={{ background: colorPalette[bureau] }}\n                    />\n                    <span className=\"bureau-label\">\n                      {bureau === 'Tous les bureaux' ? 'Ensemble des ports' : bureau}\n                    </span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RadarWrapper;","import PrincipalVisualizationPart2 from './PrincipalVisualizationPart2';\n\n\nexport default PrincipalVisualizationPart2;","import {useMemo} from 'react';\nimport cx from 'classnames';\nimport CircularAlluvialChart from \"../../components/CircularAlluvialChart/CircularAlluvialChart\";\nimport RadarWrapper from './RadarWrapper';\n\nimport colorsPalettes from '../../colorPalettes';\nimport {fixSvgDimension} from '../../helpers/misc';\n\nimport './PrincipalVisualizationPart2.scss';\n\nconst PrincipalVisualizationPart2 = ({\n  width: inputWidth, \n  height: containerHeight, \n  datasets, \n  showOnlyToflit = false, \n  atlasMode, \n  highlight = 'toflit18',\n  lang = 'fr',\n  filter = 'aucun',\n  bureaux=\"tous\",\n  navigoAgregation=\"tonnage\",\n  minTonnage,\n  maxTonnage,\n  ...props\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = atlasMode ? 1200 : fixSvgDimension(containerHeight);\n  const {sumToflitBy, alluvialFilters} = useMemo(() => {\n    let sumBy = 'value';\n    let filters = [];\n    switch(filter) {\n      case \"colonial\":\n        filters = [\n          {\n            key: 'product',\n            value: `produits coloniaux`\n          },\n          {\n            key: 'partner',\n            value: `Afrique`\n          },\n          {\n            key: 'partner',\n            value: `Colonies`\n          }\n        ];\n        break;\n      case \"eau-de-vie\":\n        filters = [\n          {\n            key: 'product',\n            value: `eau-de-vie et vins divers`\n          }\n        \n        ];\n        break;\n      case \"sel\":\n        filters = [{\n          key: 'product',\n          value: `sel`\n        }];\n        sumBy = 'product_weight_kg'\n        break;\n      default:\n        break;\n    }\n\n    return {\n      sumToflitBy: sumBy,\n      alluvialFilters: filters\n    }\n  }, [filter]);\n  const toflit18titles = {\n    fr: `Échanges de la direction des fermes de La Rochelle en 1789 par produit et partenaire, dimensionnés selon leur ${sumToflitBy === 'value' ? 'valeur commerciale' : 'poids de marchandises'}`,\n    en: `Échanges de la direction des fermes de La Rochelle en 1789 par produit et partenaire, dimensionnés selon leur ${sumToflitBy === 'value' ? 'valeur commerciale' : 'poids de marchandises'}`\n  };\n  const navigoTitles = {\n    fr: `Parts de différents groupes de directions pour les navires partis de la région PASA en 1789`,\n    en: `Parts de différents groupes de direction pour les navires partis de la région PASA en 1789`\n  };\n  return (\n    <div \n      className={cx(\"PrincipalVisualizationPart2\", {'is-atlas-mode': atlasMode})}\n    >\n     <div \n      className=\"circular-alluvial-container\"\n      style={{\n        width: atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? width * .6 : width * .5,\n        height: atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? height : height * .5,\n      }}\n    >\n        <CircularAlluvialChart\n          data={datasets['part_2_toflit_viz_data.csv']}\n          width={atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? width * .6 : width * .45}\n          height={atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? height : height * .45}\n          sumBy={sumToflitBy}\n          filters={alluvialFilters}\n          colorsPalettes={colorsPalettes}\n          lang={lang}\n          title={toflit18titles[lang]}\n          displaceHorizontalLabels={highlight === 'toflit18'}\n          centerHorizontalLabels={highlight === 'toflit18'}\n          tooltips={{\n            node: {\n              fr: ({id, ...node}, step) => {\n                if (step === 0 || step === 5) {\n                  return `En 1789, le bureau des fermes de ${id} a ${step < 3 ? 'exporté' : 'importé'} ${parseInt(node.valueAbs)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'}.`;\n                } else if (step === 1 || step === 4) {\n                  return `En 1789, la direction des fermes de La Rochelle a ${step < 3 ? 'exporté' : 'importé'} ${parseInt(node.valueAbs)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} de ${id}.`;\n                } else {\n                  return `En 1789, la direction des fermes de La Rochelle a ${step < 3 ? 'exporté' : 'importé'} ${parseInt(node.valueAbs)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} vers le partenaire ${id}.`;\n                }\n              },\n              en: () => ({id, ...node}, step) => {\n                if (step === 0 || step === 5) {\n                  return `In 1789, the bureau des fermes of ${id} has ${step < 3 ? 'imported' : 'exported'} ${node[sumToflitBy]} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'}.`;\n                } else if (step === 1 || step === 4) {\n                  return `In 1789, the direction des fermes de La Rochelle has ${step < 3 ? 'imported' : 'exported'} ${parseInt(node.valueAbs)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} of ${id}.`;\n                } else {\n                  return `In 1789, the direction des fermes de La Rochelle has ${step < 3 ? 'imported' : 'exported'} ${parseInt(node.valueAbs)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} to the partner ${id}.`;\n                }\n              },\n            },\n            flow: {\n              fr: ({flow_type, customs_office, product, sumBy, value, partner}) => `En 1789, le bureau des fermes de ${customs_office} a ${flow_type === 'import' ? 'importé' : 'exporté'} ${parseInt(value)} ${sumBy === 'value' ? 'livres tournois' : 'kg'} de ${product} ${flow_type === 'import' ? 'depuis' : 'vers'} le partenaire ${partner}`,\n              en: ({flow_type, customs_office, product, sumBy, value, partner}) => `In 1789, the bureau des fermes of ${customs_office} has ${flow_type === 'import' ? 'imported' : 'exported'} ${parseInt(value)} ${sumBy === 'value' ? 'livres tournois' : 'kg'} of ${product} ${flow_type === 'import' ? 'from' : 'to'} the partner ${partner}`,\n            }\n          }}\n          steps={[\n            {\n              field: \"customs_office\",\n              labels: {\n                fr: 'bureau des fermes',\n                en: 'customs office'\n              },\n              filters: [{key: 'flow_type', value: 'export'}]\n            },\n            {\n              field: \"product\",\n              labels: {\n                fr: 'type de produit',\n                en: 'product type'\n              },\n              filters: [{key: 'flow_type', value: 'export'}]\n            },\n            {\n              field: \"partner\",\n              labels: {\n                fr: 'partenaire du commerce extérieur',\n                en: 'external trade partner'\n              },\n              filters: [{key: 'flow_type', value: 'export'}]\n            },\n            {\n              field: \"partner\",\n              labels: {\n                fr: 'partenaire du commerce extérieur',\n                en: 'external trade partner'\n              },\n              filters: [{key: 'flow_type', value: 'import'}]\n            },\n            {\n              field: \"product\",\n              labels: {\n                fr: 'type de produit',\n                en: 'product type'\n              },\n              filters: [{key: 'flow_type', value: 'import'}]\n            },\n            {\n              field: \"customs_office\",\n              labels: {\n                fr: 'bureau des fermes',\n                en: 'customs office'\n              },\n              filters: [{key: 'flow_type', value: 'import'}]\n            },\n          ]}\n        />\n     </div>\n     <div \n      className=\"radar-container\"\n      style={{\n        width: atlasMode ? window.innerWidth * .5 : highlight === 'navigo' ? width * .7 : width * .4\n      }}\n    >\n      <RadarWrapper \n        data={datasets['part_2_navigo_viz_data.csv']}\n        minified={!atlasMode && highlight !== 'navigo'}\n        globalWidth={atlasMode ? window.innerWidth * .5 : width}\n        bureaux={bureaux}\n        navigoAgregation={navigoAgregation}\n        minTonnage={minTonnage}\n        maxTonnage={maxTonnage}\n        title={navigoTitles[lang]}\n        axis={[\n          'Local',\n          'Afrique',\n          'Colonies',\n          'Grande-Bretagne',\n          'Europe',\n          'Ports francs et petites îles',\n          'France',\n          'Reste du monde',\n        ]}\n        colorPalette={colorsPalettes.customs_office}\n      />\n       {/* <img alt=\"radar-maquette\" src={`${process.env.PUBLIC_URL}/maquettes/part2-radar.jpg`} /> */}\n     </div>\n    </div>\n  )\n}\n\nexport default PrincipalVisualizationPart2;","\nimport NetworkGraphChart from \"../../components/NetworkGraphChart/GraphContainer\";\nimport BarChart from \"../../components/BarChart\";\nimport colorPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\nconst Step2 = ({\n  width: inputWidth,\n  height: inputHeight,\n  datasets,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  return (\n    <>\n          <div className=\"graphs-container\" style={{ position: 'relative', height: height * .6 }}>\n            <div className=\"graph-container\" style={{ width: width * .6, height: height * .6, position: 'absolute' }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_La Rochelle.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                spatialize\n                ratio={1.1}\n                title={'Réseau des voyages partant ou arrivant dans la région PASA en 1787 ...'}\n              />\n            </div>\n            <div className=\"graph-container\" style={{ width: width * .4, height: height * .3, position: 'absolute', right: 0, top: 0 }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_Bordeaux.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                spatialize\n                title={'...comparé à celui de l\\'amirauté de Bordeaux'}\n                ratio={1}\n              />\n            </div>\n            <div className=\"graph-container\" style={{ width: width * .4, height: height * .3, position: 'absolute', right: 0, bottom: 0 }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_Nantes.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                title={'...comparé à celui de l\\'amirauté de Nantes'}\n                ratio={1}\n                spatialize\n              />\n            </div>\n          </div>\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            width: width * .3,\n            height: height * .3,\n            paddingLeft: 0,\n          }}\n            className=\"ColorLegend\"\n          >\n            <h5>Légende des réseaux</h5>\n            <ul className=\"color-legend\">\n              <li>\n                Taille des points représentant les ports : nombre de liens avec d'autres ports dans le réseau\n              </li>\n              <li>\n                <span style={{ background: colorPalettes.generic.dark }} className=\"color-box\"></span>\n                <span className=\"color-label\">\n                  Port interne à la région\n                </span>\n              </li>\n              <li>\n                <span style={{ background: colorPalettes.generic.accent2 }} className=\"color-box\"></span>\n                <span className=\"color-label\">\n                  Port externe à la région\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            width: width * .7,\n            height: height * .3\n          }}>\n            <BarChart\n              data={datasets['part_3_centralite_comparaison.csv']}\n              title=\"Centralité comparée de La Rochelle par rapport à PASA et, pour ses régions côtières voisines, du port principal par rapport au réseau des voyages de son amirauté (1787)\"\n              width={width * .7}\n              height={height * .3}\n              orientation={'vertical'}\n              layout={'groups'}\n              y={{\n                field: 'port',\n                title: 'Port (dans son réseau local)',\n              }}\n              x={{\n                field: 'score',\n                title: 'Score',\n                // tickSpan: .1,\n                // tickFormat: (d, i) => parseInt(d * 100) + '%'\n              }}\n              color={{\n                field: 'metrics_type',\n                title: 'Type de métrique',\n                palette: {\n                  'PageRank': colorPalettes.generic.dark,\n                  'betweenness centrality': colorPalettes.generic.accent1,\n                }\n              }}\n              margins={{\n                bottom: 20\n              }}\n              tooltip={d => d.metrics_type === 'PageRank' ? 'Le PageRank est une mesure de centralité qui consiste à donner à chaque port un score proportionnel à la somme des pageranks des ports avec lesquels il a des voyages en commun.' : 'La centralité intermédiaire est une mesure de centralité égale au nombre de fois où un port donné est sur le chemin le plus court entre deux autres ports du réseau des voyages.'}\n            />\n          </div>\n        </>\n  )\n}\n\nexport default Step2;","import PrincipalVisualizationPart3 from './PrincipalVisualizationPart3';\n\nexport default PrincipalVisualizationPart3;","\nimport cx from 'classnames';\nimport { useState, useEffect } from 'react';\n\nimport GeographicMapChart from '../../components/GeographicMapChart/GeographicMapChart';\nimport { Step3Objects, SmallMultiples, renderTriangles } from './renderObjectsFunctions'; // pas sur que ça reste à terme\n\nimport './PrincipalVisualizationPart3.scss';\nimport colorsPalettes from '../../colorPalettes.js';\nimport Step2 from './Step2';\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\nconst PrincipalVisualizationPart3 = ({ \n  datasets, \n  step, \n  width: inputWidth, \n  height: inputHeight, \n  atlasMode \n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const ANIMATION_DURATION = 1;\n  const height = atlasMode ? window.innerHeight : fixSvgDimension(inputHeight);\n  const [currentMapTemplate, setCurrentMapTemplate] = useState('France');\n  useEffect(() => {\n    setTimeout(() => {\n      switch (step) {\n        case 1:\n          setCurrentMapTemplate('rotated Poitou');\n          break;\n        case 3:\n          setCurrentMapTemplate('Poitou zoomed');\n          break;\n        default:\n          break;\n      }\n    }, ANIMATION_DURATION)\n  }, [step])\n  return (\n    <div className={cx(\"PrincipalVisualizationPart3\", { 'is-atlas-mode': atlasMode })} style={{ height: atlasMode ? undefined : height }}>\n      <div className={cx('step', { 'is-visible': step === 1 })}>\n        <GeographicMapChart\n          title={'Navigation au départ des ports de la région PASA en 1789'}\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_france_1789.geojson']\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step1_viz_data.csv'],\n              renderObjects: () => (\n                <>\n                  <rect\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height / 8}\n                    fill={'url(#radial-bg)'}\n                  />\n                  <defs>\n                    <linearGradient id=\"radial-bg\" gradientTransform=\"rotate(90)\">\n                      <stop offset=\"10%\" stopColor={atlasMode ? 'white' : colorsPalettes.ui.colorBackgroundBlue} />\n                      <stop offset=\"100%\" stopColor={atlasMode ? 'white' : colorsPalettes.ui.colorBackgroundBlue} stop-opacity={0} />\n                    </linearGradient>\n                  </defs>\n                </>\n              )\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step1_viz_data.csv'],\n              renderObjects: props => renderTriangles({...props, atlasMode})\n            }\n          ]}\n          projectionTemplate={atlasMode ? 'rotated Poitou' : currentMapTemplate}\n          height={atlasMode ? window.innerHeight * .9 : height}\n          width={width}\n        />\n      </div>\n      <div className={cx('step', { 'is-visible': step === 2 })} style={{ height }}>\n        <Step2\n          {\n          ...{\n            width,\n            height,\n            datasets,\n          }\n          }\n        />\n      </div>\n      <div className={cx('step', { 'is-visible': step === 3 })} height={height}>\n        <GeographicMapChart\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_france_1789.geojson'],\n              color: {\n                field: 'shortname'\n              }\n            },\n            {\n              type: 'custom',\n              data: {\n                customsOffices: datasets['part_3_step3_viz_customs_offices_data.csv']\n              .filter(d => \n                d.customs_region === 'La Rochelle' \n                && d.name !== 'undefined customs office'\n                && !d.name.includes('Bouin')\n                ),\n                ports: datasets['part_3_step3_viz_ports_data.csv']\n              },\n              renderObjects: Step3Objects // besoin de montrer les labels des bureaux et ports => modifier la fonction\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step3_viz_customs_offices_data.csv'],\n              renderObjects: SmallMultiples\n            }\n          ]}\n          projectionTemplate={atlasMode ? 'Poitou zoomed' : currentMapTemplate}\n          height={height}\n          width={width}\n          title={'Extraversion du commerce et de la navigation regroupés par bureau de fermes en 1789'}\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default PrincipalVisualizationPart3;","import cx from 'classnames';\nimport GeographicMapChart from \"../../components/GeographicMapChart/GeographicMapChart\";\nimport { useSpring, animated } from 'react-spring'\n\nimport { useEffect, useState } from 'react';\nimport './IntroBureaux.scss';\n\nimport colorPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from '../../helpers/misc';\n\nconst BureauBackground = ({\n  projection,\n  atlasMode,\n  height,\n  datum,\n  width,\n  index,\n  radius\n}) => {\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const {transform} = useSpring({ \n    to: {\n      transform: `translate(${x}, ${y})` \n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g transform={transform}>\n      <animated.circle\n        r={radius * 2}\n        cx={0}\n        cy={0}\n        fill={`url(#bureau-${index})`}\n      />\n      <radialGradient id={`bureau-${index}`}>\n        <stop offset={atlasMode ? '0%' : \"20%\"} stopColor={colorPalettes.customs_office[datum.name]} />\n        <stop offset=\"100%\" stopColor={atlasMode ? \"rgba(255,255,255,0)\" : \"rgba(51,109,124,0)\"} />\n      </radialGradient>\n    </animated.g>\n  )\n}\n\nconst BureauLabel = ({\n  projection,\n  height,\n  datum,\n  width,\n  index,\n  radius\n}) => {\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n  const labelOnRight = ['La Rochelle', 'Tonnay-Charente'].includes(datum.name);\n  const thatWidth = fixSvgDimension(datum.name.length * width * height * .0005);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const {transform} = useSpring({ \n    to: {\n      transform: `translate(${x}, ${y})` \n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g transform={transform}>\n      <circle\n        r={2}\n        cx={0}\n        cy={0}\n        fill={'white'}\n      />\n      <foreignObject\n        x={labelOnRight ? radius / 2 : -radius / 2 - thatWidth}\n        y={-height / 70}\n        fill=\"white\"\n        width={thatWidth}\n        height={height / 20}\n        className={cx(\"bureau-label\", {\n          'is-reversed': !labelOnRight\n        })}\n      >\n        <span xmlns=\"http://www.w3.org/1999/xhtml\">\n          {datum.name}\n        </span>\n      </foreignObject>\n    </animated.g>\n  )\n}\n\nconst renderBureaux = ({ data, projection, width, height, atlasMode }) => {\n  const radius = width * height * 0.00006;\n\n  return (\n    <g className={cx(\"IntroBureaux\", {'is-atlas-mode': atlasMode})}>\n      \n      {\n        data\n          .filter(d => !isNaN(+d.latitude) && colorPalettes.customs_office[d.name])\n          .map((datum, index) => (\n            <BureauBackground\n              key={index}\n              {\n              ...{\n                projection,\n                atlasMode,\n                height,\n                datum,\n                width,\n                index,\n                radius\n              }\n              }\n            />\n          ))\n      }\n      {\n        data\n          .filter(d => !isNaN(+d.latitude) && colorPalettes.customs_office[d.name])\n          .map((datum, index) => (\n            <BureauLabel\n              key={index}\n              {\n              ...{\n                projection,\n                height,\n                datum,\n                width,\n                index,\n                radius\n              }\n              }\n            />\n          ))\n      }\n    </g>\n  )\n}\n\nconst IntroBureaux = ({\n  datasets,\n  atlasMode,\n  dimensions\n}) => {\n  return (\n    <GeographicMapChart\n      title={'Carte des bureaux des fermes de la région PASA'}\n      layers={[\n        {\n          type: 'choropleth',\n          data: datasets['map_france_1789.geojson'],\n          reverseColors: atlasMode ? false : true,\n          // color:{\n          //   field: 'shortname',\n          //   palette: colorPalettes.provinces\n          // }\n        },\n        // {\n        //   type: 'points',\n        //   data: datasets['part_3_step3_viz_customs_offices_data.csv'],\n        //   color: {\n        //     field: 'name',\n        //     palette: colorPalettes.customs_office,\n        //     labelsColor: atlasMode ? undefined : 'white'\n        //   },\n        //   size: {\n        //     custom : 3 // 3 fois plus gros que la taille par défaut\n        //   },\n        //   label: {\n        //     field: 'name',\n        //     position: 'left'\n        //   }\n        // }\n        {\n          type: 'custom',\n          data: datasets['part_3_step3_viz_customs_offices_data.csv'],\n          renderObjects: props => renderBureaux({...props, atlasMode})\n        }\n      ]}\n      projectionTemplate='Poitou'\n      width={fixSvgDimension(dimensions.width)}\n      height={atlasMode ? window.innerHeight * .9 : fixSvgDimension(dimensions.height)}\n    />\n  )\n}\n\nexport default IntroBureaux;","import IntroBureaux from './IntroBureaux';\n\nexport default IntroBureaux;","import GeographicMapChart from \"../../components/GeographicMapChart/GeographicMapChart\"\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\nconst HomeportFlows = ({\n  datasets,\n  atlasMode,\n  dimensions,\n}) => {\n  // const [currentProjectionTemplate, setCurrentProjectionTemplate] = useState('World');\n  const totalHeight = atlasMode ? window.innerHeight * .9 : fixSvgDimension(dimensions.height);\n  return (\n    <div className=\"HomeportFlows\">\n      <div className=\"column\">\n        <GeographicMapChart\n          title={'Voyages des bateaux rattachés au port de La Rochelle en 1787'}\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_france_1789.geojson'],// currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n            },\n\n            {\n              type: 'flows',\n              data: datasets['voyages-bateaux-homeport-larochelle-1787.csv'],\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest'],\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              }\n            },\n            {\n              type: 'points',\n              data: datasets['voyages-bateaux-homeport-larochelle-1787.csv']\n                .map(d => ({ ...d, longitude: d.longitude_dep, latitude: d.latitude_dep })),\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'tonnage cumulé'\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ',\n                // palette: colorPalettes.provinces,\n                // labelsColor: props.atlasMode ? undefined : 'white'\n              },\n              // tooltip: d => `${d.rawSize} départs de navires ont été observés par le port de ${d.label} en 1789`,\n              label: {\n                field: 'port_dep',\n                // position: 'left'\n              }\n            },\n          ]}\n          projectionTemplate={'coast from Nantes to Bordeaux'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          height={totalHeight}\n        />\n      </div>\n      <div className=\"column\">\n        <GeographicMapChart\n          title={'Voyages des bateaux rattachés au port de La Rochelle en 1787'}\n          layers={[\n            {\n              type: 'choropleth',\n              // data: datasets['world_test.geojson'],\n              data: datasets['map_france_1789.geojson'], // currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n              // color:{\n              //   field: 'shortname',\n              //   palette: colorPalettes.provinces\n              // }\n            },\n            {\n              type: 'flows',\n              data: datasets['voyages-bateaux-homeport-larochelle-1787.csv'],\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest']\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              }\n            },\n          ]}\n          projectionTemplate={'France'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          height={totalHeight / 2}\n        />\n        <GeographicMapChart\n          title={'Voyages des bateaux rattachés au port de La Rochelle en 1787'}\n          layers={[\n            {\n              type: 'choropleth',\n              // data: datasets['world_test.geojson'],\n              data: datasets['map_world_1789.geojson'],// currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n              // color:{\n              //   field: 'shortname',\n              //   palette: colorPalettes.provinces\n              // }\n            },\n            {\n              type: 'flows',\n              data: datasets['voyages-bateaux-homeport-larochelle-1787.csv'],\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest']\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              }\n            },\n          ]}\n          projectionTemplate={'World'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          height={totalHeight / 2}\n          withLegend={'bottom left'}\n        />\n      </div>\n      {/* <div\n        style={{\n          position: 'absolute',\n          right: '1rem',\n          bottom: '1rem'\n        }}\n      >\n        <button onClick={() => setCurrentProjectionTemplate(currentProjectionTemplate === 'World' ? 'France' : 'World')}>\n          Monde/France\n        </button>\n      </div> */}\n    </div>\n  )\n}\n\nexport default HomeportFlows","\nimport { useRef, useState, useEffect, useMemo } from 'react';\nimport {nest} from 'd3-collection';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\nimport {\n  treemap, \n  hierarchy, \n  // treemapResquarify,\n  treemapBinary,\n} from 'd3-hierarchy';\n\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst formatNestResults = (input) => {\n  if (Array.isArray(input)) {\n    return {\n      name: 'root',\n      children: input.map(formatNestResults)\n    }\n  } else if (input.key && input.values) {\n    return {\n      name: input.key,\n      children: input.values.map(formatNestResults)\n    }\n  } else return input;\n}\n\n/**\n * LineChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data\n * @param {string} title \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {array} fieldsHierarchy\n * @param {object} leaf\n * @param {string} leaf.labelField\n * @param {number} leaf.countField\n\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * \n * @param {function} tooltip\n * \n * @returns {react}\n */\nconst TreemapChart = ({\n  data,\n  fieldsHierarchy = [],\n  title,\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  leaf: {\n    labelField,\n    countField,\n  },\n  color,\n  tooltip,\n  margins: inputMargins = {},\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth - legendWidth - 10);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const root = useMemo(() => {\n    const res = nest()\n    fieldsHierarchy.forEach((field) => {\n      res.key((d) => d[field])\n    })\n    \n    const visData = formatNestResults(res.entries(data))\n    const result = hierarchy(visData).sum(d => +d[countField]);\n    treemap()\n    .size([width, height])\n    .tile(treemapBinary)\n    .round(true)\n    (result);\n    return result;\n  }, [data, fieldsHierarchy, width, height, countField])\n\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n    // return () => {\n    //   setHeadersHeight(0);\n    //   setLegendWidth(0);\n    // };\n  }, [width, height, color, data])\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n  \n\n  let colorPalette;\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorModalities = uniq(data.map(d => d[color.field]));\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"TreemapChart GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" >{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            {\n              root.leaves().map((datum, datumIndex) => {\n                const {x0, y0, x1, y1} = datum;\n                const rectWidth = x1 - x0;\n                const rectHeight = y1 - y0;\n                const labelText = `${datum.data[labelField]} (${datum.data[countField]})`;\n                const fontSize = rectWidth / labelText.length * 1.5\n                // const labelWidth = window.innerWidth * 0.003 * labelText.length;\n                return (\n                  <g \n                    key={`${x0}-${y0}`} \n                    transform={`translate(${x0},${y0})`}\n                    data-for=\"treemap-tooltip\"\n                    data-tip={tooltip ? tooltip(datum.data) : undefined}\n                  >\n                    <rect\n                      stroke=\"white\"\n                      x={0}\n                      y={0}\n                      width={rectWidth}\n                      height={rectHeight}\n                      fill={colorPalette[datum.data[color.field]]}\n                    />\n                    {\n                      rectHeight > fontSize ?\n                        <text\n                          x={rectWidth/2}\n                          y={rectHeight / 2 + 5}\n                          style={{\n                            fontSize\n                          }}\n                          textAnchor=\"middle\"\n                        >\n                          {labelText}\n                        </text>\n                      : null\n                    }\n                  </g>\n                )\n              })\n            }\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight + margins.top\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color]) => (\n                        <li\n                          key={modality}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"treemap-tooltip\" />\n    </>\n  )\n}\nexport default TreemapChart;","// @TODO : colorLegends et titres à mettre en place pour cartes notamment\n// @TODO : faire une passe sur visualizationList.json que j'ai rempli approximativement pour les vizs 'intro-provinces', 'intro-ports', et 'intro-bureaux'\n\nimport { useContext, useMemo } from 'react';\n\nimport Test from './Test';\nimport PrincipalVisualizationPart1 from './PrincipalVisualizationPart1';\nimport PrincipalVisualizationPart2 from './PrincipalVisualizationPart2';\nimport PrincipalVisualizationPart3 from './PrincipalVisualizationPart3';\nimport BarChart from '../components/BarChart';\nimport GeographicMapChart from '../components/GeographicMapChart/GeographicMapChart';\nimport colorPalettes from '../colorPalettes'\n\n\nimport { DatasetsContext } from '../helpers/contexts';\n\nimport visualizationsList from '../visualizationsList';\nimport IntroBureaux from './IntroBureaux';\nimport HomeportFlows from './HomeportFlows/HomeportFlows';\nimport TreemapChart from '../components/TreemapChart/TreemapChart';\n\nconst VisualizationContainer = ({ id, dimensions: inputDimensions, ...props }) => {\n  const dimensions = {\n    ...inputDimensions,\n    // height: inputDimensions.height - inputDimensions.top / 2\n  }\n  const datasets = useContext(DatasetsContext);\n\n  const relevantDatasets = useMemo(() => {\n    const viz = visualizationsList.find(v => v.id === id);\n    if (viz) {\n      const datasetsIds = viz.datasets && viz.datasets.split(',').map(d => d.trim());\n      if (datasetsIds.length && datasets) {\n        return datasetsIds.reduce((cur, id) => ({\n          ...cur,\n          [id]: datasets[id]\n        }), {})\n      }\n    }\n  }, [id, datasets]);\n\n  const hasData = Object.keys(relevantDatasets || {}).length && !Object.entries(relevantDatasets).find(([id, payload]) => !payload);\n  if (!hasData) {\n    // console.log('no data for ', id, 'looked for', visualizationsList.find(v => v.id === id))\n    return null;\n  }\n  switch (id) {\n    case 'viz-principale-partie-1':\n      return <PrincipalVisualizationPart1 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'viz-principale-partie-2':\n      return <PrincipalVisualizationPart2 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'viz-principale-partie-3':\n      return <PrincipalVisualizationPart3 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'partie-1-produits-importants-pour-la-rochelle':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n              .sort((a, b) => {\n                if (+a.order > +b.order) {\n                  return 1;\n                }\n                return -1;\n              })\n              .slice(0, 20)\n          }\n          title=\"Produits dont les valeurs d'exports sont les plus importantes en 1789 : comparaison de La Rochelle à la moyenne française\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight / 2 : dimensions.height}\n          orientation={'vertical'}\n          layout={'groups'}\n          y={{\n            field: 'product',\n            title: 'produit',\n          }}\n          x={{\n            field: 'value_rel_per_direction',\n            title: 'Valeur en pourcentage',\n            tickSpan: .1,\n            tickFormat: (d, i) => parseInt(d * 100) + '%'\n          }}\n          color={{\n            field: 'entity',\n            title: 'Part des exports pour :'\n          }}\n          margins={{\n            left: 140\n          }}\n          tooltip={d => `Le produit ${d.product} représente ${(d.value_rel_per_direction * 100).toFixed(2)}% des exports pour ${d.entity.includes('France') ? 'la France' : 'la direction des fermes de La Rochelle'}`}\n        />\n      )\n    case 'partie-1-evolution-de-la-part-des-echanges-de-la-rochelle-au-xviiie':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Évolution globale de la part des échanges de La Rochelle par rapport à l'ensemble de la France\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight / 2 : dimensions.height * .5}\n          orientation={'horizontal'}\n          layout={'stack'}\n          y={{\n            field: 'portion',\n            title: 'part du commerce fr.',\n            tickFormat: d => parseInt(d * 100) + '%'\n          }}\n          x={{\n            field: 'year',\n            title: 'année',\n            fillGaps: true,\n            tickSpan: 5,\n            // tickFormat: d => d%10 === 0 ? d : undefined\n          }}\n          color={{\n            field: 'type',\n            title: 'Type'\n          }}\n          margins={{\n            left: 140,\n            right: 0,\n          }}\n          tooltip={d => `En ${d.year}, la direction des fermes de la Rochelle a ${d.type === 'import' ? 'importé' : 'exporté'} ${(+d.portion * 100).toFixed(2)}% des ${d.type === 'import' ? 'imports' : 'exports'} français totaux`}\n        />\n      )\n    case 'sorties-de-sel':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Ports de départ des navires transportant du sel en 1789, agrégés par tonnage cumulé\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height}\n          orientation={'vertical'}\n          y={{\n            field: 'port',\n            title: 'Port',\n            sort: {\n              field: 'tonnage',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'tonnage',\n            title: 'Tonnage cumulé',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${d} tonneaux`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.tonnage} tonneaux (et ${d.nb_pointcalls} navires) sont partis de la région PASA avec du sel comme cargaison.`}\n        />\n      )\n    case 'sorties-de-marennes':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Destination des navires partant de Marennnes en 1789, agrégées par pays et par tonnage cumulé\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height}\n          orientation={'vertical'}\n          y={{\n            field: 'country',\n            title: 'Pays',\n            sort: {\n              field: 'tonnage',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'tonnage',\n            title: 'Tonnage cumulé',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${d} tonneaux`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.tonnage} tonneaux (et ${d.nb_pointcalls} navires) sont partis du port de Marennes en direction d'un port de ${d.country}.`}\n        />\n      )\n    case 'partie-1-pays-port-d-attache':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Pays d'attache des navires étrangers partant de la région en 1789\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height}\n          orientation={'vertical'}\n          y={{\n            field: 'country',\n            title: 'Pays du port d\\'attache',\n            sort: {\n              field: 'nb_outs',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'nb_outs',\n            title: 'Nombre de départs',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${d} départs`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.nb_outs} bateaux sont partis de la région de La Rochelle (amirautés de La Rochelle, Sables d'Olonnes ou Marennes)`}\n        />\n      )\n    // case 'partie-1-produits-importants-pour-la-rochelle':\n    //   return (\n    //     <BarChart\n    //       data={\n    //         relevantDatasets[Object.keys(relevantDatasets)[0]]\n    //           .sort((a, b) => {\n    //             if (+a.order > +b.order) {\n    //               return 1;\n    //             }\n    //             return -1;\n    //           })\n    //           .slice(0, 20)\n    //       }\n    //       title=\"Produits dont les valeurs d'exports sont les plus importantes en 1789 : comparaison de La Rochelle à la moyenne française\"\n    //       width={dimensions.width}\n    //       height={props.atlasMode ? window.innerHeight / 2 : dimensions.height}\n    //       orientation={'vertical'}\n    //       layout={'groups'}\n    //       y={{\n    //         field: 'product',\n    //         title: 'produit',\n    //       }}\n    //       x={{\n    //         field: 'value_rel_per_direction',\n    //         title: 'Valeur en pourcentage',\n    //         tickSpan: .1,\n    //         tickFormat: (d, i) => parseInt(d * 100) + '%'\n    //       }}\n    //       color={{\n    //         field: 'entity',\n    //         title: 'Part des exports pour :'\n    //       }}\n    //       margins={{\n    //         left: 140\n    //       }}\n    //       tooltip={d => `Le produit ${d.product} représente ${(d.value_rel_per_direction * 100).toFixed(2)}% des exports pour ${d.entity.includes('France') ? 'la France' : 'la direction des fermes de La Rochelle'}`}\n    //     />\n    //   )\n    case 'partie-3-comparaison-exports-coloniaux':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Comparaison des exports de produits coloniaux, locaux et autres par bureaux des fermes (1789)\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height * .5}\n          orientation={'vertical'}\n          layout={'grouped'}\n          y={{\n            field: 'customs_office',\n            title: 'Bureau des fermes',\n            // tickFormat: d => parseInt(d * 100) + '%'\n          }}\n          x={{\n            field: 'value',\n            title: 'valeur en livres tournoi',\n            tickSpan: 1000000,\n            domain: [0, 6000000]\n          }}\n          color={{\n            field: 'type',\n            title: 'Type de produit'\n          }}\n          margins={{\n            left: 140,\n            right: 50,\n          }}\n          tooltip={d => `En 1789, le bureau des fermes de ${d.customs_office} a exporté à l'étrange ${d.value} livres tournois de produits de type ${d.type}`}\n        />\n      )\n    case 'intro-provinces':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Carte des provinces étudiées : Poitou, Aunis, Saintonge, Angoumois (PASA)'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                color: {\n                  field: 'shortname',\n                  palette: colorPalettes.provinces\n                },\n                tooltip: (d) => {\n                  return d.properties.shortname\n                }\n              }\n            ]}\n            projectionTemplate='France'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n          />\n        </>\n      )\n    case 'intro-ports':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Carte des ports de la région PASA'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                // color:{\n                //   field: 'shortname',\n                //   palette: colorPalettes.provinces\n                // }\n              },\n              {\n                type: 'points',\n                data: datasets['ports_locations_data_intro.csv'],\n                color: {\n                  field: 'province',\n                  title: 'Province du port',\n                  palette: colorPalettes.provinces,\n                  labelsColor: props.atlasMode ? undefined : 'white'\n                },\n                size: {\n                  field: 'nb_pointcalls',\n                  title: 'nombre de congés enregistrés en 1789',\n                  // custom: '20'\n                },\n                tooltip: d => `${d.rawSize} départs de navires ont été observés par le port de ${d.label} en 1789`,\n                label: {\n                  field: 'port',\n                  position: 'left'\n                },\n                stackLabels: true\n              }]}\n            projectionTemplate='Poitou'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n            withLegend={'top right'}\n\n          />\n        </>\n      )\n    case 'intro-bureaux':\n      // console.log(\"heyyyyyy bureaux map\");\n      return (\n        <IntroBureaux\n          {\n            ...{\n              datasets,\n              atlasMode: props.atlasMode,\n              dimensions\n            }\n          }\n        />\n      )\n    case 'partie-2-part-navigation-francaise':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Part de la navigation française dans la région'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                // color:{\n                //   field: 'shortname',\n                //   palette: colorPalettes.provinces\n                // }\n              },\n              {\n                type: 'points',\n                data: datasets['part_navigation_fr.csv'],\n                color: {\n                  field: 'tonnage_part_of_french',\n                  title: 'Part de la navigation française (par tonnage cumulé)',\n                  palette: colorPalettes.tonnageClasses,\n                  labelsColor: props.atlasMode ? undefined : 'white'\n                },\n                size: {\n                  field: 'tonnage',\n                  title: 'Tonnage sorti des ports (en miliers)',\n                  displayMetric: true,\n                  // custom: '20'\n                },\n                // tooltip: d => `${d.rawSize} mouvements de bateaux ont été enregistrés par le port de ${d.label} en 1789`,\n                label: {\n                  field: 'port',\n                  position: 'left'\n                },\n                stackLabels: true\n              }]}\n            projectionTemplate='Poitou'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n            withLegend={'top right'}\n\n          />\n        </>\n      );\n    case 'partie-2-carte-direction-bateaux-de-la-rochelle':\n      // voyages-bateaux-homeport-larochelle-1787.csv\n      return (\n        <HomeportFlows\n        {\n          ...{\n            datasets,\n            atlasMode: props.atlasMode,\n            dimensions,\n          }\n        }\n        />\n      );\n    case 'partie-1-ports-dattache':\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_ports_dattache_des_navires_partant_de_la_region.csv'],\n            title: 'Ports d\\'attache des navires partant de la région PASA en 1789 (dimensionnés par tonnage cumulé)',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA provenaient de navires rattachés au port de ${d.homeport} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'ports'],\n            color: {\n              field: 'category_2',\n              palette: colorPalettes.portsTreemaps\n            },\n            leaf: {\n              labelField: 'homeport',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      )\n    case 'partie-1-ports-destinations':\n      const thatPalette = {\n        ...colorPalettes.portsTreemaps\n      }\n      delete thatPalette['France (région PASA)']\n      delete thatPalette['France (hors région PASA)']\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_destinations_des_navires_partant_de_la_region.csv'],\n            title: 'Destinations des navires partant depuis la région PASA vers l\\'étranger en 1789',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA ont eu pour destination le port de ${d.port} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'ports'],\n            color: {\n              field: 'category_2',\n              palette: thatPalette\n            },\n            leaf: {\n              labelField: 'port',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      );\n    case 'partie-1-ports-dattache-vers-etranger':\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_destinations_des_navires_partant_de_la_region_vers_letranger.csv'],\n            title: 'Ports d’attache des navires en provenance de la région PASA et en direction de l’étranger en 1789 (dimensionnées par tonnages cumulés)',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA étaient rattachés au port de ${d.homeport} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'homeport'],\n            color: {\n              field: 'category_2',\n              palette: colorPalettes.portsTreemaps\n            },\n            leaf: {\n              labelField: 'homeport',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      );\n    case 'test':\n    default:\n      return <Test {...props} datasets={relevantDatasets || {}} />;\n  }\n}\n\nexport default VisualizationContainer;","import {useState} from 'react';\nimport omit from 'lodash/omit';\nimport cx from 'classnames';\nimport Measure from 'react-measure'\n\nimport VisualizationContainer from '../../visualizations/index.js';\n\nconst VisualizationController = ({\n  lang,\n  activeVisualization,\n  atlasMode\n}) => {\n  const [dimensions, setDimensions] = useState({});\n  const visProps = activeVisualization && omit(activeVisualization, ['id', 'ref', 'visualizationId']);\n  return (\n    <Measure \n      bounds\n      onResize={contentRect => {\n        setDimensions(contentRect.bounds)\n      }}\n    >\n      {({ measureRef }) => (\n          <div ref={measureRef} className={cx(\"VisualizationController\", {'is-empty': !activeVisualization})}>\n          {/* <h2>Visualization controller</h2> */}\n          {\n            activeVisualization ?\n            <>\n              <VisualizationContainer lang={lang} atlasMode={atlasMode} id={atlasMode ? activeVisualization.id : activeVisualization.visualizationId} {...visProps} dimensions={dimensions} />\n            </>\n            : null // <div>Pas de visualisation à afficher</div>\n          }\n  \n        </div>\n      )}\n    </Measure>\n  );\n}\n\nexport default VisualizationController;","import VisualizationController from './VisualizationController';\n\nexport default VisualizationController;","import { useState } from 'react';\nimport { homepage } from '../../../package.json';\nimport copy from 'copy-to-clipboard';\nimport VisualizationController from '../VisualizationController/VisualizationController.js';\nimport Md from 'react-markdown';\n\n\nconst VisualizationFocus = ({ visualization, lang, onClose }) => {\n\n  const [copyClicked, setCopyClicked] = useState(false);\n  let howDone, howRead;\n  if (visualization) {\n    howDone = visualization[`comment_cest_fait_${lang}`];\n    howRead = visualization[`comment_lire_${lang}`];\n  }\n\n  const messages = {\n    howDone: {\n      fr: 'Comment les données et la visualisations ont-elles été produites ?',\n      en: 'How were the data and visualization produced ?',\n    },\n    howRead: {\n      fr: 'Comment lire la visualisation ?',\n      en: 'How to read the visualization?'\n    },\n    copyLink: {\n      fr: 'copier le lien de cette visualisation',\n      en: 'copy this visualization link'\n    },\n    linkCopied: {\n      fr: 'lien copié dans le presse-papier !',\n      en: 'link copied in the clipboard !'\n    }\n  }\n\n  const handleCopyClick = (e) => {\n    e.stopPropagation();\n    const url = `${homepage}/${lang}/atlas/${visualization.id}`;\n    setCopyClicked(true);\n    copy(url);\n    setTimeout(() => setCopyClicked(false), 5000);\n  }\n  return (\n    <div className={`VisualizationFocus ${visualization ? 'is-visible' : 'is-hidden'}`}>\n      <div onClick={onClose} className=\"lightbox-background\" />\n      {\n        visualization ?\n          <div className=\"lightbox-contents\">\n\n            <div className=\"visualization-details\">\n              <div className=\"details-header\">\n                <h2>{visualization[`titre_${lang}`]}</h2>\n                <button className=\"close-btn\" onClick={onClose}>\n                  ✕\n                </button>\n              </div>\n              <div className=\"copy-link-container\">\n                <button onClick={handleCopyClick}>{copyClicked ? messages.linkCopied[lang] : messages.copyLink[lang]}</button>\n              </div>\n              <div className=\"details-contents\">\n                {\n                  howDone && howDone.length ?\n                    <section className=\"details-contents-section\">\n                      <h3>{messages.howDone[lang]}</h3>\n                      <Md>\n                        {howDone}\n                      </Md>\n                    </section>\n                    : null\n                }\n                {\n                  howRead && howRead.length ?\n                    <section className=\"details-contents-section\">\n                      <h3>{messages.howRead[lang]}</h3>\n                      <Md>\n                        {howRead}\n                      </Md>\n                    </section>\n                    : null\n                }\n              </div>\n            </div>\n            <div className=\"visualization-wrapper\">\n              <VisualizationController lang={lang} atlasMode activeVisualization={visualization} />\n            </div>\n          </div>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default VisualizationFocus;","import VisualizationFocus from './VisualizationFocus';\n\nexport default VisualizationFocus;","import { useState, useReducer, useEffect, useRef } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { useScrollYPosition } from 'react-use-scroll-position';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport VisualizationController from '../../components/VisualizationController';\nimport VisualizationFocus from '../../components/VisualizationFocus';\nimport { VisualizationControlContext } from '../../helpers/contexts';\n\nimport { buildPageTitle } from '../../helpers/misc';\n\nimport visualizations from '../../visualizationsList';\n\nconst visualizationsMap = visualizations.reduce((res, visualization) => ({\n  ...res,\n  [visualization.id]: visualization\n}), {})\n\nconst CENTER_FRACTION = .6;\n\nconst ScrollyPage = ({\n  // Content,\n  ContentSync,\n  title,\n  lang,\n}) => {\n  const sectionRef = useRef(null);\n  // mobile mode: focus on text or on viz\n  const [focusOnViz, setFocusOnViz] = useState(false);\n  // whether to open the active viz in \"atlas mode\"\n  const [visualizationIsFullScreen, setVisualizationIsFullScreen] = useState(false);\n  const [activeVisualization, setActiveVisualization] = useState(undefined);\n  const [visualizations, setVisualizations] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  )\n  const scrollY = useScrollYPosition();\n\n  useEffect(() => {\n    if (!activeVisualization && focusOnViz) {\n      setFocusOnViz(false);\n    }\n  }, [activeVisualization])\n\n  const updateCurrentVisualization = () => {\n    if (visualizationIsFullScreen) {\n      return;\n    } \n    // const bodyPos = document.body.getBoundingClientRect();\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const y = scrollY + DISPLACE_Y;\n    const visualizationEntries = Object.entries(visualizations);\n    let found;\n    const sectionDims = sectionRef.current && sectionRef.current.getBoundingClientRect();\n    const sectionEnd = sectionDims.y + window.scrollY + sectionDims.height;\n    if (y > sectionEnd) {\n      if (activeVisualization) {\n        setActiveVisualization(undefined);\n      }\n      return;\n    }\n    // on parcourt la liste à l'envers pour récupérer\n    // la visualisation la plus haute de la page qui est\n    // au-dessus du milieu de l'écran\n    for (let index = visualizationEntries.length - 1; index >= 0; index--) {\n      const [_id, visualization] = visualizationEntries[index];/* eslint no-unused-vars : 0 */\n      const { ref } = visualization;\n      if (ref.current) {\n        const { y: initialVisY } = ref.current.getBoundingClientRect();\n        let visY = initialVisY + window.scrollY;\n        // @todo refactor this, it is dirty\n        if (ref.current.parentNode.className === 'centered-part-contents') {\n          visY += ref.current.parentNode.parentNode.getBoundingClientRect().y;\n        }\n        if (!visualization.visualizationId && scrollY + window.innerHeight * .8 > visY) {\n          found = true;\n          setActiveVisualization(undefined);\n          break;\n        } else if (y > visY) {\n          found = true;\n          if (visualization.visualizationId) {\n            setActiveVisualization(visualization);\n          } else {\n            setActiveVisualization(undefined);\n          }\n          break;\n        }\n      }\n    }\n    if (scrollY === 0 && visualizationEntries.length) {\n      setActiveVisualization(visualizationEntries[0][1])\n    }\n    else if (!found && activeVisualization) {\n      setActiveVisualization(undefined);\n    }\n  }\n\n  /**\n   * Reset scroll when changing page\n   */\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [ContentSync])\n  /**\n   * Scrollytelling management\n   */\n  useEffect(updateCurrentVisualization, [scrollY, visualizations]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  const onRegisterVisualization = (params) => {\n    const finalParams = {\n      ...params,\n      // data\n    }\n    setVisualizations({ ...visualizations, [params.id]: finalParams });\n  }\n  const onUnregisterVisualization = id => {\n    const newVis = Object.entries(visualizations).reduce((res, [thatId, payload]) => {\n      if (thatId === id) {\n        return res;\n      }\n      return {\n        ...res,\n        [thatId]: payload\n      }\n    }, {})\n    setVisualizations(newVis)\n  }\n  const onBlockClick = (id, ref) => {\n    const { y: initialVisY } = ref.current.getBoundingClientRect();\n    const visY = initialVisY + window.scrollY;\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const scrollTo = visY - DISPLACE_Y * .9;\n    window.scrollTo({\n      top: scrollTo,\n      behavior: 'smooth'\n    });\n  }\n  return (\n    <VisualizationControlContext.Provider\n      value={{\n        activeVisualization,\n        onBlockClick,\n        onRegisterVisualization,\n        onUnregisterVisualization,\n      }}\n    >\n      <Helmet>\n        <title>{buildPageTitle(title, lang)}</title>\n      </Helmet>\n      <div className=\"ScrollyPage\">\n        <section ref={sectionRef} className={cx({ 'is-focused': !focusOnViz })}>\n          <ContentSync />\n        </section>\n        <aside className={cx({ 'is-focused': focusOnViz })}>\n          <VisualizationController activeVisualization={activeVisualization} />\n          {\n            activeVisualization ?\n              <div className=\"fullscreen-viz-toggle-container\">\n                <button\n                  data-for=\"contents-tooltip\"\n                  data-tip=\"plus d'informations sur cette visualisation\"\n                  onClick={() => setVisualizationIsFullScreen(true)}\n                >\n                  <span>+</span>\n                </button>\n              </div>\n              : null\n          }\n        </aside>\n        <VisualizationFocus\n          visualization={visualizationIsFullScreen && activeVisualization ? visualizationsMap[activeVisualization.visualizationId] : undefined}\n          lang={lang}\n          onClose={() => {\n            setVisualizationIsFullScreen(false);\n          }}\n        />\n        <div className={cx(\"vis-focus-container\", {\n          'is-active': focusOnViz,\n          'is-visible': activeVisualization\n        })}>\n          <button data-for=\"contents-tooltip\" data-effect=\"solid\" data-tip={lang === 'fr' ? 'voir la visualisation associée' : 'see associated visualization'} onClick={() => setFocusOnViz(!focusOnViz)}>\n            <span>{'˃'}</span>\n          </button>\n        </div>\n        <ReactTooltip id=\"contents-tooltip\" />\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default ScrollyPage;","import ScrollyPage from './ScrollyPage';\n\nexport default ScrollyPage;","/* eslint import/no-webpack-loader-syntax : 0 */\nimport ScrollyPage from './pages/ScrollyPage';\n\n// import TestScrollyFr from '!babel-loader!mdx-loader!./contents/fr/test-scrolly.mdx';\n// import testScrollyEn from '!babel-loader!mdx-loader!./contents/en/test-scrolly.mdx';\n\nimport Part1Fr from '!babel-loader!mdx-loader!./contents/fr/partie-1.mdx';\nimport Part1En from '!babel-loader!mdx-loader!./contents/en/part-1.mdx';\n\n// import Part2IntroFr from '!babel-loader!mdx-loader!./contents/fr/partie-2-intro.mdx';\n// import Part2IntroEn from '!babel-loader!mdx-loader!./contents/en/part-2-intro.mdx';\n\nimport Part2IntroFr from '!babel-loader!mdx-loader!./contents/fr/partie-2.mdx';\nimport Part2IntroEn from '!babel-loader!mdx-loader!./contents/en/part-2-intro.mdx';\n\n// import Part21Fr from '!babel-loader!mdx-loader!./contents/fr/partie-2-1.mdx';\n// import Part21En from '!babel-loader!mdx-loader!./contents/en/part-2-1.mdx';\n\n// import Part22Fr from '!babel-loader!mdx-loader!./contents/fr/partie-2-2.mdx';\n// import Part22En from '!babel-loader!mdx-loader!./contents/en/part-2-2.mdx';\n\n// import Part23Fr from '!babel-loader!mdx-loader!./contents/fr/partie-2-3.mdx';\n// import Part23En from '!babel-loader!mdx-loader!./contents/en/part-2-3.mdx';\n\nimport Part3Fr from '!babel-loader!mdx-loader!./contents/fr/partie-3.mdx';\nimport Part3En from '!babel-loader!mdx-loader!./contents/en/part-3.mdx';\n\nimport AboutFr from '!babel-loader!mdx-loader!./contents/fr/a-propos.mdx';\nimport AboutEn from '!babel-loader!mdx-loader!./contents/en/about.mdx';\n\nimport ReferencesFr from '!babel-loader!mdx-loader!./contents/fr/references.mdx';\nimport ReferencesEn from '!babel-loader!mdx-loader!./contents/en/references.mdx';\n\nimport TestsFr from '!babel-loader!mdx-loader!./contents/fr/tests.mdx';\nimport TestsEn from '!babel-loader!mdx-loader!./contents/en/tests.mdx';\n\nconst summary = [\n  {\n    routes: {\n      fr: 'partie-1',\n      en: 'part-1'\n    },\n    titles: {\n      fr: 'Le déclin de la région de La Rochelle suite à la perte du Canada',\n      en: 'The decline of La Rochelle region after Canada\\'s loss'\n    },\n    shortTitles: {\n      fr: 'le déclin de la région de La Rochelle',\n      en: 'the decline of La Rochelle region'\n    },\n    contents: {\n      fr: 'fr/partie-1.mdx',\n      en: 'en/part-1.mdx'\n    },\n    contentsProcessed: {\n      fr: Part1Fr,\n      en: Part1En,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'partie-2',\n      en: 'part-2'\n    },\n    titles: {\n      fr: 'Une forte spécialisation portuaire: le cas de la traite négrière, du commerce du sel et de l\\'eau-de-vie',\n      en: 'A strong portual specialization'\n    },\n    shortTitles: {\n      fr: 'une forte spécialisation portuaire',\n      en: 'a strong portual specialization'\n    },\n    contents: {\n      fr: 'fr/partie-2.mdx',\n      en: 'en/part-2.mdx'\n    },\n    contentsProcessed: {\n      fr: Part2IntroFr,\n      en: Part2IntroEn,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'partie-3',\n      en: 'part-3'\n    },\n    titles: {\n      fr: 'La Rochelle, port dominant mais pas structurant',\n      en: 'La Rochelle port, dominating but not structuring'\n    },\n    shortTitles: {\n      fr: 'un port dominant mais pas structurant',\n      en: 'a dominating but not structuring port'\n    },\n    contents: {\n      fr: 'fr/partie-3.mdx',\n      en: 'en/part-3.mdx'\n    },\n    contentsProcessed: {\n      fr: Part3Fr,\n      en: Part3En,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'references',\n      en: 'references'\n    },\n    titles: {\n      fr: 'Références',\n      en: 'References'\n    },\n    shortTitles: {\n      fr: 'références',\n      en: 'references'\n    },\n    contents: {\n      fr: 'fr/references.mdx',\n      en: 'en/references.mdx'\n    },\n    contentsProcessed: {\n      fr: ReferencesFr,\n      en: ReferencesEn,\n    },\n    routeGroup: 'secondary',\n  },\n  {\n    routes: {\n      fr: 'a-propos',\n      en: 'about'\n    },\n    titles: {\n      fr: 'À propos',\n      en: 'About'\n    },\n    shortTitles: {\n      fr: 'à propos',\n      en: 'about'\n    },\n    contents: {\n      fr: 'fr/a-propos.mdx',\n      en: 'en/about.mdx'\n    },\n    contentsProcessed: {\n      fr: AboutFr,\n      en: AboutEn,\n    },\n    routeGroup: 'secondary',\n  },\n  {\n    routes: {\n      fr: 'tests',\n      en: 'tests'\n    },\n    titles: {\n      fr: 'Tests',\n      en: 'Tests'\n    },\n    shortTitles: {\n      fr: 'tests',\n      en: 'tests'\n    },\n    contents: {\n      fr: 'fr/tests.mdx',\n      en: 'fr/tests.mdx'\n    },\n    contentsProcessed: {\n      fr: TestsFr,\n      en: TestsEn,\n    },\n    routeGroup: 'secondary',\n    hide: process.env.NODE_ENV !== 'development'\n  }\n]\n\n\nexport default summary;","import React, { useState } from 'react';\n\nimport Measure from 'react-measure'\n\nimport BoatsIllustration from '../../components/BoatsIllustration';\n\n\nconst BoatsContainer = () => {\n  const [dimensions, setDimensions] = useState({});\n  return (\n    <Measure \n      bounds\n      onResize={contentRect => {\n        setDimensions(contentRect.bounds)\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef} className=\"boats-container\">\n          <BoatsIllustration {...{...dimensions}} />\n        </div>\n      )}\n    </Measure>\n  )\n}\n\nexport default BoatsContainer;","import { NavLink as Link } from 'react-router-dom';\n\n\nfunction HomeSummary({ lang = 'fr', summary }) {\n  const messages = {\n    intro: {\n      fr: 'découvrir les 3 chapitres de l’étude de cas',\n      en: 'discover the 3 chapters of the case study'\n    },\n    atlas: {\n      fr: 'Accéder à l\\'atlas de toutes les visualisations',\n      en: 'Access all visualizations\\' atlas'\n    },\n    chapter: {\n      fr: 'Chapitre',\n      en: 'Chapter'\n    }\n  }\n  return (\n    <div className=\"HomeSummary\">\n      <div className=\"contents\">\n      <div className=\"intro\">\n        {messages.intro[lang]}\n      </div>\n      <ul className=\"chapters-links-container\">\n        {\n          summary\n            .filter(item => item.routeGroup === 'primary')\n            .filter(item => item.routes[lang])\n            .map((item, itemIndex) => {\n              const title = item.titles[lang];\n              const route = `/${lang}/page/${item.routes[lang]}`;\n              return (\n                <li key={itemIndex}>\n                  <Link to={route}>\n                    <h4 className=\"pretitle\">{messages.chapter[lang]} {itemIndex + 1}</h4>\n                    <h3 className=\"title\">{title}</h3>\n                  </Link>\n                </li>\n              )\n            })\n        }\n      </ul>\n      <div className=\"atlas-link-container\">\n        {/* @todo this is a react-snap trick that should be cleaned some day, removing it somehow breaks the pages building process */}\n        <Link to={navigator.userAgent === \"ReactSnap\" ? '/fr/atlas' : `/${lang}/atlas`}>\n          <h3 className=\"title\">{messages.atlas[lang]}</h3>\n        </Link>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomeSummary;","\nimport React, { useRef, useState, useReducer, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\n/* eslint-disable import/no-webpack-loader-syntax */\n\nimport metadataFr from '../../contents/fr/metadata'\nimport metadataEn from '../../contents/en/metadata'\n\nimport ContentsFr from '!babel-loader!mdx-loader!../../contents/fr/introduction.mdx'\nimport ContentsEn from '!babel-loader!mdx-loader!../../contents/en/introduction.mdx'\n\nimport { useScrollYPosition } from 'react-use-scroll-position';\n\nimport VisualizationController from '../../components/VisualizationController';\nimport { VisualizationControlContext } from '../../helpers/contexts';\nimport summary from '../../summary';\n\nimport BoatsContainer from './BoatsContainer';\nimport HomeSummary from './HomeSummary';\n\nconst CENTER_FRACTION = 0.5;\n// const CENTER_FRACTION = .6;\n\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nfunction Home({ match: {\n  params: { lang = 'fr' }\n} }) {\n  const introRef = useRef(null);\n  const [focusOnViz, setFocusOnViz] = useState(false);\n  const [inVis, setInVis] = useState(false);\n  const currentMetadata = metadata[lang] || metadataFr;\n  const title = currentMetadata.title;\n  const titleHTML = currentMetadata.titleHTML;\n  const subtitle = currentMetadata.subtitle\n  const [activeVisualization, setActiveVisualization] = useState(undefined);\n  const [visualizations, setVisualizations] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  )\n  const scrollY = useScrollYPosition();\n\n  const updateCurrentVisualization = () => {\n    // const bodyPos = document.body.getBoundingClientRect();\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const visualizationEntries = Object.entries(visualizations);\n    let found;\n    let newActiveVisualization;\n    // on parcourt la liste à l'envers pour récupérer\n    // la visualisation la plus haute de la page qui est\n    // au-dessus du milieu de l'écran\n    let firstOneY = Infinity;\n    for (let index = visualizationEntries.length - 1; index >= 0; index--) {\n      const y = index === 0 ? scrollY + window.innerHeight * .2 : scrollY + DISPLACE_Y;\n      const [_id, visualization] = visualizationEntries[index];/* eslint no-unused-vars : 0 */\n      const { ref } = visualization;\n      if (ref.current) {\n        const { y: initialVisY } = ref.current.getBoundingClientRect();\n        let visY = initialVisY + window.scrollY;\n        // @todo refactor this, it is dirty\n        if (ref.current.parentNode.className === 'centered-part-contents') {\n          visY += ref.current.parentNode.parentNode.getBoundingClientRect().y;\n        }\n        if (visY < firstOneY) {\n          firstOneY = visY;\n        }\n        if (index === 0 && y < visY) {\n          found = true;\n          newActiveVisualization = visualization;\n        } /*else if (!visualization.visualizationId && scrollY + window.innerHeight * .8 > visY) {\n          found = true;\n          newActiveVisualization = undefined;\n          break;\n        }*/ else if (y > visY) {\n          found = true;\n          if (visualization.visualizationId) {\n            newActiveVisualization = visualization;\n          } else {\n            newActiveVisualization = undefined;\n          }\n          break;\n        }\n      } else {\n        // console.error('cant find ref for', visualizationEntries[index])\n      }\n    }\n\n    if (scrollY > window.innerHeight * .9 && !inVis) {\n      setInVis(true);\n    } else if (scrollY < window.innerHeight * .9 && inVis) {\n      setInVis(false);\n    }\n\n    if (!found && scrollY < firstOneY && visualizationEntries.length) {\n      newActiveVisualization = visualizationEntries[0][1]\n    }\n    if (!found && activeVisualization) {\n      newActiveVisualization = undefined;\n    }\n    if (activeVisualization !== !newActiveVisualization) {\n      setActiveVisualization(newActiveVisualization)\n    } else if ((!activeVisualization && newActiveVisualization) || activeVisualization.id !== newActiveVisualization.id) {\n      setActiveVisualization(newActiveVisualization)\n    }\n  }\n\n  /**\n   * Scroll to top on mount\n   */\n   useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n  /**\n   * Scrollytelling management\n   */\n  useEffect(updateCurrentVisualization, [scrollY, visualizations]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  useEffect(() => {\n    if (!activeVisualization && focusOnViz) {\n      setFocusOnViz(false);\n    }\n  }, [activeVisualization])\n\n  const onRegisterVisualization = (params) => {\n    const finalParams = {\n      ...params,\n      // data\n    }\n    setVisualizations({ ...visualizations, [params.id]: finalParams });\n  }\n  const onUnregisterVisualization = id => {\n    const newVis = Object.entries(visualizations).reduce((res, [thatId, payload]) => {\n      if (thatId === id) {\n        return res;\n      }\n      return {\n        ...res,\n        [thatId]: payload\n      }\n    }, {})\n    setVisualizations(newVis)\n  }\n  const onBlockClick = (id, ref) => {\n    const { y: initialVisY } = ref.current.getBoundingClientRect();\n    const visY = initialVisY + window.scrollY;\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const scrollTo = visY - DISPLACE_Y * .9;\n    window.scrollTo({\n      top: scrollTo,\n      behavior: 'smooth'\n    });\n  }\n  const onClickOnStart = () => {\n    if (introRef && introRef.current) {\n      const intro = introRef.current;\n      const top = intro.offsetTop - (window.innerHeight / 15);\n      window.scrollTo({\n        top,\n        behavior: 'smooth'\n      })\n    }\n    \n  }\n  return (\n    <div className=\"Home\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div className=\"header\">\n        <div className=\"titles-container\">\n          <h1 dangerouslySetInnerHTML={{__html: titleHTML}}/>\n          <h2>{subtitle}</h2>\n          <button onClick={onClickOnStart} className=\"go-to-start\">\n          <span>⌄</span>\n          </button>\n        </div>\n        \n        <BoatsContainer />\n      </div>\n      <main ref={introRef} className=\"intro-container\">\n        <VisualizationControlContext.Provider\n          value={{\n            activeVisualization,\n            onBlockClick,\n            onRegisterVisualization,\n            onUnregisterVisualization,\n          }}\n        >\n          <div className=\"Contents\">\n            \n            <section className={cx({'is-focused': !focusOnViz})}>\n              {lang === 'fr' ? <ContentsFr /> : <ContentsEn />}\n            </section>\n            <aside className={cx({'is-focused': focusOnViz, 'is-fixed': inVis})}>\n              <VisualizationController activeVisualization={activeVisualization} />\n            </aside>\n            \n          </div>\n        </VisualizationControlContext.Provider>\n        <HomeSummary lang={lang} summary={summary} />\n        <div className={cx(\"vis-focus-container\", {\n          'is-active': focusOnViz,\n          'is-visible': activeVisualization\n          })}>\n          <button data-for=\"contents-tooltip\" data-effect=\"solid\" data-tip={lang === 'fr' ? 'voir la visualisation associée' : 'see associated visualization'} onClick={() => setFocusOnViz(!focusOnViz)}>\n            <span>{'˃'}</span>\n          </button>\n        </div>\n      </main>\n      <ReactTooltip id=\"contents-tooltip\" />\n    </div>\n  )\n}\n\nexport default Home;","import Home from './Home';\nexport default Home;\n\n// import Carte from './Ports de la région Poitou, Aunis, Saintonge en 1789.svg'\n// export Carte;","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\nimport cx from 'classnames';\n\n// charger le json de la liste des visualisations de l'atlas\nimport visualizations from '../../visualizationsList';\nimport VisualizationFocus from '../../components/VisualizationFocus/VisualizationFocus';\n\nimport {buildPageTitle} from '../../helpers/misc';\n\n\nconst visualizationsMap = visualizations.reduce((res, visualization) => ({\n  ...res,\n  [visualization.id]: visualization\n}), {})\n\nfunction Atlas({\n  match: {\n    params: {\n      visualizationId,\n      lang = 'fr'\n    }\n  }\n}) {\n  /**\n   * Scroll to top on mount\n   */\n   useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n  const history = useHistory();\n  const shownVisualization = visualizationId && visualizationsMap[visualizationId];\n  return (\n    <div className=\"Atlas secondary-page\">\n      <Helmet>\n        <title>{buildPageTitle('Atlas', lang)}</title>\n      </Helmet>\n      <div className=\"centered-contents\">\n        <h1>{lang === 'fr' ? 'Atlas des visualisations' : 'Visualizations atlas'}</h1>\n        <ul className=\"visualizations-list\">\n          {\n            visualizations.map((visualization, visualizationIndex) => {\n              const handleClick = () => {\n                history.push({\n                  pathname: `/${lang}/atlas/${visualization.id}`\n                })\n              }\n              return (\n                <li\n                  className={cx('visualization-item', { 'is-active': shownVisualization && shownVisualization.id === visualization.id })}\n                  onClick={handleClick}\n                  key={visualizationIndex}\n                >\n                  <figure className=\"thumbnail-container\">\n                      <img\n                        src={`${process.env.PUBLIC_URL}/thumbnails/${lang}/${visualization.id}.png`}\n                        alt={visualization[`titre_${lang}`]}\n                      />\n                  </figure>\n                  <h5 className=\"visualization-title\">\n                    {visualization[`titre_${lang}`]}\n                  </h5>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n        <VisualizationFocus \n          visualization={shownVisualization} \n          lang={lang}\n          onClose={() => {\n            history.push({\n              pathname: `/${lang}/atlas/`\n            })\n          }}\n        />\n    </div>\n  );\n}\n\nexport default Atlas;","import Atlas from './Atlas';\n\nexport default Atlas;","import StandaloneVisualization from './StandaloneVisualization';\n\nexport default StandaloneVisualization;","import VisualizationController from '../../components/VisualizationController/VisualizationController.js';\n\nimport visualizationsList from '../../visualizationsList.json';\nconst StandaloneVisualization = ({\n  id,\n  lang\n}) => {\n  const visualization = visualizationsList.find(({id: thatId}) => thatId === id)\n  return (\n    <div className=\"StandaloneVisualization\">\n      <VisualizationController lang={lang} atlasMode activeVisualization={visualization} />\n    </div>\n  )\n}\n\nexport default StandaloneVisualization;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import {Suspense} from 'react';\nimport {Helmet} from \"react-helmet\";\n\nimport {buildPageTitle} from '../../helpers/misc';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  title,\n  lang = 'fr'\n}) => {\n  return (\n    <div className=\"PlainPage secondary-page\">\n      <Helmet>\n        <title>{buildPageTitle(title, lang)}</title>\n      </Helmet>\n      <div className=\"centered-contents\">\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n      </div>\n  </div>\n  )\n}\n\nexport default PlainPage;","import React, { useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { NavLink as Link } from 'react-router-dom';\nimport { useScrollYPosition } from 'react-use-scroll-position';\nimport cx from 'classnames';\n\nimport metadataFr from '../../contents/fr/metadata'\nimport metadataEn from '../../contents/en/metadata'\n\nimport { scaleLinear } from 'd3-scale';\n\nimport colorPalettes from '../../colorPalettes'\nimport { useDebounce } from '../../helpers/hooks';\n\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nconst {\n  ui: {\n    colorText,\n    // colorAccent,\n    colorAccentBackground,\n    colorBackgroundBlue,\n    colorBackground\n  }\n} = colorPalettes;\n\nconst HeaderNav = ({\n  routes,\n  onLangChange,\n}) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const location = useLocation();\n  const pageType = useMemo(() => {\n    if (location.pathname.includes('/page/part')) {\n      return 'page';\n    } else if (location.pathname === '/fr/' || location.pathname === '/en/') {\n      return 'home';\n    }\n    else return 'other-page';\n  }, [location])\n  const paramsLang = location && location.match && location.match.params && location.match.params.lang;\n  let lang = 'fr';\n  if (paramsLang) {\n    lang = paramsLang;\n  } else if (location.pathname.includes('/en/')) {\n    lang = 'en';\n  }\n  const liveScrollY = useScrollYPosition();\n\n  const scrollY = useDebounce(liveScrollY, 50)\n\n  const pageColorScale = scaleLinear().range([colorBackgroundBlue, colorBackground]).domain([0, 1])\n  const { fontColor, backgroundColor } = useMemo(() => {\n    // const wrapper = document.getElementById('wrapper');\n    // if (!wrapper) {\n    //   return {fontColor: undefined, backgroundColor: undefined}\n    // }\n    // const scrollHeight = wrapper.offsetHeight;\n    const screenHeight = window.innerHeight;\n    switch (pageType) {\n      case 'page':\n        if (scrollY < screenHeight) {\n          return {\n            fontColor: colorText,\n            backgroundColor: pageColorScale((scrollY / (screenHeight / 2))),\n          }\n        } else {\n          return {\n            backgroundColor: colorBackground\n          }\n        }\n      case 'home':\n        if (scrollY < screenHeight * .8) {\n          return {\n            fontColor: colorText,\n            backgroundColor: colorBackgroundBlue,\n          }\n        } else {\n          return {\n            fontColor: 'white',\n            backgroundColor: colorAccentBackground\n          }\n        }\n\n      case 'other-page':\n      default:\n        return {\n          fontColor: undefined,\n          backgroundColor: colorBackground\n        }\n\n    }\n\n  }, [scrollY, pageColorScale, pageType])\n\n  const title = metadata[lang].titleHTML\n\n  return (\n    <>\n      <nav\n        style={{\n          background: backgroundColor,\n          color: fontColor\n        }}\n        className=\"nav nav-large\"\n      >\n        <ul className=\"primary-nav-container\">\n          <li className=\"navitem-container\">\n            <Link exact to={`/${lang}/`}>\n              {\n                fontColor === 'white' ?\n                  <img src={`${process.env.PUBLIC_URL}/rose_des_vents_white.svg`} alt=\"logo\" />\n                  :\n                  <img src={`${process.env.PUBLIC_URL}/rose_des_vents.svg`} alt=\"logo\" />\n              }\n            </Link>\n          </li>\n          {\n            routes\n              .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'primary' && !hide)\n              .map(({ shortTitles, routes: inputRoute }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {shortTitles[lang]}\n                    </Link>\n                  </li>\n                )\n              })\n          }\n        </ul>\n        <ul className=\"secondary-nav-container\">\n          <li className=\"navitem-container\">\n            <Link to={`/${lang}/atlas`}>\n              {lang === 'fr' ? 'atlas des visualisations' : 'visualizations atlas'}\n            </Link>\n          </li>\n          {\n            routes\n              .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'secondary' && !hide)\n              .map(({ shortTitles, routes: inputRoute }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {shortTitles[lang]}\n                    </Link>\n                  </li>\n                )\n              })\n          }\n\n          {\n            // @todo delete this ternary when english contents are ready\n            process.env.NODE_ENV === 'development' ?\n              <>\n                <li className=\"navitem-container lang-toggle\">\n                  <button\n                    className={lang === 'fr' ? 'is-active' : ''}\n                    onClick={() => onLangChange('fr')}\n                  >fr</button>\n                </li>\n                <li className=\"navitem-container lang-toggle\">\n                  <button\n                    className={lang === 'en' ? 'is-active' : ''}\n                    onClick={() => onLangChange('en')}\n                  >en</button>\n                </li>\n              </>\n              : null\n          }\n        </ul>\n      </nav>\n      <nav\n        style={{\n          // background: backgroundColor,\n          // color: fontColor\n        }}\n        className={cx(\"nav nav-drawer\", { 'is-open': drawerIsOpen })}\n      >\n        <div className=\"drawer-background\" onClick={() => setDrawerIsOpen(!drawerIsOpen)} />\n        <div className=\"drawer-body\">\n          <ul className=\"primary-nav-container\">\n            <li onClick={() => setDrawerIsOpen(false)} className=\"navitem-container\">\n              <Link exact to={`/${lang}/`}>\n                {lang === 'fr' ? 'accueil' : 'home'}\n              </Link>\n            </li>\n            {\n              routes\n                .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'primary' && !hide)\n                .map(({ shortTitles, routes: inputRoute }, index) => {\n                  const route = `/${lang}/page/${inputRoute[lang]}`\n                  return (\n                    <li onClick={() => setDrawerIsOpen(false)} key={index} className=\"navitem-container\">\n                      <Link to={route}>\n                        {shortTitles[lang]}\n                      </Link>\n                    </li>\n                  )\n                })\n            }\n          </ul>\n          <ul className=\"secondary-nav-container\">\n            {\n              routes\n                .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'secondary' && !hide)\n                .map(({ shortTitles, routes: inputRoute }, index) => {\n                  const route = `/${lang}/page/${inputRoute[lang]}`\n                  return (\n                    <li onClick={() => setDrawerIsOpen(false)} key={index} className=\"navitem-container\">\n                      <Link to={route}>\n                        {shortTitles[lang]}\n                      </Link>\n                    </li>\n                  )\n                })\n            }\n            <li onClick={() => setDrawerIsOpen(false)} className=\"navitem-container\">\n              <Link to={`/${lang}/atlas`}>\n                {lang === 'fr' ? 'atlas des visualisations' : 'visualizations atlas'}\n              </Link>\n            </li>\n            {\n              // @todo delete this ternary when english contents are ready\n              process.env.NODE_ENV === 'development' ?\n                <li className=\"navitem-container lang-toggle\">\n                  <ul className=\"lang-toggle-container\">\n                    <li>\n                      <button\n                        className={lang === 'fr' ? 'is-active' : ''}\n                        onClick={() => onLangChange('fr')}\n                      >fr</button>\n                    </li>\n                    <li>\n                      <button\n                        className={lang === 'en' ? 'is-active' : ''}\n                        onClick={() => onLangChange('en')}\n                      >en</button>\n                    </li>\n                  </ul>\n\n                </li>\n                :\n                null\n            }\n\n\n          </ul>\n        </div>\n        <div className=\"drawer-header\">\n          <button onClick={() => setDrawerIsOpen(!drawerIsOpen)} className={cx('drawer-button')}>\n            {\n              fontColor === 'white' || drawerIsOpen ?\n                <img style={{ background: drawerIsOpen ? undefined : backgroundColor }} src={`${process.env.PUBLIC_URL}/rose_des_vents_white.svg`} alt=\"logo\" />\n                :\n                <img style={{ background: drawerIsOpen ? undefined : backgroundColor }} src={`${process.env.PUBLIC_URL}/rose_des_vents.svg`} alt=\"logo\" />\n            }\n          </button>\n          <Link exact to={`/${lang}/`}>\n            <h1 style={{\n              color: drawerIsOpen ? undefined : fontColor,\n              background: drawerIsOpen ? undefined : backgroundColor,\n            }} dangerouslySetInnerHTML={{ __html: title }} />\n          </Link>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default HeaderNav;","import HeaderNav from './HeaderNav';\n\nexport default HeaderNav;","const Loader = ({ percentsLoaded = 0 }) => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{ width: percentsLoaded + '%' }} />\n      </div>\n    </div>\n  )\n}\n\nexport default Loader;","import Footer from './Footer';\n\nexport default Footer;","/* eslint import/no-webpack-loader-syntax : 0 */\nimport FooterFr from '!babel-loader!mdx-loader!../../contents/fr/footer.mdx';\nimport FooterEn from '!babel-loader!mdx-loader!../../contents/fr/footer.mdx';\n\nconst Footer = ({lang}) => {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"footer-contents\">\n      {lang === 'fr' ? <FooterFr /> : <FooterEn />}\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","\n/* import external libraries */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  // HashRouter as Router,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n  Link,\n} from \"react-router-dom\";\nimport uniq from 'lodash/uniq';\nimport { csvParse, tsvParse } from 'd3-dsv';\nimport axios from 'axios';\n\n/* import pages */\nimport Home from './pages/Home';\nimport Atlas from \"./pages/Atlas\";\nimport StandaloneVisualization from \"./pages/StandaloneVisualization\";\nimport PlainPage from './pages/PlainPage';\n\n/* import components */\nimport HeaderNav from './components/HeaderNav';\nimport Loader from './components/Loader/Loader';\nimport Footer from \"./components/Footer\";\n\n/* import utils */\nimport { DatasetsContext } from './helpers/contexts';\n\n/* import other assets */\nimport './App.scss';\n\nimport visualizationsList from './visualizationsList';\nimport { homepage } from '../package.json';\nimport routes from './summary';\n\nconst LANGUAGES = ['fr', 'en'];\n\nfunction App() {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const [datasets, setDatasets] = useState({})\n  const [loadingFraction, setLoadingFraction] = useState(0);\n\n  /**\n   * loading all datasets\n   */\n  useEffect(() => {\n    // loading all datasets from the atlas\n    // @todo do this on a page-to-page basis if datasets happens to be too big/numerous\n    const datasetsNames = uniq(visualizationsList.filter(d => d.datasets).reduce((res, d) => [...res, ...d.datasets.split(',').map(d => d.trim())], []));\n    datasetsNames.reduce((cur, datasetName, datasetIndex) => {\n      return cur.then((res) => new Promise((resolve, reject) => {\n        const url = datasetName ? `${process.env.PUBLIC_URL}/data/${datasetName}` : undefined;\n        if (url) {\n          axios.get(url, {\n            onDownloadProgress: progressEvent => {\n              let status = progressEvent.loaded / progressEvent.total;\n              status = status > 1 ? 1 : status;\n              const globalFraction = datasetIndex / datasetsNames.length;\n              setLoadingFraction(globalFraction + status / datasetsNames.length);\n            }\n          })\n            .then(({ data: inputData }) => {\n              setTimeout(() => {\n                let loadedData = inputData;\n                if (url.split('.').pop() === 'csv') {\n                  loadedData = csvParse(inputData);\n                } else if (url.split('.').pop() === 'tsv') {\n                  loadedData = tsvParse(inputData);\n                }\n                resolve({ ...res, [datasetName]: loadedData })\n              })\n            })\n            // make get errors non-blocking to get all available datasets in the app even if some are broken\n            .catch(err => {\n              console.error(err);\n              return resolve(res);\n            })\n        } else return resolve(res);\n\n      }))\n    }, Promise.resolve({}))\n      .then(newDatasets => {\n        setLoadingFraction(1);\n        setDatasets(newDatasets)\n      })\n      .catch(console.error)\n  }, [])\n\n  const onLangChange = (ln) => {\n    const otherLang = ln === 'fr' ? 'en' : 'fr';\n\n    const { pathname } = location;\n    // @todo refactor this to be handled based on the routes config JSON ?\n    if (pathname.includes('atlas')) {\n      const visualizationId = pathname.split('/atlas/').pop();\n      history.push(`/${ln}/atlas/${visualizationId || ''}`);\n    } else {\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.routes[otherLang] === pathOtherLang;\n      });\n      if (routeItem) {\n        history.push(`/${ln}/page/${routeItem.routes[ln]}`);\n      } else {\n        history.push(`/${ln}/`);\n      }\n    }\n  }\n  const renderRoute = ({\n    Content,\n    ContentSync,\n    ThatComponent = PlainPage,\n    title,\n    lang,\n  }) => (\n    <>\n      <ThatComponent\n        {\n        ...{\n          Content,\n          ContentSync,\n          title,\n          lang\n        }\n        }\n      />\n    </>\n\n  );\n  return (\n    <DatasetsContext.Provider value={datasets}>\n      <div id=\"wrapper\">\n        <header>\n          <HeaderNav {...{ onLangChange, routes }} />\n        </header>\n        <main>\n          <Switch>\n            {// looping through the page\n              LANGUAGES.map(lang => {\n                return routes\n                  .map(({\n                    titles,\n                    routes: inputRoute,\n                    contents,\n                    Component: ThatComponent,\n                    contentsProcessed\n                  }, index) => {\n                    const route = `/${lang}/page/${inputRoute[lang]}`\n                    const title = titles[lang];\n                    // @todo remove Content as it is not used anymore ? (importing md content with React.lazy did not play nice with scrollytelling-related features)\n                    const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents[lang]}`));\n                    const ContentSync = contentsProcessed[lang];\n                    return (\n                      <Route key={index} path={route} exact>\n                        {renderRoute({ Content, ThatComponent, title, ContentSync, lang })}\n                      </Route>\n                    )\n                  })\n              })\n            }\n            {\n              LANGUAGES.map(lang => {\n                return visualizationsList\n                  .map(({\n                    id\n                  }, index) => {\n                    const route = `/${lang}/visualization/${id}`;\n                    return (\n                      <Route key={index} path={route} exact component={() => <StandaloneVisualization {...{ id, lang }} />} />\n                    )\n                  })\n              })\n            }\n            <Route path=\"/:lang/atlas/:visualizationId?\" component={Atlas} />\n            <Route path=\"/:lang\" exact component={Home} />\n            <Redirect to={`/fr/`} />\n          </Switch>\n          {\n            loadingFraction < 1 ?\n              <Loader percentsLoaded={loadingFraction * 100} />\n              : null\n          }\n        </main>\n        <Footer\n          lang={'fr'}\n        />\n\n\n      </div>\n      {/* following react fragment is aimed at allowing react-snap to parse all the pages that have a dynamic URL */}\n      <React.Fragment>\n        {// looping through the pages to add a blank link to all of them\n          LANGUAGES.map(lang => {\n            return routes\n              // @todo this is dirty and should be removed at some point (test page is not exported in prod, so no need for react-snap)\n              .filter(({ routes }) => routes[lang] && !routes[lang].includes('test'))\n              .map(({\n                titles,\n                routes: inputRoute,\n                contents,\n                Component: ThatComponent,\n                contentsProcessed\n              }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`;\n                return (\n                  <Link to={route} exact />\n                )\n              })\n          })\n        }\n        {// looping through all the atlas visualizations links\n          LANGUAGES.map(lang => {\n            return visualizationsList\n              .map(({\n                id\n              }, index) => {\n                const route = `/${lang}/atlas/${id}`;\n                return (\n                  <Link to={route} exact />\n                )\n              })\n          })\n        }\n      </React.Fragment>\n    </DatasetsContext.Provider>\n  );\n}\n\n/**\n * the following variable is aimed at allowing browser-router to function\n * for deployments on gh-pages (prefixing all routes with the repo name to match ghp URL pattern e.g. https://username.github.io/projectname/)\n */\nconst BASE_NAME =\n  process.env.NODE_ENV === 'development'\n    ? undefined\n    : `/${homepage.split('/').pop()}`;\n\n\nexport default function Wrapper() {\n  return (\n    <Router basename={BASE_NAME}>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n} else {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})\n\nexport const DatasetsContext = React.createContext({\n\n})\n","\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { extent, range, max } from 'd3-array';\nimport { useRef, useState, useEffect } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst { generic } = colorsPalettes;\n\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} orientation ['horizontal', 'vertical'] \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * @param {object} x.sort\n * @param {string} x.sort.field\n * @param {boolean} x.sort.ascending\n * @param {string} x.sort.type ['number', 'string']\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * @param {object} y.sort\n * @param {string} y.sort.field\n * @param {boolean} y.sort.ascending\n * @param {string} y.sort.type\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * @param {number} annotations\n * @params {string} annotations[n].type ['span]\n * @params {number} annotations[n].start\n * @params {number} annotations[n].end\n * @params {string} annotations[n].axis ['x', 'y']\n * @params {string} annotations[n].label\n * @param {function} tooltip\n * @returns {react}\n */\nconst HorizontalBarChart = ({\n  data,\n  title,\n  orientation = 'horizontal',\n  layout = 'stack',\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  color,\n  x,\n  y,\n  tooltip,\n  margins: inputMargins = {},\n  annotations = []\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  // const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      // const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      // setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: yTickFormat,\n    tickSpan: yTickSpan,\n    domain: initialYDomain,\n    field: yField,\n    sort: sortY = {}\n  } = y;\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n    fillGaps: fillXGaps,\n    field: xField,\n    sort : sortX = {},\n  } = x;\n  const {\n    field: sortYField = yField,\n    ascending: sortYAscending = true,\n    type: sortYType = 'number',\n    autoSort: yAutoSort = false\n  } = sortY;\n  const {\n    field: sortXField = xField,\n    ascending: sortXAscending = true,\n    type: sortXType\n  } = sortX;\n  let colorPalette;\n  let colorModalities;\n  if (color) {\n    colorModalities = uniq(data.map(d => d[color.field]));\n  }\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  let xValues = uniq(data.filter(d => +d[y.field]).map(d => d[x.field]));\n  let vizWidth = width - margins.left - margins.right;\n\n  let xDomain = xValues;\n  let bandsNb = xValues.length;\n  let columnWidth = vizWidth / bandsNb;\n  let xScale = scaleBand().domain(xDomain).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]);\n\n  if (initialXDomain) {\n    xDomain = range(initialXDomain);\n    xValues = xDomain;\n    bandsNb = xValues.length;\n    columnWidth = vizWidth / bandsNb;\n    xScale = scaleLinear().domain(extent(xDomain)).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]).nice();\n  } else if (fillXGaps) {\n    const xExtent = extent(xValues.filter(v => +v).map(v => +v));\n    if (xTickSpan) {\n      xExtent[0] = xExtent[0] - xExtent[0] % xTickSpan;\n      xExtent[1] = xExtent[1] + xExtent[1] % xTickSpan;\n    }\n    xDomain = range(xExtent[0], xExtent[1]);\n    xValues = xDomain;\n    bandsNb = xValues.length;\n    columnWidth = vizWidth / bandsNb;\n    xScale = scaleLinear().domain(extent(xDomain)).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]).nice();\n  }  \n\n  const groups = Object.entries(groupBy(data, d => d[x.field])) // color ? Object.entries(groupBy(data, d => d[color.field])) : [[undefined, data]];\n\n  const yDomain = initialYDomain || layout === 'stack' ? \n    // stack -> max = max sum for a given x modality\n    [0, max(\n      groups.map(\n        ([_groupName, values]) => \n          values.reduce((sum, datum) => sum + +(datum[y.field]), 0)\n      )\n      )\n    ]\n    :\n    // group -> max = abs max\n    [0, max(data.map(d => +d[y.field]))];\n\n    let bandWidth = layout === 'stack' ? columnWidth / 2 : (columnWidth / colorModalities.length) * .5;\n    const yScale = scaleLinear().domain(yDomain).range([height - margins.bottom, margins.top]).nice();\n    const yStackScale = yScale.copy().range([0, height - margins.bottom - margins.top]);\n\n  \n\n  // let { values: xAxisValues } = axisPropsFromTickScale(xScale);\n  const xAxisValues = xTickSpan ? range(xDomain[0], xDomain[xDomain.length - 1], xTickSpan) : xValues;\n  let { values: yAxisValues } = axisPropsFromTickScale(yScale, 10);\n\n  if (yTickSpan) {\n    yDomain[0] = yDomain[0] - yDomain[0] % yTickSpan;\n    yDomain[1] = yDomain[1] + (yTickSpan - yDomain[0] % yTickSpan);\n    yAxisValues = range(yDomain[0], yDomain[1], yTickSpan);\n    yScale.domain(yDomain)\n  }\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"BarChart is-horizontal GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            <g className=\"axis left-axis ticks\">\n              <text x={margins.left - 10} y={margins.top - 15} className=\"axis-title\">\n                {y.title || y.field}\n              </text>\n              {\n                yAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(0, ${yScale(value)})`}\n                  >\n                    <text x={margins.left - 10} y={3}>\n                      {typeof yTickFormat === 'function' ? yTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"tick-mark\"\n                      x1={margins.left - 5}\n                      x2={margins.left}\n                      y1={0}\n                      y2={0}\n                    />\n                    <line\n                      className=\"background-line\"\n                      x1={margins.left}\n                      x2={xScale(xAxisValues[xAxisValues.length - 1])}\n                      y1={0}\n                      y2={0}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"axis bottom-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(${xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={height - margins.bottom + 20}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={yScale(yAxisValues[yAxisValues.length - 1])}\n                      y2={height - margins.bottom}\n                    />\n                    <line\n                      className=\"tick-mark\"\n                      x1={0}\n                      x2={0}\n                      y1={height - margins.bottom}\n                      y2={height - margins.bottom + 5}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"annotations-container\">\n              {\n                annotations\n                .filter(a => a.axis === 'x')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatHeight = fixSvgDimension(height - yScale(yAxisValues[yAxisValues.length - 1]) - margins.bottom);\n                  const thatY1 = height - margins.bottom;\n                  const thatY2 = yScale(yAxisValues[yAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation x-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={xScale(start)}\n                        width={fixSvgDimension(xScale(end) - xScale(start))}\n                        height={thatHeight}\n                        y={thatY2}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                      <line\n                        x1={xScale(start)}\n                        x2={xScale(start)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={xScale(end)}\n                        x2={xScale(end)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={xScale(end) + 20} \n                        x2={xScale(end) + 10} \n                        y1={thatY2 + labelPosition - 5}\n                        y2={thatY2 + labelPosition - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                      <text\n                        x={xScale(end) + 22}\n                        y={thatY2 + labelPosition}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n              {\n                annotations\n                .filter(a => a.axis === 'y')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatX1 = margins.left;\n                  const thatX2 = xScale(xAxisValues[xAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation y-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={thatX1}\n                        width={fixSvgDimension(thatX2 - thatX1)}\n                        y={yScale(start)}\n                        height={fixSvgDimension(yScale(end) - yScale(start))}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                       <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(start)}\n                        y2={yScale(start)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(end)}\n                        y2={yScale(end)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={thatX1 + labelPosition - 5} \n                        x2={thatX1 + labelPosition - 5} \n                        y1={yScale(start) - 15}\n                        y2={yScale(start) - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                     <text\n                        x={thatX1 + labelPosition}\n                        y={yScale(start) - 10}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n            </g>\n            <g className=\"bars-container\">\n              {\n                groups\n                .sort((a, b) => {\n                  const multiplier = sortXAscending ? 1 : -1;\n                  if (sortXField === x.field) {\n                    const aVal = sortXType === 'number' ? +a[0] : a[0];\n                    const bVal = sortXType === 'number' ? +b[0] : b[0];\n                    if (aVal < bVal) {\n                      return -1 * multiplier;\n                    }\n                    return 1 * multiplier;\n                  }\n                  const aVal = sortXType === 'number' ? \n                    +a[1].reduce((sum, datum) => sum + +datum[sortXField], 0) \n                    : a[1][sortXField];\n                  const bVal = sortXType === 'number' ? \n                    +b[1].reduce((sum, datum) => sum + +datum[sortXField], 0) \n                    : b[1][sortXField];\n                  if (aVal < bVal) {\n                    return -1 * multiplier;\n                  }\n                  return 1 * multiplier;\n                  \n                })\n                .map(([xModality, items], groupIndex) => {\n                  let stackDisplaceY = height - margins.bottom;\n                  return (\n                    <g key={groupIndex} transform={`translate(${xScale(items[0][x.field])}, 0)`}>\n                      {\n                        items\n                        .sort((a, b) => {\n                          if (!yAutoSort) {\n                            return 0;\n                          }\n                          const multiplier = sortYAscending ? 1 : -1;\n                          const aVal = sortYType === 'number' ? +a[sortYField] : a[sortYField];\n                          const bVal = sortYType === 'number' ? +b[sortYField] : b[sortYField];\n                          if (aVal > +bVal) {\n                            return -1 * multiplier;\n                          }\n                          return 1 * multiplier;\n                        })\n                        .map((item, itemIndex) => {\n                          const thatX = layout === 'stack' ? -bandWidth / 2 : itemIndex * ((columnWidth * .5) / items.length) - columnWidth / 4;\n                          const thatHeight = layout === 'stack' ? yStackScale(item[y.field]) : height - margins.bottom - yScale(item[y.field]) || 0;\n                          \n                          const thatY = layout === 'stack' ? stackDisplaceY - thatHeight : yScale(item[y.field]);\n                          if (layout === 'stack') {\n                            stackDisplaceY -= thatHeight;\n                          }\n                          const thatColor = colorPalette ? colorPalette[item[color.field]] : generic.dark;\n                          return (\n                            <>\n                              {\n                                +item[y.field] > 0 ?\n                                  <rect key={itemIndex}\n                                    fill={thatColor}\n                                    width={fixSvgDimension(bandWidth)}\n                                    x={thatX}\n                                    y={thatY}\n                                    height={fixSvgDimension(thatHeight)}\n                                    data-for=\"bar-tooltip\"\n                                    data-tip={typeof tooltip === 'function' ? tooltip(item, itemIndex, groupIndex) : undefined}\n                                  />\n                                  : null\n                              }\n                            </>\n                          )\n                        })\n                      }\n                    </g>\n                  );\n                })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color]) => (\n                        <li\n                          key={modality}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"bar-tooltip\" />\n    </>\n  )\n}\n\nexport default HorizontalBarChart;","\nimport { scaleLinear } from 'd3-scale';\nimport { range, max } from 'd3-array';\nimport { useRef, useState, useEffect } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst { generic } = colorsPalettes;\n\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * @param {object} x.sort\n * @param {string} x.sort.field\n * @param {boolean} x.sort.ascending\n * @param {string} x.sort.type ['number', 'string']\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * @param {boolean} y.formatLabel\n * @param {object} y.sort\n * @param {string} y.sort.field\n * @param {boolean} y.sort.ascending\n * @param {string} y.sort.type\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * \n * @param {function} tooltip\n * \n * @returns {react}\n */\nconst VerticalBarChart = ({\n  data,\n  title,\n  layout = 'stack',\n  width: initialWidth = 1200,\n  height: initialHeight = 1200,\n  color,\n  y,\n  x,\n  tooltip,\n  margins: inputMargins = {},\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n\n  const width = fixSvgDimension(initialWidth - legendWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ? headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ? legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 30,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n    field: xField,\n    sort: sortX = {}\n  } = x;\n  const {\n    rowHeight: fixedRowHeight,\n    formatLabel,\n    field: yField,\n    sort: sortY = {}\n  } = y;\n  const {\n    field: sortYField = yField,\n    autoSort = false,\n    ascending: sortYAscending = true,\n    type: sortYType,\n  } = sortY;\n  const {\n    field: sortXField = xField,\n    ascending: sortXAscending = true,\n    type: sortXType = 'number'\n  } = sortX;\n  let colorPalette;\n  let colorModalities;\n  if (color) {\n    colorModalities = uniq(data.map(d => d[color.field]));\n  }\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  let yValues = uniq(data.map(d => d[y.field]));\n  let bandsNb = yValues.length;\n  let vizHeight = (fixedRowHeight ? fixedRowHeight * (bandsNb) : height - headersHeight);\n\n  let rowHeight = fixSvgDimension(fixedRowHeight || vizHeight / bandsNb);\n\n  const groups = Object.entries(groupBy(data, d => d[y.field]));\n\n  const xDomain = initialXDomain || layout === 'stack' ?\n    // stack -> max = max sum for a given x modality\n    [0, max(\n      groups.map(\n        ([_groupName, values]) =>\n          values.reduce((sum, datum) => sum + +(datum[x.field]), 0)\n      )\n    )\n    ]\n    :\n    // group -> max = abs max\n    [0, max(data.map(d => +d[x.field]))];\n\n  let bandHeight = layout === 'stack' ? rowHeight / 2 : (rowHeight / colorModalities.length) * .5;\n  const xScale = scaleLinear().domain(xDomain).range([0, width - margins.left - margins.right]).nice();\n  const xStackScale = xScale.copy().range([0, width - margins.left - margins.right]);\n\n  let { values: xAxisValues } = axisPropsFromTickScale(xScale, 10);\n\n  if (xTickSpan) {\n    xDomain[0] = xDomain[0] - xDomain[0] % xTickSpan;\n    xDomain[1] = xDomain[1] + xDomain[1] % xTickSpan;\n    xAxisValues = range(xDomain[0], xDomain[1], xTickSpan);\n    xScale.domain(xDomain);\n  }\n  const svgHeight = vizHeight + margins.top + margins.bottom;\n  const finalHeight = initialHeight > (svgHeight + headersHeight) ? initialHeight : svgHeight + headersHeight;\n  return (\n    <>\n      <figure style={{ width: initialWidth, height: finalHeight }} className=\"BarChart is-vertical GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={svgHeight}>\n            <g className=\"axis top-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(${margins.left + xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={margins.top - 5}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={margins.top}\n                      y2={vizHeight + margins.top}\n                    />\n                    <text x={0} y={svgHeight - margins.bottom + 10}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    {/* <line\n                      className=\"tick-mark\"\n                      x1={0}\n                      x2={0}\n                      y1={height - margins.bottom}\n                      y2={height - margins.bottom + 5}\n                    /> */}\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"bars-container\">\n              {\n                groups\n                  .sort((a, b) => {\n                    if (!autoSort) {\n                      return 0;\n                    }\n                    const multiplier = sortYAscending ? 1 : -1;\n                    if (sortYField === y.field) {\n                      const aVal = sortYType === 'number' ? +a[0] : a[0];\n                      const bVal = sortYType === 'number' ? +b[0] : b[0];\n                      if (aVal < bVal) {\n                        return -1 * multiplier;\n                      }\n                      return 1 * multiplier;\n                    }\n                    const aVal = sortYType === 'number' ?\n                      +a[1].reduce((sum, datum) => sum + +datum[sortYField], 0)\n                      : a[1][sortYField];\n                    const bVal = sortYType === 'number' ?\n                      +b[1].reduce((sum, datum) => sum + +datum[sortYField], 0)\n                      : b[1][sortYField];\n                    if (aVal < bVal) {\n                      return -1 * multiplier;\n                    }\n                    return 1 * multiplier;\n\n                  })\n                  .map(([yModality, items], groupIndex) => {\n                    let stackDisplaceX = margins.left;\n                    return (\n                      <g key={groupIndex} transform={`translate(0, ${margins.top + rowHeight * groupIndex})`}>\n                        <foreignObject \n                          x={0} \n                          y={layout === 'stack' ? bandHeight / 4 : bandHeight/2 /* + bandHeight * (items.length / 2)*/} \n                          width={margins.left} \n                          height={rowHeight}\n                        >\n                          <div className=\"vertical-bar-label\">\n                          <div>{typeof formatLabel === 'function' ? formatLabel(yModality, groupIndex) : yModality}</div>\n                          </div>\n                        </foreignObject>\n                        {/* <text y={rowHeight / 2 + 5} className=\"vertical-bar-label\" x={margins.left - 5}>\n                          {typeof formatLabel === 'function' ? formatLabel(yModality, groupIndex) : yModality}\n                        </text> */}\n                        {\n                          items\n                            .sort((a, b) => {\n                              if (!autoSort) {\n                                return 0;\n                              }\n                              const multiplier = sortXAscending ? 1 : -1;\n                              const aVal = sortXType === 'number' ? +a[sortXField] : a[sortXField];\n                              const bVal = sortXType === 'number' ? +b[sortXField] : b[sortXField];\n                              if (aVal > +bVal) {\n                                return -1 * multiplier;\n                              }\n                              return 1 * multiplier;\n                            })\n                            .map((item, itemIndex) => {\n\n                              const thatY = layout === 'stack' ? bandHeight / 2 : itemIndex * ((rowHeight * .5) / items.length) + rowHeight / 4;\n                              const thatWidth = layout === 'stack' ? xStackScale(+item[x.field]) : xScale(item[x.field]);\n                              const thatX = layout === 'stack' ? stackDisplaceX : margins.left;\n                              if (layout === 'stack') {\n                                stackDisplaceX += thatWidth;\n                              }\n                              const thatColor = colorPalette ? colorPalette[item[color.field]] : generic.dark;\n                              return (\n                                <>\n                                  {\n                                    +item[x.field] > 0 ?\n                                      <rect key={itemIndex}\n                                        fill={thatColor}\n                                        width={fixSvgDimension(thatWidth)}\n                                        x={thatX}\n                                        y={thatY}\n                                        height={fixSvgDimension(bandHeight - 1)}\n                                        data-for=\"bar-tooltip\"\n                                        data-tip={typeof tooltip === 'function' ? tooltip(item, itemIndex, groupIndex) : undefined}\n                                      />\n                                      : null\n                                  }\n                                </>\n                              )\n                            })\n                        }\n                      </g>\n                    );\n                  })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color]) => (\n                        <li\n                          key={modality}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"bar-tooltip\" />\n    </>\n  )\n}\n\nexport default VerticalBarChart;","import HorizontalBarChart from './HorizontalBarChart';\nimport VerticalBarChart from './VerticalBarChart';\n\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} orientation ['horizontal', 'vertical'] \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * \n * @param {function} tooltip\n * \n * @returns {react}\n */\nconst BarChart = ({\n  orientation = 'horizontal',\n  ...props\n}) => {\n  if (orientation === 'horizontal') {\n    return <HorizontalBarChart {...props} />\n  }\n  return <VerticalBarChart {...props} />\n}\nexport default BarChart;","import BarChart from './BarChart';\n\nexport default BarChart;","/* eslint import/no-anonymous-default-export : 0 */\nexport default {\n  \"title\": \"Commerce multi-échelles autour du port de La Rochelle au XVIIIème siècle\",\n  \"titleHTML\": \"Commerce multi-échelles autour du port de La Rochelle au <span>XVIII</span><sup>e</sup> siècle\",\n  \"subtitle\": \"Une étude de cas du programme de recherche interdisciplinaire PORTIC\"\n}","/* eslint import/no-anonymous-default-export : 0 */\nexport default {\n  \"title\": \"Commerce multi-échelles autour du port de La Rochelle au XVIIIème siècle\",\n  \"titleHTML\": \"Commerce multi-échelles autour du port de La Rochelle au XVIII<sup>e</sup> siècle\",\n  \"subtitle\": \"Une étude de cas du programme de recherche interdisciplinaire PORTIC\"\n}"],"sourceRoot":""}