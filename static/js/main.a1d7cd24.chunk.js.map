{"version":3,"sources":["../ /^/.//.*$/ groupOptions: {} namespace object","helpers/contexts.js","components/SvgComponent/SvgComponent.js","components/SvgComponent/index.js","components/VegaComponent/index.js","components/VegaComponent/VegaComponent.js","components/SigmaComponent/reducers.js","components/SigmaComponent/GraphControls.js","helpers/misc.js","components/SigmaComponent/GraphContainer.js","components/SigmaComponent/index.js","components/GeoComponent/index.js","components/GeoComponent/GeoComponent.js","pages/Home/ports-region-1789.svg","pages/Home/content.mdx","pages/Home/Home.js","pages/Home/index.js","components/HeaderNav/index.js","components/HeaderNav/HeaderNav.js","pages/PlainPage/index.js","pages/PlainPage/PlainPage.js","summary.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","LanguageContext","React","createContext","SvgComponent","path","alt","src","process","VegaComponent","filename","data","spec","useState","setData","loading","setLoading","URL","useEffect","get","csvString","newData","csvParse","catch","err","VegaLite","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","GraphControls","rescale","zoomIn","zoomOut","className","cx","onClick","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","usePrevious","value","ref","useRef","current","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","graph","nodeColorVariable","nodeColor","nodeSizeVariable","nodeSize","labelDensity","nodeLabel","onCameraUpdate","cameraPosition","updateTimestamp","sizes","useMemo","res","forEachNode","_node","attributes","push","size","sizeExtent","extent","extents","min","max","values","attr","uniq","colors","length","palette","i","forEach","option","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabel","previousLabelDensity","nodeReducer","nodeSizeFactor","nodeSizeScale","key","renderedNode","x","isNaN","undefined","y","color","v","createNodeReducer","edgeReducer","dontColorEdges","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","width","height","displayedLabels","Set","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","style","bind","inputCameraPosition","angle","ratio","setGraph","setCameraPosition","gexfString","gexf","parse","Graph","updateNode","_err","cam","GeoComponent","dataFilename","backgroundFilename","markerSize","markerColor","backgroundData","setBackgroundData","loadingData","setLoadingData","loadingBackground","setLoadingBackground","dataURL","markerData","coordsMap","datum","mark","latitude","longitude","grouped","entries","colorValues","g","colorsMap","reduce","index","sizeScale","backgroundURL","bgData","projection","geoEqualEarth","fitSize","scale","translate","viewBox","border","features","d","geoPath","fill","stroke","strokeWidth","filter","cy","r","layoutProps","MDXContent","components","props","mdxType","test","parentName","isMDXComponent","Home","lang","Helmet","HeaderNav","routes","onLangChange","to","titles","inputRoute","route","PlainPage","Content","title","contentsURL","fallback","summary","fr","en","contents","LANGUAGES","App","history","useHistory","setLang","renderRoute","ThatComponent","Provider","ln","otherLang","pathOtherLang","location","pathname","split","pop","routeItem","find","Component","lazy","Wrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1d7cd24.chunk.js","sourcesContent":["var map = {\n\t\"./en/about.mdx\": [\n\t\t288,\n\t\t3\n\t],\n\t\"./en/part-1.mdx\": [\n\t\t289,\n\t\t4\n\t],\n\t\"./en/part-2-1.mdx\": [\n\t\t290,\n\t\t5\n\t],\n\t\"./en/part-2-2.mdx\": [\n\t\t291,\n\t\t6\n\t],\n\t\"./en/part-2-3.mdx\": [\n\t\t292,\n\t\t7\n\t],\n\t\"./en/part-2-intro.mdx\": [\n\t\t293,\n\t\t8\n\t],\n\t\"./en/part-3.mdx\": [\n\t\t294,\n\t\t9\n\t],\n\t\"./fr/a-propos.mdx\": [\n\t\t295,\n\t\t10\n\t],\n\t\"./fr/partie-1.mdx\": [\n\t\t296,\n\t\t11\n\t],\n\t\"./fr/partie-2-1.mdx\": [\n\t\t297,\n\t\t12\n\t],\n\t\"./fr/partie-2-2.mdx\": [\n\t\t298,\n\t\t13\n\t],\n\t\"./fr/partie-2-3.mdx\": [\n\t\t299,\n\t\t14\n\t],\n\t\"./fr/partie-2-intro.mdx\": [\n\t\t300,\n\t\t15\n\t],\n\t\"./fr/partie-3.mdx\": [\n\t\t301,\n\t\t16\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 283;\nmodule.exports = webpackAsyncContext;","\nimport React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})\n\nexport const LanguageContext = React.createContext({\n\n})","\n\nfunction SvgComponent ({path}) {\n    return <img alt={path} src={`${process.env.PUBLIC_URL}${path}`} />\n} \n\nexport default SvgComponent;","import SvgComponent from './SvgComponent';\n\nexport default SvgComponent;","import VegaComponent from './VegaComponent';\n\nexport default VegaComponent;","import React, {useState, useEffect} from 'react';\nimport {VegaLite} from 'react-vega';\nimport {csvParse} from 'd3-dsv';\nimport get from 'axios';\n\nconst VegaComponent = ({\n  data: filename,\n  spec\n}) => {\n    // useState renvoie un state et un seter qui permet de le modifier\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const URL = `${process.env.PUBLIC_URL}/data/${filename}`;\n\n  useEffect(() => {\n    // aller chercher les données (get : lancement de la promesse se lance de suite : synchrone, then et catch plus tard)\n    get(URL)\n    .then(({data: csvString}) => {\n      // les convertir en js (avec d3-dsv)\n      const newData = csvParse(csvString);\n      // vega prend qqch comme ça : [{prop1: 'val', pro2: 'val2'}]\n      setData(newData);\n      setLoading(false);\n    })\n    .catch((err) => {\n      setLoading(false);\n    })\n  }, [URL])\n  \n  if (!spec) {\n    return <div>Vous devez spécifier une spec pour le composant vega.</div>\n  }\n\n  if (loading) {\n    return (\n      <div>Chargement des données ({URL}) ...</div>\n    )\n  } else if (!data) {\n    return (\n    <div>Erreur ...</div>\n    )\n  }\n  return (\n      <div>\n        <VegaLite\n          spec={{\n            ...spec,\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"data\": {\n              \"values\": data\n            }\n          }}\n        />\n      </div>\n  )\n}\n\nexport default VegaComponent;\n","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\n// import {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  // filters = [],\n  // filtersModeAnd\n}) {\n  \n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  \n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      ...attr,\n      x: isNaN(attr.x) || attr.x === undefined ? 0 : attr.x,\n      y: isNaN(attr.y) || attr.y === undefined ? 0 : attr.y\n    };\n\n\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    return renderedNode;\n  };\n\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  dontColorEdges,\n  edgesMap\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import React from 'react';\nimport cx from 'classnames';\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n}) {\n  return (\n    <ul className={cx(\"VisControls GraphControls\")}>\n      <li className=\"vis-controls-item camera\">\n      \n      <button onClick={zoomOut}>\n        -\n      </button>\n      <button onClick={zoomIn}>\n        +\n      </button>\n      <button onClick={rescale}>\n        Recentrer\n      </button>\n      </li>\n    </ul>\n  );\n}","import { csvParse } from 'd3-dsv';\nimport get from 'axios';\nimport iwanthue from 'iwanthue';\nimport {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return ['#D77186', '#61A2DA']\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}\n\n\nconst _filterData = (data, { startYear, endYear, year, params, ...rest }) => {\n  console.group('filters');\n  console.time('filters time');\n  console.log('input', data);\n  /* dans data on a un dict de type : \n  [   {year: \"1789\", customs_region: \"La Rochelle\", partner_simplification: \"Iles\", export_import: ”Import\", product_revolutionempire: \"...\", ...},\n      {year: \"1782\", customs_region: \"Bordeaux\", ...},\n      {...},\n      columns: [\"year\", \"customs_region\", ...]\n\n  ]\n  */\n  let filteredData = data.filter(row => {\n    let rowYear = row.year ? +row.year.split(\".\")[0] : undefined;\n    if (startYear && endYear) {\n      return rowYear >= +startYear && rowYear <= +endYear;\n      // @todo : quand on aura rajouté startYear et endYear pour\n      // la récupération de portic il s'agira de déduire ce year des données\n    } else if (year && rowYear) {\n      return year === +rowYear;\n    } else return true;\n  })\n  // console.log('1', filteredData);\n\n  filteredData = filteredData.filter(row => {\n    // pour chaque filtre (sauf filtre timespan et filtrage des colomnes) :\n    let isValid = true;\n    // key --> 'year', filter_value --> 1789\n    // kwargs obtenu sous forme de dict : --> { year: 1789, customs_region: 'La Rochelle' }\n\n    // kwargs semble être indiçable mais pas sur qu'on doive pas le mettre dans un format spécial pas comme python\n    // sinon suggestion : function.apply(obj, [args])\n\n    // ligne originale : je ne sais pas pourquoi on ne veut prendre en compte les filtres que pour les colonnes qui ne sont pas à garder dans le résultats (colonne données dans l'argument 'params' sous forme de liste)\n    // for (let key,filter_value in [param for param in kwargs.items() if param[0] not in ['params']]): \n    // console.log('rest', rest);\n    Object.entries(rest)\n      .some(([key, inputFilterValue]) => {\n        const rowValue = row[key];\n        let filterValue = inputFilterValue;\n        // console.log('filter value 1', filterValue);\n        // si la valeur est une liste : on caste en string ses membres\n        if (Array.isArray(filterValue)) {\n          filterValue = filterValue.map(x => x + ''); // caster en string\n        }\n        // sinon c'est un tableau à une valeur qu'on caste en string\n        else {\n          filterValue = [filterValue + ''];\n        }\n        // console.log('filter value final', filterValue);\n        // à partir de là, filter_value est une liste de strings\n\n        // si la ligne a un attribut qui fait partie des valeurs acceptées par le filtre => on examine les autres filtres \n        if (filterValue.length > 0 && !(rowValue.includes(filterValue))) {\n          isValid = false;\n          return true;\n        }\n        return false;\n      })\n\n    return isValid;\n  })\n\n  // console.log('2', filteredData);\n\n\n  const transformedData = filteredData.map(row => {\n    let rowFormated = {};\n\n    // on ne garde que les colonnes qui nous intéressent dans le résultat => \n    // console.log(\"params : \", params);\n    // console.log(\"typeof(params) !== 'undefined' : \", (typeof params !== 'undefined'));\n    // console.log(\"row : \", row);\n    // on ne passe jamais ni dans le if ni dans le else, je ne sais pas pourquoi \n    // if (typeof params !== 'undefined') {\n\n    // if (params &&\n    // ci-dessous : tester si objet vide\n    if (!!params && Object.keys(params).length) {\n      // console.log(\"we are selecting only those columns : \", params);\n      for (let [column, value] of Object.entries(row)) {\n        if (params.includes(column)) {\n          rowFormated[column] = value;\n        }\n      }\n    }\n    // de base c'était else { ... } et on passait jamais dedans apparemment du coup là c'est bizarre\n    // else if (typeof params !== 'undefined') {\n    else {\n      // rowFormated = {...row}; // différencier rowFormated et row (nouvelle ref en unpackant et copiant key / params de row) => en JS differencier input d'output\n      // console.log(\"rowFormated = \", row);\n    }\n    // console.log(\"après le if / else\");\n    return rowFormated;\n  })\n  // console.log('3', transformedData);\n  console.timeEnd('filters time');\n  console.groupEnd('filters');\n  return transformedData;\n}\n\n\nexport const getToflitFlowsByCsv = ({\n  startYear = null,\n  endYear = null,\n  year = null,\n  params = null,\n  ...rest // https://www.peterbe.com/plog/javascript-destructuring-like-python-kwargs-with-defaults ; \n  // \"standard\" JavaScript array : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\n}) => {\n  // méthode de gestion avec callback\n  // let result;\n  // trucAsynchrone\n  // .then(data => {\n  //     callback(null, data);\n  // })\n  // .catch(error => {\n  //     callback(error);\n  // })\n\n  // méthode de gestion avec promesse\n  // return new Promise((resolve, reject) => {\n  //     trucAsynchrone\n  //     .then(data => {\n  //         // faire des trucs avec data\n  //         resolve(data);\n  //     })\n  //     .catch(error => {\n  //         // faire des choses avec l'erreur\n  //         reject(error);\n  //     })\n  // })\n\n  // méthode async/await\n  // const result = await trucAsynchrone();\n  // return result;\n\n  /*\n  Synopsis : récupère les flux toflit18\n  --- \n  Paramètres :\n  * startYear : <int> # année de début\n  * endYear : <int> # année de fin\n  * params : <arr> # propriétés à renvoyer\n  * [tous les noms de colonne des flux] : <arr/string> valeurs à filtrer dans les flux (peut être une ou plusieurs valeurs)\n  */\n\n  return new Promise((resolve, reject) => {\n\n    // let results = []; // ça sert à quelque chose ?? pour moi c'est pas utilisé, sinon je ne devrais pas avoir l'erreur \"t.map is not a function\" \n    // => voir https://www.pluralsight.com/guides/typeerror-handling-in-react.js-for-map-function\n\n    let finalStartYear = startYear; // on ne modif pas params en JS\n    let finalEndYear = endYear;\n\n\n\n    // 1. Test de la validité des paramètres\n    if (startYear !== null && endYear === null) {\n      return reject(\"You must put an end year\");\n    } // pas sure pour les accolades\n    else if (endYear !== null && startYear === null) {\n      return reject(\"You must put a start year\");\n    }\n\n    if ((startYear !== null || endYear !== null) && year !== null) {\n      finalStartYear = null;\n      finalEndYear = null;\n    }\n\n    /* en l'état ça ne fonctionne pas */\n    const URL = `${process.env.PUBLIC_URL || 'localhost:3001'}/data/toflit18_flows_sprint.csv`;\n    // console.log(\"URL '${process.env.PUBLIC_URL}/data/toflit18_flows_sprint.csv' : \", URL)\n    get(URL) // get de axios\n      .then(({ data: csvString }) => {\n        // conversion en js (avec d3-dsv)\n        const newData = csvParse(csvString);\n        // faire des choses avec les résultats (filtres, ...)\n        const finalData = _filterData(newData, { startYear: finalStartYear, endYear: finalEndYear, year, params, ...rest });\n        // console.log(\"finalData : \", finalData);\n        resolve(finalData);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n\n  })\n\n}\n\nexport const getToflitFlowsByApi = ({\n  startYear = null,\n  endYear = null,\n  year = null,\n  params = null,\n  ...rest\n}) => {\n\n  return new Promise((resolve, reject) => {\n\n    let finalStartYear = startYear; // on ne modif pas params en JS\n    let finalEndYear = endYear;\n\n    // 1. Test de la validité des paramètres\n    if (startYear !== null && endYear === null) {\n      return reject(\"You must put an end year\");\n    } // pas sure pour les accolades\n    else if (endYear !== null && startYear === null) {\n      return reject(\"You must put a start year\");\n    }\n\n    if ((startYear !== null || endYear !== null) && year !== null) {\n      finalStartYear = null;\n      finalEndYear = null;\n    }\n\n    const URL = `http://data.portic.fr/api/flows/?date=${year}`;\n    console.log({ URL })\n    // équivalent à : const URL = 'http://data.portic.fr/api/flows/?date=' + year;\n    get(URL) // get de axios\n      // mixed content issue => comme l'API ne fournit pas d'accès HTTPS je me sentais un peu bloquée\n      .then(({ data: str }) => {\n        // conversion en js (avec d3-dsv)\n        // const newData = csvParse(csvString);\n        try {\n          const newData = JSON.parse(str);\n          // contraire : JSON.stringify()\n          // faire des choses avec les résultats (filtres, ...)\n          const finalData = _filterData(newData, { startYear: finalStartYear, endYear: finalEndYear, year, params, ...rest })\n          resolve(finalData);\n        } catch (e) {\n          reject(e);\n        }\n\n      })\n      .catch((err) => {\n        reject(err);\n      })\n\n  })\n\n}\n\n\n\n\n\nexport const getPorticPointcallsByApi = ({\n  filename,\n  spec\n}) => {\n\n}\n\n","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max, extent} from 'd3-array';\nimport {uniq} from 'lodash';\n\n\nimport {createNodeReducer, createEdgeReducer} from './reducers';\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport get from 'axios';\n\nimport GraphControls from './GraphControls';\n// import {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette, usePrevious} from '../../helpers/misc';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\nfunction GraphContainer({\n  graph,\n  nodeColor: nodeColorVariable,\n  nodeSize: nodeSizeVariable,\n  labelDensity,\n  nodeLabel,\n  // extents,\n\n  // searchString = '',\n  // onSearchStringChange,\n\n  // filtersModeAnd,\n  // onToggleFiltersModeAnd,\n\n  // filtersOptions = {},\n  // filters = [],\n  // onFiltersChange,\n  // dontColorEdges,\n\n  onCameraUpdate,\n  cameraPosition,\n\n  updateTimestamp,\n\n  // nodeSizeVariable,\n  // nodeColorVariable,\n  // onNodeSizeVariableChange,\n  // onNodeColorVariableChange,\n  // onEdgesColorChange,\n}) {\n  let sizes = useMemo(() => {\n    const res = [];\n    graph.forEachNode((_node, attributes) => {\n      res.push(+(nodeSizeVariable ? attributes[nodeSizeVariable] : attributes.size));\n    })\n    return res;\n  }, [nodeSizeVariable, graph]);\n  \n  const sizeExtent = extent(sizes);\n  const extents = {\n    nodeSize: {\n      min: sizeExtent[0],\n      max: sizeExtent[1]\n    }\n  }\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable) {\n      \n      return {\n        min: min(sizeExtent),\n        max: max(sizeExtent),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable, sizeExtent])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable) {\n      let values = [];\n      graph.forEachNode((_node, attr) => {\n        values.push(attr[nodeColorVariable])\n      })\n      values = uniq(values);\n      const colors = generatePalette(nodeColorVariable, values.length);\n      let palette = {};\n      let i = 0;\n      values.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable, graph])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  // const previousSearchString = usePrevious(searchString);\n  // const previousDontColorEdges = usePrevious(dontColorEdges);\n  // const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    edgesMap\n  });\n  \n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n    \n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousDontColorEdges !== dontColorEdges ||\n      previousNodeLabel !== nodeLabel\n      // previousSearchString !== searchString ||\n      // previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph]\n  );\n\n\n  return (\n    <div className=\"VisContainer GraphContainer\" >\n\n      <div ref={setContainer} style={{width: '100%', height: '50vh'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n        />\n      )}\n    </div>\n  );\n}\n\n\nexport default function SigmaComponent({\n  data: filename,\n  nodeColor,\n  nodeLabel,\n  nodeSize,\n  labelDensity = 0.5,\n  cameraPosition: inputCameraPosition = { x: 0.5, y: 0.5, angle: 0, ratio: 1 }\n}) {\n    // useState renvoie un state et un seter qui permet de le modifier\n    const [graph, setGraph] = useState(null);\n    const [cameraPosition, setCameraPosition] = useState(inputCameraPosition);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n      setCameraPosition(inputCameraPosition);\n    }, [inputCameraPosition])\n\n    const onCameraUpdate = cam => {\n      setCameraPosition(cam);\n    }\n  \n    const URL = `${process.env.PUBLIC_URL}/data/${filename}`;\n  \n    useEffect(() => {\n      // aller chercher les données (get : lancement de la promesse se lance de suite : synchrone, then et catch plus tard)\n      get(URL)\n      .then(({data: gexfString}) => {\n        const graph = gexf.parse(Graph, gexfString);\n        graph.forEachNode((node) => {\n          graph.updateNode(node, attr => {\n            return {\n              ...attr,\n              x: attr.x ? attr.x : 0,\n              y: attr.y ? attr.y : 0\n            }\n          })\n        })\n        setGraph(graph);\n        setLoading(false);\n      })\n      .catch((_err) => {\n        setLoading(false);\n      })\n    }, [URL])\n  \n    if (loading) {\n      return (\n        <div>Chargement des données ({URL}) ...</div>\n      )\n    } else if (!graph) {\n      return (\n      <div>Erreur ...</div>\n      )\n    }\n    return (\n        <div className=\"SigmaComponent\">\n          <GraphContainer\n            {\n              ...{\n                graph,\n                cameraPosition,\n                nodeColor,\n                nodeSize,\n                labelDensity,\n                nodeLabel,\n                onCameraUpdate\n              }\n            }\n          />\n        </div>\n    )\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import GeoComponent from './GeoComponent';\n\nexport default GeoComponent;","import React, {useState, useEffect, useMemo} from 'react';\nimport {csvParse} from 'd3-dsv';\nimport get from 'axios';\nimport { geoEqualEarth, geoPath } from \"d3-geo\";\nimport {uniq} from 'lodash';\nimport {scaleLinear} from 'd3-scale';\nimport {extent} from 'd3-array';\n\nimport {generatePalette} from '../../helpers/misc';\n\n\nconst GeoComponent = ({\n  dataFilename,\n  backgroundFilename,\n  width = 800,\n  height = 450,\n  markerSize,\n  markerColor\n}) => {\n    // useState renvoie un state et un seter qui permet de le modifier\n  const [data, setData] = useState(null);\n  const [backgroundData, setBackgroundData] = useState(null);\n  const [loadingData, setLoadingData] = useState(true);\n  const [loadingBackground, setLoadingBackground] = useState(true);\n\n\n  useEffect(() => {\n    if (dataFilename) {\n      const dataURL = `${process.env.PUBLIC_URL}/data/${dataFilename}`;\n      get(dataURL)\n      .then(({data: csvString}) => {\n        const newData = csvParse(csvString);\n        \n        setData(newData);\n        setLoadingData(false);\n      })\n      .catch((err) => {\n        setLoadingData(false);\n      })\n    }\n    \n  }, [dataFilename])\n\n  const markerData = useMemo(() => {\n    if (data) {\n      // regroup data by coordinates\n      const coordsMap = {};\n      data.forEach(datum => {\n        const mark = datum.latitude + ',' + datum.longitude;\n        if (!coordsMap[mark]) {\n          coordsMap[mark] = {\n            latitude: datum.latitude,\n            longitude: datum.longitude,\n            color: datum[markerColor],\n            size: isNaN(+datum[markerSize]) ? 0 : +datum[markerSize]\n          }\n        } else {\n          coordsMap[mark].size += (isNaN(+datum[markerSize]) ? 0 : +datum[markerSize])\n        }\n      })\n      let grouped = Object.entries(coordsMap).map(([_mark, datum]) => datum);\n      const colorValues = uniq(grouped.map(g => g.color));\n      const palette = generatePalette('map', colorValues.length);\n      const colorsMap = colorValues.reduce((res, key, index) => ({\n        ...res,\n        [key]: palette[index]\n      }), {});\n\n      const sizeExtent = extent(grouped.map(g => g.size));\n      const sizeScale = scaleLinear().domain(sizeExtent).range([1, width / 100])\n      grouped = grouped.map(datum => ({\n        ...datum,\n        color: colorsMap[datum.color],\n        size: sizeScale(datum.size)\n      }))\n      return grouped;\n    }\n  }, [data, markerColor, markerSize, width])\n\n  useEffect(() => {\n    if (backgroundFilename) {\n      const backgroundURL = `${process.env.PUBLIC_URL}/data/${backgroundFilename}`;\n      get(backgroundURL)\n      .then(({data: bgData}) => {\n        setBackgroundData(bgData);\n        setLoadingBackground(false);\n      })\n      .catch((err) => {\n        setLoadingBackground(false);\n      })\n    }\n    \n  }, [backgroundFilename])\n\n  const projection = useMemo(() => {\n    if (backgroundData) {\n      // if bg data fit on whole geometry\n      return geoEqualEarth()\n      .fitSize([width, height], backgroundData)\n    }\n    return geoEqualEarth()\n      .scale(200)\n      .translate([ width / 2, height / 2 ])\n  }, [backgroundData, width, height])\n\n\n\n  if (loadingBackground || loadingData) {\n    return (\n      <div>Chargement des données ...</div>\n    )\n  } else if (!backgroundData || !data) {\n    return (\n    <div>Erreur ...</div>\n    )\n  }\n  return (\n      <div>\n        <svg width={ width } height={ height } viewBox={`\"0 0 ${width} ${height}`} style={{border: '1px solid lightgrey'}}>\n            <g className=\"background\">\n              {\n                backgroundData.features.map((d,i) => (\n                  <path\n                    key={ `path-${ i }` }\n                    d={ geoPath().projection(projection)(d) }\n                    className=\"geopart\"\n                    fill={ `rgba(38,50,56,${ 1 / backgroundData.features.length * i})` }\n                    stroke=\"#FFFFFF\"\n                    strokeWidth={ 0.5 }\n                  />\n                ))\n              }\n            </g>\n            <g className=\"markers\">\n              {\n                markerData\n                .filter(({latitude, longitude}) => latitude && longitude && !isNaN(latitude) && !isNaN(longitude))\n                .map((datum, index) => {\n                  const {latitude, longitude, size, color} = datum;\n                  const [x, y] = projection([+longitude, +latitude]);\n                  return (\n                    <circle\n                      key={index}\n                      cx={ x }\n                      cy={ y }\n                      r={ size }\n                      fill={color}\n                      className=\"marker\"\n                    />\n                  );\n                })\n              }\n            </g>\n          </svg>\n      </div>\n  )\n}\n\nexport default GeoComponent;\n","export default __webpack_public_path__ + \"static/media/ports-region-1789.3778ed29.svg\";","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport SvgComponent from '../../components/SvgComponent';\nimport VegaComponent from '../../components/VegaComponent';\nimport SigmaComponent from '../../components/SigmaComponent';\nimport GeoComponent from '../../components/GeoComponent';\nimport test from './ports-region-1789.svg'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Commerce multi-échelle dans la région de La Rochelle`}</h1>\n    <p>{`Ce site a vocation à monter progressivement les \"storymaps\" issues du datasprint PORTIC 2021.`}</p>\n    <p>{`Voici un tour d'horizon des modules react préparés pour faciliter le développement :`}</p>\n    <h2>{`Image SVG (avec webpack)`}</h2>\n    <p>{`On intègre une image  SVG depuis le local (elle sera donc packée par webpack) :`}</p>\n    <img src={test} />\n    <h2>{`Image SVG (sans webpack)`}</h2>\n    <p>{`On intègre ici directement une image à partir de son URL en ligne (depuis le dossier `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{`)`}</p>\n    <SvgComponent path=\"/svg/ports-region-1789.svg\" mdxType=\"SvgComponent\" />\n    <h2>{`Visualisation vega`}</h2>\n    <p>{`Les visualisations vega ont besoin d'un fichier csv stocké dans le dossier `}<inlineCode parentName=\"p\">{`public/data`}</inlineCode>{` et d'une spec vega.`}</p>\n    <VegaComponent data=\"sorties_navires_vers_colonies.csv\" spec={{\n      \"mark\": \"rect\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"port_depart\",\n          \"type\": \"nominal\"\n        },\n        \"y\": {\n          \"field\": \"port_destination\",\n          \"type\": \"nominal\"\n        },\n        \"color\": {\n          \"type\": \"quantitative\",\n          \"field\": \"tonnage\",\n          \"aggregate\": \"sum\"\n        }\n      }\n    }} mdxType=\"VegaComponent\" />\n    <h2>{`Réseau avec sigma`}</h2>\n    <p>{`Les visualisations sigma ont besoin d'un fichier gexf stocké dans le dossier `}<inlineCode parentName=\"p\">{`public/data`}</inlineCode>{`.`}</p>\n    <p>{`Paramètres :`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nodeColor`}</inlineCode>{` : attribut pour couleur`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nodeSize`}</inlineCode>{` : attribut pour taille`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`labelDensity`}</inlineCode>{` : densité des labels (float dans `}{`[0, 1]`}{`)`}</li>\n    </ul>\n    <SigmaComponent data=\"toflit_aggregate_1789_only_out.gexf\" nodeColor={`admiralty`} nodeSize={`inside_degree`} labelDensity={0.5} mdxType=\"SigmaComponent\" />\n    <h2>{`Carto avec kepler`}</h2>\n    <h2>{`Carto sans kepler`}</h2>\n    <p>{`Ci-dessous un proto/boilerplate pour rendre du svg + données avec la galaxie d3 + du rendu direct en SVG via react.`}</p>\n    <p>{`Cartographie des destination des bateaux aillant un port d'attache dans la région, par tonnage cumulé (couleur = amirauté) :`}</p>\n    <GeoComponent backgroundFilename=\"cartoweb_france_1789_geojson.geojson\" dataFilename=\"navigo-out-of-ships-from-region.csv\" markerColor=\"pointcall_admiralty\" markerSize=\"tonnage\" mdxType=\"GeoComponent\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Content from '!babel-loader!@mdx-js/loader!./content.mdx';\n\nfunction Home({lang}) {\n  return (\n    <div>\n      <Helmet>\n        <title>{lang === 'fr' ? 'Commerce multi-échelle dans la région de La Rochelle' : 'Multi-scale trade in La Rochelle region'}</title>\n      </Helmet>\n      <Content />\n    </div>\n  )\n}\n\n// <img src={'../../../public/svg/Ports de la région Poitou, Aunis, Saintonge en 1789.svg'} />\nexport default Home;","import Home from './Home';\nexport default Home;\n\n// import Carte from './Ports de la région Poitou, Aunis, Saintonge en 1789.svg'\n// export Carte;","import HeaderNav from './HeaderNav';\n\nexport default HeaderNav;","import React from 'react';\nimport {NavLink as Link} from 'react-router-dom'; \n\nconst HeaderNav = ({\n  routes,\n  lang,\n  onLangChange,\n}) => {\n  return (\n    <nav>\n      <ul>\n          <li className=\"navitem-container\">\n                  <Link to={'/'}>\n                    {lang === 'fr' ? 'Accueil': 'Home'}\n                  </Link>\n          </li>\n          {\n            routes.map(({titles, routes: inputRoute}, index) => {\n              const route = `/page/${lang}/${inputRoute[lang]}`\n              return (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {titles[lang]}\n                  </Link>\n                </li>\n              )\n              })\n          }\n          <li className=\"lang-toggle\">\n            <button \n              className={lang === 'fr' ? 'is-active': ''}\n              onClick={() => onLangChange('fr')}\n            >fr</button>\n            <button\n              className={lang === 'en' ? 'is-active': ''}\n              onClick={() => onLangChange('en')}\n            >en</button>\n          </li>\n        </ul>\n    </nav>\n  )\n}\n\nexport default HeaderNav;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import {Suspense} from 'react';\nimport {Helmet} from \"react-helmet\";\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  title,\n}) => {\n  return (\n    <div className=\"PlainPage\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <Suspense fallback={<div>Chargement</div>}>\n        <Content />\n      </Suspense>\n  </div>\n  )\n}\n\nexport default PlainPage;","const summary = [\n  {\n    routes: {\n      fr: 'partie-1',\n      en: 'part-1'\n    },\n    titles: {\n      fr: 'Partie 1 - Le déclin de la région de La Rochelle suite à la perte du Canada',\n      en: 'Partie 1 - The decline of La Rochelle region after Canada\\'s loss'\n    },\n    contents: {\n      fr: 'fr/partie-1.mdx',\n      en: 'en/part-1.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'partie-2',\n      en: 'part-2'\n    },\n    titles: {\n      fr: 'Partie 2 - Une forte spécialisation portuaire: le cas de la traite négrière, du commerce du sel et de l\\'eau-de-vie',\n      en: 'Partie 2 - A strong portual specialization'\n    },\n    contents: {\n      fr: 'fr/partie-2-intro.mdx',\n      en: 'en/part-2-intro.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'partie-2-1',\n      en: 'part-2-1'\n    },\n    titles: {\n      fr: 'Partie 2.1 - La Rochelle et le commerce triangulaire',\n      en: 'Partie 2.1 - La Rochelle and triangular trade'\n    },\n    contents: {\n      fr: 'fr/partie-2-1.mdx',\n      en: 'en/part-2-1.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'partie-2-2',\n      en: 'part-2-2'\n    },\n    titles: {\n      fr: 'Partie 2.2 - Le commerce de l’eau-de-vie',\n      en: 'Partie 2.2 - Eau-de-vie trade'\n    },\n    contents: {\n      fr: 'fr/partie-2-2.mdx',\n      en: 'en/part-2-2.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'partie-2-3',\n      en: 'part-2-3'\n    },\n    titles: {\n      fr: 'Partie 2.3 - Marennes et le commerce du sel',\n      en: 'Partie 2.3 - Marennes and salt trade'\n    },\n    contents: {\n      fr: 'fr/partie-2-3.mdx',\n      en: 'en/part-2-3.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'partie-3',\n      en: 'part-3'\n    },\n    titles: {\n      fr: 'Partie 3 - La Rochelle, port dominant mais pas structurant',\n      en: 'Part 3 - La Rochelle port, dominating but not structuring'\n    },\n    contents: {\n      fr: 'fr/partie-3.mdx',\n      en: 'en/part-3.mdx'\n    }\n  },\n  {\n    routes: {\n      fr: 'a-propos',\n      en: 'about'\n    },\n    titles: {\n      fr: 'À propos',\n      en: 'About'\n    },\n    contents: {\n      fr: 'fr/a-propos.mdx',\n      en: 'en/about.mdx'\n    }\n  },\n]\n\n\nexport default summary;","\n/* import external libraries */\nimport React, {useState} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { LanguageContext } from './helpers/contexts';\n\n/* import pages */\nimport Home from './pages/Home';\n// import About from './pages/About';\n// import Topics from './pages/Topics';\n\n/* import components */\nimport HeaderNav from './components/HeaderNav';\nimport PlainPage from './pages/PlainPage';\n\n/* import other assets */\nimport './App.css';\n\nimport routes from './summary'\n\nconst LANGUAGES = ['fr', 'en'];\n\n\nfunction App() {\n\n  const history = useHistory();\n  const [lang, setLang] = useState('fr');\n  const onLangChange = (ln) => {\n    if (ln !== lang) {\n      const otherLang = lang;\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.routes[otherLang] === pathOtherLang;\n      });\n      setLang(ln);\n      if (routeItem) {\n        history.push(`/page/${ln}/${routeItem.routes[ln]}`);\n\n      }\n    }\n    \n  }\n  const renderRoute = ({\n    Content, \n    ThatComponent = PlainPage,\n    title,\n  }) => (\n    <>\n      <ThatComponent\n        {\n          ...{\n            Content,\n            title\n          }\n        }\n      />\n    </>\n\n  );\n  return (\n    <LanguageContext.Provider value={{lang}}>\n      <div id=\"wrapper\">\n        <header>\n          <HeaderNav {...{lang, onLangChange, routes}} />\n        </header>\n        <main>\n          <Switch>\n          {\n            LANGUAGES.map(lang => {\n              return routes.map(({\n                titles,\n                routes: inputRoute, \n                contents,\n                Component: ThatComponent\n              }, index) => {\n                const route = `/page/${lang}/${inputRoute[lang]}`\n                const title = titles[lang];\n                const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents[lang]}`))\n                return (\n                  <Route key={index} path={route}>\n                    {renderRoute({Content, ThatComponent, title})}\n                  </Route>\n                )\n              } )\n            })\n          }\n          <Route path=\"/\">\n            <Home lang={lang} />\n          </Route>\n          <Redirect to={`/`} />\n\n            {/*\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/topics/:axe?\">\n              <Topics />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            */}\n          </Switch>\n        </main>\n        <footer></footer>\n      </div>\n    </LanguageContext.Provider>\n  );\n}\n\n\nexport default function Wrapper() {\n  return (\n    <Router>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}