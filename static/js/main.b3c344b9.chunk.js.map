{"version":3,"sources":["visualizations/PrincipalVisualizationPart3/ExtraversionObject.js","visualizations/PrincipalVisualizationPart3/renderObjectsFunctions.js","components/NetworkGraphChart/reducers.js","components/NetworkGraphChart/GraphContainer.js","contents/fr/footer.mdx","helpers/misc.js","components/TriangleChart/PortGroup.js","components/TriangleChart/TriangleChart.js","colorPalettes.js","contents/fr/introduction.mdx","contents/en/introduction.mdx","contents/fr/partie-1.mdx","contents/en/part-1.mdx","contents/fr/partie-2.mdx","contents/en/part-2-intro.mdx","contents/fr/partie-3.mdx","contents/en/part-3.mdx","contents/fr/a-propos.mdx","contents/en/about.mdx","contents/fr/references.mdx","contents/en/references.mdx","contents/en/tests.mdx","components/SvgChart/SvgChart.js","components/GeographicMapChart/index.js","components/NetworkGraphChart/index.js","components/DataProvider/index.js","components/TriangleChart/index.js","components/DataProvider/DataProvider.js","contents/fr/tests.mdx","components/LineChart/LineChart.js","components/LineChart/index.js","components/BoatsIllustration/BoatsIllustration.js","components/BoatsIllustration/index.js","components/Caller/Caller.js","components/Caller/index.js","components/GeographicMapChart/ChoroplethLayer.js","components/GeographicMapChart/PointsLayer.js","components/GeographicMapChart/FlowsLayer.js","components/GeographicMapChart/CustomObjectLayer.js","components/GeographicMapChart/Button.js","components/GeographicMapChart/Input.js","components/GeographicMapChart/Legend.js","components/GeographicMapChart/GeographicMapChart.js","components/BarChart/HorizontalBarChart.js","components/BarChart/VerticalBarChart.js","components/BarChart/BarChart.js","components/BarChart/index.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/CitationWidget/mla-fr.mdx","components/CitationWidget/iso-fr.mdx","components/CitationWidget/apa-fr.mdx","components/CitationWidget/CitationWidget.js","components/CitationWidget/index.js","visualizations/Test.js","components/DeclineChart/LongitudinalTradeChart.js","components/DeclineChart/ProductsDistributionChart.js","components/DeclineChart/index.js","components/DeclineChart/DeclineChart.js","visualizations/PrincipalVisualizationPart1.js","components/CircularAlluvialChart/animatedPrimities.js","components/CircularAlluvialChart/CircularAlluvialChart.js","components/CircularAlluvialChart/utils.js","components/SliderRange/SliderRange.js","components/SliderRange/index.js","components/RadarPlot/AxisObject.js","components/RadarPlot/VisObject.js","components/RadarPlot/index.js","components/RadarPlot/RadarPlot.js","visualizations/PrincipalVisualizationPart2/RadarWrapper.js","visualizations/PrincipalVisualizationPart2/index.js","visualizations/PrincipalVisualizationPart2/PrincipalVisualizationPart2.js","visualizations/PrincipalVisualizationPart3/Step2.js","visualizations/PrincipalVisualizationPart3/index.js","visualizations/PrincipalVisualizationPart3/PrincipalVisualizationPart3.js","visualizations/IntroBureaux/IntroBureaux.js","visualizations/IntroBureaux/index.js","visualizations/HomeportFlows/HomeportFlows.js","components/TreemapChart/TreemapChart.js","visualizations/index.js","components/VisualizationController/VisualizationController.js","components/VisualizationController/index.js","components/VisualizationFocus/VisualizationFocus.js","components/VisualizationFocus/index.js","pages/ScrollyPage/ScrollyPage.js","pages/ScrollyPage/index.js","summary.js","pages/Home/BoatsContainer.js","pages/Home/HomeSummary.js","pages/Home/Home.js","pages/Home/index.js","pages/Atlas/Atlas.js","pages/Atlas/index.js","pages/StandaloneVisualization/index.js","pages/StandaloneVisualization/StandaloneVisualization.js","pages/PlainPage/index.js","pages/PlainPage/PlainPage.js","components/HeaderNav/HeaderNav.js","components/HeaderNav/index.js","components/Loader/Loader.js","components/Footer/index.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js","helpers/contexts.js","helpers/hooks.js","contents/fr/metadata.js","contents/en/metadata.js"],"names":["ExtraversionObject","navigoValues","metric1","metric2","toflitPct","transformGroup","inputCircleRadius","circleRadius","inputWidth","width","inputHeight","height","name","legendMode","isActive","isMinified","onClick","fixSvgDimension","useState","isInited","setIsInited","useEffect","setTimeout","ReactTooltip","rebuild","leftPath","rightPath","transform","useSpring","to","immediate","maxTriangleHeight","maxArea","area1","area2","leftTriangleHeight","Math","sqrt","rightTriangleHeight","start","end","PI","partialCircle","map","command","join","labelFontSize","parseInt","g","className","cx","undefined","d","stroke","colorsPalettes","generic","accent2","strokeWidth","fill","data-for","data-tip","toFixed","ui","colorAccentBackground","max","font-size","textAnchor","x","y","x1","y1","x2","y2","markerEnd","Step3Object","datum","projection","projectionTemplate","longitude","latitude","totalTonnage","parseFloat","cumulated_tonnage_out_region","cumulated_tonnage_in_region","type_of_object","navigoMetric1","navigoMetric2","inPercentage","totalValue","cumulated_exports_value_from_region","cumulated_exports_value_from_ext","noOverlapTransform","includes","isNaN","Step3Objects","data","customsOffices","ports","selectedBureau","setSelectedBureau","handleClick","visiblePorts","useMemo","filter","customs_office","portsSpaceStartY","portsSpaceHeight","portsSpaceWidth","portRowHeight","length","sort","a","b","yA","port","portIndex","initialCircleRadius","objectX","objectY","cy","r","style","dark","index","SmallMultiples","bureaux","unshift","margin","multiplesY","columnWidth","xObjectsStart","opacity","position","left","bottom","custom_office","id","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","orient","renderTriangles","atlasMode","TriangleChart","totalWidth","rowHeight","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","GraphContainer","graph","nodeColorVariable","nodeColor","nodeSizeVariable","nodeSize","labelDensity","nodeLabel","onCameraUpdate","cameraPosition","updateTimestamp","ratio","sizes","res","forEachNode","_node","attributes","push","size","sizeExtent","extent","extents","min","field","values","attr","uniq","palette","colors","generatePalette","i","forEach","option","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","usePrevious","previousNodeSize","previousNodeLabel","previousLabelDensity","nodeReducer","nodeSizeFactor","nodeSizeScale","key","renderedNode","color","v","createNodeReducer","edgeReducer","dontColorEdges","el1","el2","get","renderedEdge","smallerNode","Color","lighten","rgb","string","createEdgeReducer","container","useRef","renderer","setRenderer","getCamera","animate","needToRefresh","settings","labelGrid","cell","displayedLabels","Set","refresh","setContainer","useCallback","node","kill","newRenderer","Renderer","labelFont","camera","setState","getState","disable","on","state","current","ref","minHeight","minWidth","NetworkGraphChart","gexfString","spatialize","inputCameraPosition","angle","title","headerRef","headerHeight","getBoundingClientRect","setCameraPosition","find","prop","gexf","parse","Graph","forceAtlas2","inferSettings","assign","iterations","flex","cam","readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","level","children","frontMatter","palettes","metadata","fr","metadataFr","en","metadataEn","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","buildPageTitle","lang","currentMetadata","trimText","str","limit","words","split","output","slice","cartesian2Polar","distance","radians","atan2","polarToCartesian","theta","cos","sin","count","accent1","iwanthue","colorSpace","seed","clustering","num","abs","formatNumber","n","reverse","reduce","digit","result","PortGroup","numberOfColumns","scaleX","scaleY","legendWidth","totalHeight","margins","fontSize","triangleWidth","nb_pointcalls_out","triangleHeight","mean_tonnage","xTransform","yTransform","markerRadius","staticTransform","cellCenterX","textStartY","triangleStartY","legendTextWidth","labelBgWidth","line","strokeDasharray","circle","marker-start","xmlns","transformOrigin","inputMargins","right","offset","stopColor","stop-opacity","xa","tonnageClasses","franceAlone","portsTreemaps","href","target","rel","step","highlight","minTonnage","SvgChart","GeographicMapChart","DataProvider","dataFilename","setData","loadingData","setLoadingData","dataURL","process","then","newData","extension","pop","csvParse","catch","err","backgroundData","visData","layers","type","renderObjects","colorPalettes","provinces","admiralties","label","backgroundFilename","markerColor","markerSize","showLabels","LineChart","initialWidth","initialHeight","tooltip","annotations","headersHeight","setHeadersHeight","setLegendWidth","legendRef","newHeadersHeight","newLegendWidth","colorPalette","top","yTickFormat","tickFormat","yTickSpan","tickSpan","initialYDomain","fillGaps","xTickFormat","xTickSpan","initialXDomain","colorModalities","colorValues","modality","xDomain","yDomain","xScale","nice","yScale","groups","Object","entries","groupBy","xAxisValues","axisPropsFromTickScale","yAxisValues","marginLeft","value","valueIndex","axis","annotation","annotationIndex","labelPosition","thatHeight","thatY1","thatY2","points","patternUnits","thatX1","thatX2","groupIndex","groupName","items","item","itemIndex","next","consecutive","hasNext","genreIndex","genre","background","PASS_DURATION","Hull","bottomRightX","bottomLeftX","Sail","sailSpeed","randomFactor","random","minRightX","maxLeftX","maxRightX","step1","step2","loop","from","config","duration","polygon","Matt","secondWidth","Boat","hullHeightRatio","setHullHeightRatio","mattNumber","setMattNumber","matts","heightRatio","nOfMatts","round","newHullHeightRatio","boatWidth","matt","mattIndex","displace","Bird","boatHeight","containerHeight","dimension","moveSteps","steps","scale","MovingBoat","containerWidth","rightToLeft","startAt","birds","numberOfBirds","BoatsIllustration","useReducer","action","boat","payload","genId","createdAt","Date","getTime","createBoat","boats","updateBoats","timeout","clearTimeout","useInterval","now","Caller","visualizationId","useContext","VisualizationControlContext","activeVisualization","onBlockClick","onRegisterVisualization","onUnregisterVisualization","e","GeoPart","initialD","project","layer","currentD","animationProps","boundsAbs","geoPath","bounds","xMin","xMax","yMin","yMax","outOfBounds","path","properties","shortname","ChoroplethLayer","reverseColors","console","info","features","generatedPalette","geometry","PointGroup","onGroupMouseEnter","onGroupMouseLeave","displayLabel","area","rawSize","labelSize","zIndex","onMouseEnter","onMouseMove","onMouseLeave","displayMetric","labelsColor","StackedLabelGroup","thatIndex","stackedRowHeight","transformLabel","window","innerWidth","labelY","PointsLayer","hoveredIndex","setHoveredIndex","visibleMarkers","coordsMap","mark","grouped","sizeCoef","custom","areaRange","sizeScale","labelSizeScale","stackedLabelsTop","maxLabelFontSize","innerHeight","stackLabels","enter","leave","FlowGroup","hovered","inputXDep","xDep","inputYDep","yDep","inputXDest","xDest","inputYDest","yDest","inputStrokeWidth","actualXDep","actualYDep","actualXDest","actualYDest","arrowLength","arrowPath","FlowsLayer","markerData","strokeWidthScale","flow","arrowSizeScale","copy","arrowSize","latitude_dep","longitude_dep","latitude_dest","longitude_dest","hideOverflowingFlows","depLabelPosition","destLabelPosition","depLabelTextAnchor","depLabelX","depLabelY","destLabelTextAnchor","destLabelX","destLabelY","labels","newLabels","depId","fields","largerStrokeWidth","flows","destId","actualX","j","label1","label2","minAx","minAy","maxAx","maxAy","minBx","minBy","maxBx","aAboveB","aBelowB","distanceY","hoverIds","setHoverIds","thatLabel","isVisible","hoveredId","CustomObjectLayer","renderObject","Button","onMouseDown","isMouseDown","interval","log","setInterval","clearInterval","onMouseUp","Input","inputValue","onBlur","setValue","onChange","Legend","layerFilter","l","hasSize","hasColors","modalityIndex","initialProjectionTemplate","inputProjectionConfig","projectionConfig","debug","withLegend","legendLayerFilter","setScale","rotation","setRotation","translationX","setTranslationX","translationY","setTranslationY","centerX","setCenterX","centerY","setCenterY","setProjectionTemplate","defaultProjectionConfig","rotationDegree","geoEqualEarth","center","translate","placeHolder","val","layerIndex","HorizontalBarChart","orientation","layout","Tooltip","yField","sortY","fillXGaps","xField","sortX","sortYField","ascending","sortYAscending","sortYType","autoSort","yAutoSort","sortXField","sortXAscending","sortXType","xValues","vizWidth","bandsNb","scaleBand","xExtent","sum","bandWidth","yStackScale","multiplier","stackDisplaceY","thatX","thatY","thatColor","VerticalBarChart","fixedRowHeight","formatLabel","vizHeight","indexOf","bandHeight","xStackScale","svgHeight","finalHeight","yModality","stackDisplaceX","thatWidth","BarChart","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","all","keys","module","exports","CONTENTS","FrMla","FrIso690","FrApa","CitationWidget","blockquoteRef","isCollapsed","setIsCollapsed","currentStyle","setCurrentStyle","Contents","Test","datasets","datasetName","JSON","stringify","prettifyValue","inted","finalStr","LongitudinalTradeChart","inputData","absoluteField","shareField","herfindhalField","wholeHeight","axisLeftTitle","axisRightTitle","startYear","endYear","barTooltipFn","cityName","highlightYears","colorScaleMessages","year","footerRef","setHeight","newHeight","offsetHeight","yearsExtent","yearsEnumerated","xBand","padding","herfindhalColorScale","scalePow","yearTicks","yAbsoluteScale","yShareScale","rightYAxisValues","leftYAxisValue","maximum","minimum","marginRight","bandwidth","aStartYear","aEndYear","replace","data-effect","data-html","data-class","data-place","initialEndYear","row","ProductsDistributionChart","allData","tradeData","partTreshold","barWidth","years","productTooltipFn","compareFrom","titleRef","svgRef","yearsRef","Array","hoveredProduct","setHoveredProduct","yearLabelHeight","finalData","lastYear","lastYearData","lastYearTotalValue","partAcc","dataTillTreshold","sortBy","topProducts","product","aggregatedMiscProducts","dict","thisData","thisTotalValue","thisYearData","links","nextYear","nextData","thisYearTotalValue","nextYearTotalValue","thisYearOffset","datumIndex","otherHeight","otherOffset","thisHeight","otherDatum","nextYearScaleValue","height1","height2","svgOffset","parentNode","offsetTop","yearLinks","ref1","ref2","isHighlighted","yearIndex","her","labelScale","element","maxWidth","backgroundColor","DeclineChart","productTradePartThreshold","rows","messages","franceOverviewTitle","tradeEvolutionTitle","top90PctTitle","partInPct","absoluteValue","herfindalLegendTitle","herfindal0","herfindal1","barTooltip","pct","city","herfindal","productTooltip","sevenYearsWar","austriaWar","usIndependance","laRochelleDiaspora","totalRows","renderRow","rowFlex","rowIndex","region","comparison","rowId","PrincipalVisualizationPart1","G","inputProps","Text","text","Line","Circle","Rect","rect","Path","colorSchemes","colorScheme1","colorScheme2","colorScheme3","CircularAlluvialChart","sumBy","filters","centerHorizontalLabels","displaceHorizontalLabels","tooltips","align","highlightedFlow","setHighlightedFlow","highlightedFilter","setHighlightedFilter","spec","stepsSpec","_id","stepIndex","stepData","valueAbs","actualValue","valuePart","sortAscending","nodes","displaceAbs","displacePart","newNodes","localDisplaceAbs","localDisplacePart","newNode","newFlow","relativeDisplaceAbs","relativeDisplacePart","nextStep","nextKey","nodeIndex","newFlows","flowIndex","nextVal","nextStepGroup","nextFlow","flow2","nextPosition","prepareAlluvialData","filtersTotal","colorScales","modalitiesMap","cur","fieldIndex","counter","smallestDimension","BAR_SIZE","BAR_WIDTH","HORIZONTAL_MARGIN","textScale","secondCircleRadius","thirdCircleRadius","HORIZONTAL_DISPLACE","VERTICAL_BAR_SIZE","stepScales","0","direction","displaceX","displaceY","displaceText","1","2","3","4","5","highlightedNode","s","highlightedNodeTotal","f","legendX1","legendX2","legendTopYInternal","legendTopYExternal","legendBottomYInternal","legendBottomYExternal","tooltipContent","fontWeight","fontStyle","initialDisplaceY","nodesSizeScale","displaceLabels","linkIndex","nextStepScales","nextNodesSizeScale","x3","y3","y4","x4","controlPoint1AX","controlPoint1AY","controlPoint1BX","controlPoint1BY","controlPoint2AX","controlPoint2AY","controlPoint2BX","controlPoint2BY","flow_type","partner","tContent","trim","nodeHeight","initialY","nodeWidth","actualHeight","labelHighlightPart","isFilteredIn","textRotate","initialLabelX","labelX","labelMain","labelSecondary","nodeHasHighlights","nodeIsHighlighted","flowX","flowY","flowWidth","flowHeight","Range","createSliderWithTooltip","Slider","SliderRange","allowCross","AxisObject","MARGIN","axisIndex","axisRankScale","rawX1","rawY1","rawX2","rawY2","labelXDisplace","labelYDisplace","foreignObject","inputX","inputY","inputR","VisObject","axisIndexMap","radiusScale","xRaw","yRaw","joinedPoints","tooltipValues","sumOfParts","portionA","portion","fillOpacity","RadarPlot","wholeSize","aIndex","visCenter","visSize","meta","normalizeRadarValues","datas","destCaptions","maxValue","maxBy","hasOwnProperty","dkey","RadarWrapper","globalWidth","minified","navigoAgregation","maxTonnage","selectedBureaux","setSelectedBureaux","aggregationMethod","setAggregationMethod","tonnageFilterValues","setTonnageFilterValues","datasetMaximumTonnage","setDatasetMaximumTonnage","destination_radar","ferme_bureau","tonnage","bureauxList","uniqBy","filteredData","bureauxToKeep","cleanBureaux","radarData","bureauName","relevantData","preparedData","_","dest","rObj","prepareTravelData","bureau","newSelectedBureaux","has","delete","add","PrincipalVisualizationPart2","showOnlyToflit","screenshotMode","sumToflitBy","alluvialFilters","toflit18titles","Step2","paddingLeft","metrics_type","PrincipalVisualizationPart3","currentMapTemplate","setCurrentMapTemplate","gradientTransform","colorBackgroundBlue","customs_region","BureauBackground","radius","BureauLabel","labelOnRight","IntroBureaux","dimensions","renderBureaux","HomeportFlows","hotFixedData","port_dest","port_dest_category","formatNestResults","input","isArray","TreemapChart","fieldsHierarchy","leaf","labelField","countField","root","nest","hierarchy","treemap","tile","treemapBinary","leaves","x0","y0","rectWidth","rectHeight","labelText","VisualizationContainer","inputDimensions","DatasetsContext","relevantDatasets","viz","visualizationsList","datasetsIds","order","value_rel_per_direction","entity","nb_pointcalls","country","borderBottom","omit","homeport","category_2","thatPalette","origin","VisualizationController","setDimensions","visProps","onResize","contentRect","measureRef","VisualizationFocus","howDone","howRead","visualization","onClose","copyClicked","setCopyClicked","inputRef","focus","copyLink","linkCopied","onKeyUp","keyCode","stopPropagation","url","homepage","visualizationsMap","visualizations","ScrollyPage","ContentSync","sectionRef","focusOnViz","setFocusOnViz","visualizationIsFullScreen","setVisualizationIsFullScreen","isLoading","setIsLoading","setActiveVisualization","newState","setVisualizations","scrollY","useScrollYPosition","scrollTo","found","DISPLACE_Y","visualizationEntries","sectionDims","visY","Provider","behavior","params","finalParams","newVis","thatId","Helmet","summary","routes","titles","shortTitles","contents","contentsProcessed","Part1Fr","Part1En","Component","routeGroup","Part2IntroFr","Part2IntroEn","Part3Fr","Part3En","ReferencesFr","ReferencesEn","AboutFr","AboutEn","TestsFr","TestsEn","hide","BoatsContainer","HomeSummary","intro","atlas","chapter","route","navigator","userAgent","Home","match","introRef","inVis","setInVis","titleHTML","subtitle","newActiveVisualization","firstOneY","Infinity","dangerouslySetInnerHTML","__html","Atlas","history","useHistory","shownVisualization","visualizationIndex","pathname","src","alt","StandaloneVisualization","PlainPage","Content","fallback","colorText","colorBackground","HeaderNav","onLangChange","drawerIsOpen","setDrawerIsOpen","location","useLocation","pageType","paramsLang","liveScrollY","useDebounce","pageColorScale","screenHeight","fontColor","exact","inputRoute","Loader","percentsLoaded","Footer","LANGUAGES","App","setDatasets","loadingFraction","setLoadingFraction","datasetsNames","datasetIndex","reject","axios","onDownloadProgress","progressEvent","status","loaded","total","globalFraction","loadedData","tsvParse","error","newDatasets","renderRoute","ThatComponent","ln","otherLang","pathOtherLang","routeItem","React","lazy","component","Fragment","BASE_NAME","Wrapper","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","StrictMode","render","createContext","callback","delay","savedCallback","debouncedValue","setDebouncedValue","handler"],"mappings":"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","file":"static/js/main.b3c344b9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport cx from 'classnames';\nimport colorsPalettes from '../../colorPalettes';\n\nimport partialCircle from 'svg-partial-circle';\nimport { max } from 'd3';\nimport ReactTooltip from 'react-tooltip';\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\n/**\n * Renders custom viz object (triangles + donuts)\n * @param {array<number>} navigoValues\n * @param {number} toflitPct - pct of exports of locally produced products\n * @param {string} transformGroup - css transform\n * @param {number} circleRadius\n * @param {number} width\n * @param {number} height\n * @param {string} name\n * @param {boolean} legendMode\n * @param {boolean} isActive\n * @param {boolean} isMinified\n * @param {function} onClick\n * @returns {React.ReactElement} - React component\n */\nconst ExtraversionObject = ({\n  navigoValues: [metric1, metric2],\n  toflitPct,\n  transformGroup,\n  circleRadius: inputCircleRadius,\n  width: inputWidth,\n  height: inputHeight,\n  name,\n  legendMode,\n  isActive,\n  isMinified,\n  onClick,\n}) => {\n  const circleRadius = fixSvgDimension(inputCircleRadius);\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, []);\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  const { transform } = useSpring({\n    to: {\n      transform: transformGroup\n    },\n    immediate: !isInited\n  });\n\n\n  const maxTriangleHeight = (circleRadius) * 1.4;\n  // dimensionning triangles based on their area (and not triangle height)\n  // Area = (height * base) / 2;\n  const maxArea = maxTriangleHeight * (maxTriangleHeight) / 2;\n  const area1 = metric1 * maxArea;\n  const area2 = metric2 * maxArea;\n  const leftTriangleHeight = Math.sqrt(area1 * metric1);\n  const rightTriangleHeight = Math.sqrt(area2 * metric2);\n\n  let start = null\n  let end = null\n  let leftPath;\n  let rightPath;\n  if (toflitPct) {\n    // let transformGeo = {`translate(${x},${y})`} // ce serzit param qui se mmodifie en attribue de positionnement réparti en bas à droite si co sans coords\n\n    // calcul des angles de départ et d'arrivée de l'arc de cercle, en fonction des données\n    start = Math.PI / 2 + (toflitPct - 50) / 100 * Math.PI\n    end = Math.PI * 3 / 2 - (toflitPct - 50) / 100 * Math.PI\n\n    leftPath = partialCircle(\n      0, 0,         // center X and Y\n      circleRadius,              // radius\n      start,          // start angle in radians --> Math.PI / 4\n      end             // end angle in radians --> Math.PI * 7 / 4\n    )\n      .map((command) => command.join(' '))\n      .join(' ')\n\n    rightPath = partialCircle(\n      0, 0,             // center X and Y\n      circleRadius,                  // radius\n      start,              // start angle in radians --> Math.PI / 4\n      end - 2 * Math.PI   // end angle in radians --> Math.PI * 7 / 4\n    )\n      .map((command) => command.join(' '))\n      .join(' ')\n  }\n\n  let labelFontSize = parseInt(height * 0.013);\n  labelFontSize = labelFontSize > 8 ? labelFontSize : 8;\n  return (\n    <animated.g\n      className={cx('ExtraversionObject', { 'is-active': isActive, 'is-minified': isMinified })}\n      // transform={noOverlapTransform}\n      transform={transform}\n      onClick={() => typeof onClick === 'function' ? onClick(name) : undefined}\n    // { datum.longitude === 0 ? x=1 : null }\n    >\n\n      <>\n        {\n          toflitPct && leftPath != null ?\n            <>\n\n              <path\n                d={`${leftPath}\n                  `}\n                stroke={legendMode ? 'darkgrey' : colorsPalettes.generic.accent2}\n                strokeWidth={width * 0.005} // à ajuster en fonction de la largeur de l'écran\n                fill=\"transparent\"\n                data-for=\"geo-tooltip\"\n                data-tip={`${(100 - toflitPct ).toFixed(1)}% de valeur d'exports de produits fabriqués hors de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n              />\n\n              <path\n                d={`${rightPath}\n                  `}\n                stroke={legendMode ? 'grey' : colorsPalettes.ui.colorAccentBackground}\n                strokeWidth={width * 0.005} // à ajuster en fonction de la largeur de l'écran\n                fill=\"transparent\"\n                data-for=\"geo-tooltip\"\n                data-tip={`${(toflitPct).toFixed(1)}% de valeur d'exports de produits fabriqués dans la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n              />\n            </>\n            :\n            null\n        }\n        <path className='left-triangle'\n          fill={legendMode ? 'darkgrey' : colorsPalettes.generic.accent2}\n          d={`M ${0} ${-leftTriangleHeight / 2}\n            V ${leftTriangleHeight / 2}\n            L ${-leftTriangleHeight} ${0}\n            Z\n                `}\n                data-for=\"geo-tooltip\"\n                data-tip={`${(metric1 * 100 ).toFixed(1)}% du tonnage cumulé des voyages réalisés vers l'extérieur de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n        />\n\n        <path\n          className='right-triangle'\n          fill={legendMode ? 'grey' : colorsPalettes.ui.colorAccentBackground}\n          d={`M ${0} ${-rightTriangleHeight / 2}\n            L ${rightTriangleHeight} ${0}\n            L ${0} ${rightTriangleHeight / 2}\n            Z\n            `}\n            data-for=\"geo-tooltip\"\n            data-tip={`${(metric2 * 100 ).toFixed(1)}% du tonnage cumulé des voyages réalisés vers l'intérieur de la direction ${typeof onClick === 'function' ? '(cliquer pour voir le détail des ports)' : ''}`}\n        />\n        <g\n          transform={`translate(${parseInt(0)}, ${toflitPct ? parseInt(circleRadius) + 15 : max([leftTriangleHeight, rightTriangleHeight]) / 2 + 10})`}\n        >\n          <text\n            className='object-label'\n            font-size={labelFontSize}\n            textAnchor=\"middle\"\n          >\n            {name}\n          </text>\n        </g>\n      </>\n      {\n        legendMode ?\n          <g className=\"legend-container\">\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={-circleRadius * 3}\n              y={-circleRadius * 1.7}\n              className=\"top left\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des exports de produits fabriqués hors de la direction\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={-circleRadius * .95}\n              y1={-circleRadius * 1.5}\n              x2={-circleRadius * .5}\n              y2={-circleRadius * 1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={circleRadius * 1.2}\n              y={-circleRadius * 1.7}\n              className=\"top right\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des exports de produits fabriqués dans la direction\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={circleRadius * 1.15}\n              y1={-circleRadius * 1.5}\n              x2={circleRadius * .5}\n              y2={-circleRadius * 1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={-circleRadius * 3}\n              y={0}\n              className=\"bottom left\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des voyages hors direction (tonnage c.)\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={-circleRadius * 1.8}\n              y1={circleRadius * .2}\n              x2={-circleRadius * .3}\n              y2={circleRadius * .1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n            <foreignObject\n              width={circleRadius * 2}\n              height={circleRadius * 2}\n              x={circleRadius * 1.2}\n              y={0}\n              className=\"bottom right\"\n            >\n              <div className=\"label-wrapper\">\n                <span>\n                  Part des voyages dans la direction (tonnage c.)\n                </span>\n              </div>\n            </foreignObject>\n            <line\n              x1={circleRadius * 2}\n              y1={circleRadius * .2}\n              x2={circleRadius * .3}\n              y2={circleRadius * .1}\n              markerEnd=\"url(#triangle-end)\"\n            />\n\n          </g>\n          : null\n      }\n    </animated.g>);\n}\n\nexport default ExtraversionObject;","/*\nDOCUMENTATION : sommaires des fonctions\n\n- renderLabel (renderObject)\npositionner geographiquement des labels\n\n- renderStep3Object (renderObject)\ncréation d'un double triangle et d'un cercle autour (deux courbes de bézier), positionné géographiquement\n(objet associé à un bureau de ferme)\n\n- fonction renderStep3SmallMultiples (renderObjects)\ncréation des objets double triangle et cercles pour les small multiples de la viz 3.3, positionnés en bas à droite du SVG\n+ un objet de légende\n\n- renderTriangles (renderObjects)\ncréation des triangles pour la viz 3.1, reliés par une courbe pointillée à des points positionnés géographiquement\n+ un triangle de légende\n\n@TODO : compléter la fonction step3Object (ou créer une nouvelle fonction), pour gérer l'apparition des doubles triangles pour chaque port\n-  cette fonctionnalité est déjà prévue dans la fonction renderStep3Object (dans la boucle   if (datum.type_of_object === \"port\") { ...}) mais en l'état les objets ports sont positionnés géographiquement\n- il faudrait adapter pour positionner les objets ports en colonne, sur la gauche du SVG, et qu'ils aient par défaut une opacité à 0% sauf au hover de l'objet bureau des fermes correspondant => apparition\n\n*/\nimport { useMemo, useState } from 'react';\n\nimport colorsPalettes from '../../colorPalettes';\n\nimport ExtraversionObject from './ExtraversionObject';\n\nimport TriangleChart from '../../components/TriangleChart/TriangleChart';\nimport { fixSvgDimension } from '../../helpers/misc';\n\nexport function Label(datum, projection, { width }) { // à terme on pourrait mettre un objet \n\n  const [x, y] = projection([+datum.longitude, +datum.latitude])\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text size={width * 0.05}>{datum.label}</text>\n    </g>);\n}\n\n/**\n * Render an object in viz 3.3\n * @param {object} datum\n * @param {function} projection\n * @param {number} width\n * @param {number} height\n * @param {string} projectionTemplate\n * @param {boolean} isActive\n * @param {boolean} isMinified\n * @param {function} onClick\n * @returns {React.ReactElement} - React component\n */\nfunction Step3Object({\n  datum,\n  projection,\n  width: inputWidth,\n  height: inputHeight,\n  projectionTemplate,\n  isActive,\n  isMinified,\n  onClick\n}) { // à priori plus besoin de datum et de width qui sont déjà passés au composant CustomObjectLayer\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n\n  let circleRadius = width * 0.05;\n  const totalTonnage = parseFloat(datum.cumulated_tonnage_out_region) + parseFloat(datum.cumulated_tonnage_in_region)\n\n  if (datum.type_of_object === \"port\") {\n    // définition des coefficients de taille des triangles en 3 classes distinctes (pour l'instant la définition des classes est expérimentale)\n    // se gérerait bien avec un switch\n    if (totalTonnage < 1000) { // * 1000\n      circleRadius = width * 0.025\n    }\n    else {\n      if (totalTonnage > 5000) {\n        circleRadius = width * 0.075\n      }\n    }\n  }\n\n  const navigoMetric1 = parseFloat(datum.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n  const navigoMetric2 = parseFloat(datum.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n  let inPercentage = 0;\n  if (datum.type_of_object === \"customs_office\") {\n    const totalValue = parseFloat(datum.cumulated_exports_value_from_region) + parseFloat(datum.cumulated_exports_value_from_ext)\n    inPercentage = parseFloat(datum.cumulated_exports_value_from_region) / totalValue * 100\n    inPercentage = inPercentage === 100 ? 99.99 : inPercentage;\n  }\n\n  // handle overlap \n  let noOverlapTransform = `translate(${x},${y})` // mettre entre accolades ??\n  if (projectionTemplate.includes('Poitou')) {\n    if (datum.name === 'Tonnay-Charente') {\n      noOverlapTransform = `translate(${x + width * 0.15},${y})`\n    }\n    else if ((datum.name === 'Rochefort')) {\n      noOverlapTransform = `translate(${x + width * 0.04},${y - height * 0.0})`\n    }\n    else if ((datum.name === 'Marennes')) {\n      noOverlapTransform = `translate(${x - width * 0.03},${y + height * 0.05})`\n    }\n    else if ((datum.name === 'Marans')) {\n      noOverlapTransform = `translate(${x + width * 0.03},${y - height * 0.05})`\n    }\n    else if ((datum.name === 'Saint-Martin-de-Ré')) {\n      noOverlapTransform = `translate(${x - width * 0.06},${y})`\n    }\n    else if ((datum.name === `Les Sables-d'Olonne`)) {\n      noOverlapTransform = `translate(${x - width * 0.01},${y - height * 0.03})`\n    }\n  }\n  \n\n  const transformGroup = projectionTemplate === 'France' ? noOverlapTransform + ' scale(0.1)' : noOverlapTransform + ` scale(${isMinified ? 0.5 : 1})`;\n  return (\n    <ExtraversionObject\n      {\n      ...{\n        transformGroup,\n        navigoValues: [navigoMetric1, navigoMetric2],\n        toflitPct: !isNaN(inPercentage) ? inPercentage : 100,\n        circleRadius,\n        width,\n        height,\n        name: datum.name,\n        isActive,\n        isMinified,\n        onClick\n      }\n      }\n    />\n  )\n}\n\n/**\n * Renders objects for step 3.3\n * @param {array} data\n * @param {function} projection\n * @param {number} width\n * @param {number} height\n * @param {string} projectionTemplate\n * @returns {React.ReactElement} - React component\n */\nexport function Step3Objects({\n  data: { customsOffices = [], ports = [] },\n  projection,\n  width: inputWidth,\n  height: inputHeight,\n  projectionTemplate\n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const [selectedBureau, setSelectedBureau] = useState(undefined);\n  const handleClick = (name) => {\n    if (name === selectedBureau) {\n      setSelectedBureau(undefined);\n    } else setSelectedBureau(name);\n  }\n\n  const visiblePorts = useMemo(() => {\n    if (selectedBureau) {\n      return ports.filter(d => d.customs_office === selectedBureau)\n    }\n    return [];\n  }, [selectedBureau, ports])\n\n  const partsSpaceStartX = 15;\n  const portsSpaceStartY = height * 0.18;\n  const portsSpaceHeight = height * 0.55;\n  const portsSpaceWidth = width * .35;\n\n  const portRowHeight = visiblePorts.length ?  portsSpaceHeight / visiblePorts.length : portsSpaceHeight;\n\n  return (\n    <g className=\"Step3Objects\">\n      {\n        selectedBureau ?\n          <g className=\"ports-details\">\n            <foreignObject\n              x={0}\n              y={0}\n              width={width * .4}\n              height={height / 2}\n              className=\"ports-details-title\"\n            >\n              <h5>Ports associés au bureau des fermes de {selectedBureau} ({visiblePorts.length})</h5>\n            </foreignObject>\n            <g\n              className=\"ports-space\"\n              transform={`translate(${partsSpaceStartX}, ${portsSpaceStartY})`}\n            >\n              {/* <rect\n                x={0}\n                y={0}\n                width={portsSpaceWidth}\n                height={portsSpaceHeight}\n                style={{ fill: 'red' }}\n              /> */}\n              {\n                visiblePorts\n                .sort((a, b) => {\n                  const [_xA, yA] = projection([+a.longitude, +a.latitude]);/* eslint no-unused-vars : 0 */\n                  const [_xB, yB] = projection([+b.longitude, +b.latitude]);/* eslint no-unused-vars : 0 */\n                  if (yA > yB) {\n                    return 1;\n                  }\n                  return -1;\n                })\n                .map((port, portIndex) => {\n                  const [x, y] = projection([+port.longitude, +port.latitude]);\n                  const initialCircleRadius = width * 0.05;\n                  let circleRadius = initialCircleRadius;\n                  const totalTonnage = parseFloat(port.cumulated_tonnage_out_region) + parseFloat(port.cumulated_tonnage_in_region)\n\n                  // définition des coefficients de taille des triangles en 3 classes distinctes (pour l'instant la définition des classes est expérimentale)\n                  // se gérerait bien avec un switch\n                  if (totalTonnage < 1000) { // * 1000\n                    circleRadius = width * 0.025\n                  }\n                  else {\n                    if (totalTonnage > 5000) {\n                      circleRadius = width * 0.075\n                    }\n                  }\n                  const navigoMetric1 = parseFloat(port.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n                  const navigoMetric2 = parseFloat(port.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n                  const objectX = portsSpaceWidth / 2 - initialCircleRadius * 2 + (visiblePorts.length > 5 ? portIndex % 2 === 0 ? 0 : initialCircleRadius * 2 : 0);\n                  const objectY = portRowHeight * portIndex;\n                  // const transformGroup = projectionTemplate === 'France' ? `translate(${x},${y})` + ' scale(0.1)' : `translate(${x},${y})` + ` scale(1)`;\n                  const transformGroup = `translate(${objectX}, ${objectY})`;\n                  return (\n                    <g className=\"port-group\" key={port.name}>\n                      <line\n                        x1={objectX}\n                        y1={objectY}\n                        x2={x - partsSpaceStartX}\n                        y2={y - portsSpaceStartY}\n                      />\n                      <circle\n                        cx={x - partsSpaceStartX}\n                        cy={y - portsSpaceStartY}\n                        r={width * 0.002}\n                        style={{ fill: colorsPalettes.generic.dark }}\n                        className=\"marker\"\n                      />\n                      <ExtraversionObject\n                        {\n                        ...{\n                          transformGroup,\n                          navigoValues: [navigoMetric1, navigoMetric2],\n                          circleRadius,\n                          width,\n                          height,\n                          name: port.name,\n                        }\n                        }\n                      />\n                    </g>\n                  )\n                })\n              }\n            </g>\n\n          </g>\n          : null\n      }\n      {\n        customsOffices.map((datum, index) => (\n          <Step3Object\n            key={datum.name}\n            {\n            ...{\n              datum,\n              projection,\n              width,\n              height,\n              projectionTemplate,\n              onClick: handleClick,\n              isActive: datum.name === selectedBureau,\n              isMinified: selectedBureau && datum.name !== selectedBureau\n            }\n            }\n          />\n        ))\n      }\n    </g>\n  )\n}\n\n/**\n * Renders small multiples for 3.3\n * @param {array} data\n * @param {number} width\n * @param {number} height\n * @returns {React.ReactElement} - React component\n */\nexport function SmallMultiples({ \n  data, \n  width: inputWidth, \n  height: inputHeight\n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // could be parametered in props too\n  const bureaux = data.filter(({ name }) => name === 'Le Havre' || name === 'Nantes' || name === 'Bordeaux' || name === 'La Rochelle')\n    .sort((a, b) => {\n      if (a.cumulated_exports_value_from_region > b.cumulated_exports_value_from_region) {\n        return -1;\n      }\n      return 1;\n    })\n  const legendCustomOffice = {\n    name: 'Légende',\n    cumulated_tonnage_in_region: 60,\n    cumulated_tonnage_out_region: 60,\n    cumulated_exports_value_from_region: 50,\n    cumulated_exports_value_from_ext: 50,\n    legendMode: true\n  }\n  bureaux.unshift(legendCustomOffice)\n\n  const margin = 15;\n  let circleRadius = width * 0.05;\n  const multiplesY = height - circleRadius - margin * 2;\n\n  const legendFactor = 1;\n\n  const columnWidth = (circleRadius * 2 + margin);\n\n  const xObjectsStart = width * .4 // circleRadius * legendFactor + circleRadius + margin;\n\n  return (\n    <g className=\"small-multiples-and-legend-and-title\">\n      <rect\n        x={xObjectsStart + margin * 2}\n        y={multiplesY - circleRadius * 3}\n        width={width - xObjectsStart - margin * 4}\n        height={height - multiplesY + circleRadius * 3 - margin / 2}\n        style={{ fill: 'white' }}\n        opacity={0.5}\n      />\n      <foreignObject\n        x={xObjectsStart + circleRadius * 1.5}\n        y={multiplesY - circleRadius * 3}\n        width={(circleRadius * 2 + margin) * (bureaux.length - 1)}\n        height={height}\n      >\n        <div style={{ position: 'relative' }}>\n          <h5 className=\"visualization-title\" style={{ position: 'absolute', left: 0, bottom: 0 }}>\n            Comparaison avec les bureaux de fermes et ports dominants d'autres directions en 1787\n          </h5>\n        </div>\n      </foreignObject>\n      <g className=\"small-multiples\">\n        {\n          bureaux\n            .map((custom_office, index) => {\n              const totalTonnage = parseFloat(custom_office.cumulated_tonnage_out_region) + parseFloat(custom_office.cumulated_tonnage_in_region)\n\n              const navigoMetric1 = parseFloat(custom_office.cumulated_tonnage_out_region) / totalTonnage; // portion for left triangle\n              const navigoMetric2 = parseFloat(custom_office.cumulated_tonnage_in_region) / totalTonnage; // portion for right triangle\n\n              const totalValue = parseFloat(custom_office.cumulated_exports_value_from_region) + parseFloat(custom_office.cumulated_exports_value_from_ext)\n              const inPercentage = parseFloat(custom_office.cumulated_exports_value_from_region) / totalValue * 100\n\n              return custom_office.legendMode ?\n                (\n                  <ExtraversionObject\n                    {\n                    ...{\n                      transformGroup: `translate(${circleRadius * legendFactor * 4 + margin + index * (circleRadius * legendFactor + margin)}, ${multiplesY - (circleRadius * legendFactor - circleRadius)})`,\n                      navigoValues: [navigoMetric1, navigoMetric2],\n                      toflitPct: inPercentage,\n                      circleRadius: circleRadius * legendFactor,\n                      width,\n                      height,\n                      name: custom_office.name,\n                      legendMode: custom_office.legendMode\n                    }\n                    }\n                  />\n                )\n                : (\n                  <ExtraversionObject\n                    {\n                    ...{\n                      transformGroup: `translate(${xObjectsStart + index * columnWidth}, ${multiplesY})`,\n                      navigoValues: [navigoMetric1, navigoMetric2],\n                      toflitPct: inPercentage,\n                      circleRadius,\n                      width,\n                      height,\n                      name: custom_office.name,\n                      legendMode: custom_office.legendMode\n                    }\n                    }\n                  />\n                )\n            })\n        }\n\n      </g>\n      <defs>\n        <marker id=\"triangle-end\" viewBox=\"-10 0 10 10\"\n          refX=\"1\" refY=\"5\"\n          markerUnits=\"strokeWidth\"\n          markerWidth={width * 0.01}\n          markerHeight={width * 0.01}\n          orient=\"auto\">\n          <path d=\"M -10 0 L 0 5 L -10 10 Z\" fill=\"darkgrey\" />\n        </marker>\n      </defs>\n    </g>\n  );\n\n}\n\n/**\n * Renders a row of triangles\n * @param {array} data\n * @param {number} width\n * @param {number} height\n * @param {function} projection\n * @param {string} projectionTemplate\n * @param {boolean} atlasMode\n * @returns {React.ReactElement} - React component\n */\nexport function renderTriangles({ \n  data, \n  width: inputWidth, \n  height: inputHeight, \n  projection, \n  projectionTemplate, \n  atlasMode \n}) {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // console.log(\"data : layder.data \", data)\n  return (\n    <TriangleChart\n      data={data}\n      totalWidth={width} // @TODO : il faudrait réduire cette width \n      rowHeight={height * 0.3}\n      projection={projection}\n      projectionTemplate={projectionTemplate}\n      atlasMode={atlasMode}\n    />\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\n// import {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  // filters = [],\n  // filtersModeAnd\n}) {\n  \n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  \n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      ...attr,\n      x: isNaN(attr.x) || attr.x === undefined ? 0 : attr.x,\n      y: isNaN(attr.y) || attr.y === undefined ? 0 : attr.y\n    };\n\n\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      // console.log('color the attr', nodeColor.name, attr[nodeColor.name]);\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      // console.log('size attr', nodeSize.name, attr);\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    return renderedNode;\n  };\n\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  dontColorEdges,\n  edgesMap\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const smallerNode = sourceNodeSize < targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (smallerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = smallerNode.color || DEFAULT_NODE_COLOR;\n      } else {\n        renderedEdge.color =\n          nodeColor.palette[smallerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import React, { useCallback, useRef, useState, useEffect, useMemo } from 'react';\nimport gexf from 'graphology-gexf';\nimport forceAtlas2 from 'graphology-layout-forceatlas2';\nimport Graph from 'graphology';\nimport { WebGLRenderer as Renderer } from 'sigma';\nimport { scaleLinear } from 'd3-scale';\nimport { min, max, extent } from 'd3-array';\nimport { uniq } from 'lodash';\n// import get from 'axios';\n\nimport { createNodeReducer, createEdgeReducer } from './reducers';\nimport { generatePalette } from '../../helpers/misc';\nimport { usePrevious } from '../../helpers/hooks';\n\nimport './GraphContainer.scss';\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\n// function rescale(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedReset(renderer);\n// }\n\n// function zoomIn(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedZoom(renderer);\n// }\n\n// function zoomOut(renderer) {\n//   const camera = renderer.getCamera();\n//   camera.animatedUnzoom(renderer);\n// }\n\n/**\n * Network graph wrapper\n * @todo this should be enterely refactored using https://github.com/sim51/react-sigma-v2\n * @param {object} graph\n * @param {string} nodeColor -  field name\n * @param {string} nodeSize -  field name\n * @param {number} labelDensity\n * @param {string} nodeLabel - fieldName\n * @param {function} onCameraUpdate\n * @param {object} cameraPosition\n * @param {number} updateTimestamp\n * @param {number} width\n * @param {number} height\n * @param {number} ratio - camera ratio/zoom level\n * @returns {React.ReactElement} - React component \n */\nfunction GraphContainer({\n  graph,\n  nodeColor: nodeColorVariable,\n  nodeSize: nodeSizeVariable,\n  labelDensity,\n  nodeLabel,\n  onCameraUpdate,\n  cameraPosition,\n  updateTimestamp,\n  width,\n  height,\n  ratio,\n}) {\n  let sizes = useMemo(() => {\n    const res = [];\n    graph.forEachNode((_node, attributes) => {\n      res.push(+(nodeSizeVariable ? attributes[nodeSizeVariable] : attributes.size));\n    })\n    return res;\n  }, [nodeSizeVariable, graph]);\n\n  const sizeExtent = extent(sizes);\n  const extents = {\n    nodeSize: {\n      min: sizeExtent[0],\n      max: sizeExtent[1]\n    }\n  }\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable) {\n\n      return {\n        min: min(sizeExtent),\n        max: max(sizeExtent),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable, graph])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable.field) {\n      let values = [];\n      graph.forEachNode((_node, attr) => {\n        values.push(attr[nodeColorVariable.field])\n      })\n      values = uniq(values);\n      let palette = {};\n      if (nodeColorVariable.palette) {\n        palette = nodeColorVariable.palette;\n      } else {\n        const colors = generatePalette(nodeColorVariable.field, values.length);\n        let i = 0;\n        values.forEach(option => {\n          palette[option] = colors[i];\n          i++;\n        });\n      }\n\n      return {\n        palette,\n        name: nodeColorVariable.field\n      }\n    } else return undefined;\n  }, [nodeColorVariable, graph])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n        m.set(edge, { sourceNode: sourceAttributes, targetNode: targetAttributes })\n      });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  // const previousSearchString = usePrevious(searchString);\n  // const previousDontColorEdges = usePrevious(dontColorEdges);\n  // const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n  });\n\n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    edgesMap\n  });\n\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n      const camera = renderer.getCamera();\n      // console.log('animate camera', camera);\n      camera.animate(cameraPosition);\n    }\n  }, [updateTimestamp]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousDontColorEdges !== dontColorEdges ||\n      previousNodeLabel !== nodeLabel\n      // previousSearchString !== searchString ||\n      // previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n  useEffect(() => {\n    if (renderer) {\n      renderer.refresh();\n    }\n  }, [width, height])\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n        const newRenderer = new Renderer(graph, node, { nodeReducer, edgeReducer });\n\n        newRenderer.settings.labelFont = 'IBM Plex Sans';\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        camera.setState({ ...camera.getState(), ratio: ratio || 1 });\n        camera.disable();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph]\n  );\n\n  return (\n    <div className=\"VisContainer GraphContainer\" >\n\n      <div ref={setContainer} style={{ width: '100%', height: '100%', minHeight: '10vh', minWidth: '1vw' }}></div>\n      {/*renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n        />\n      )*/}\n    </div>\n  );\n}\n\n\nexport default function NetworkGraphChart({\n  data: gexfString,\n  nodeColor,\n  nodeLabel,\n  nodeSize,\n  labelDensity = 0.5,\n  spatialize,\n  cameraPosition: inputCameraPosition = { x: 0.5, y: 0.5, angle: 0, ratio: 1 },\n  width = 0,\n  height,\n  ratio,\n  title\n}) {\n  const headerRef = useRef(null);\n  const headerHeight = useMemo(\n    () => headerRef.current ? headerRef.current.getBoundingClientRect().height : 0, [headerRef.current])\n\n  // useState renvoie un state et un seter qui permet de le modifier\n  const [cameraPosition, setCameraPosition] = useState(inputCameraPosition);\n\n  useEffect(() => {\n    if (['x', 'y', 'angle', 'ratio'].find(prop => inputCameraPosition[prop] !== cameraPosition[prop])) {\n      setCameraPosition(inputCameraPosition);\n    }\n  }, [inputCameraPosition])\n\n  const onCameraUpdate = cam => {\n    setCameraPosition(cam);\n  }\n  const graph = useMemo(() => {\n    const g = gexf.parse(Graph, gexfString);\n    if (spatialize) {\n      const settings = forceAtlas2.inferSettings(g);\n      // To directly assign the positions to the nodes:\n      forceAtlas2.assign(g, {\n        settings,\n        iterations: 50\n      });\n    }\n    return g;\n  }, [gexfString]);\n\n  if (!graph) {\n    return null;\n  }\n  return (\n    <div className=\"NetworkGraphChart\" style={{ \n      width: '100%', \n      height: height || '100%',\n    }}>\n      <div ref={headerRef} className=\"row visualization-title-container\">\n        {title ? <h5 className=\"visualization-title\">{title}</h5> : null}\n      </div>\n      <div style={{\n        position: 'relative',\n        flex: 1,\n        // top: headerHeight,\n        // background: 'red',\n        // height: height - headerHeight\n      }}>\n\n        <GraphContainer\n          {\n          ...{\n            graph,\n            cameraPosition,\n            nodeColor,\n            nodeSize,\n            labelDensity,\n            nodeLabel,\n            ratio,\n            onCameraUpdate,\n            width,\n            height: height - headerHeight\n          }\n          }\n        />\n      </div>\n    </div>\n  )\n}","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.55,\"time\":33000,\"words\":110}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"column\">\n      <h2 {...{\n        \"id\": \"le-programme-portic\"\n      }}>{`Le programme PORTIC`}</h2>\n      <p>{`Le programme de recherche PORTIC (ANR-18-CE38–0010) se propose de croiser les données sur la navigation et sur la valeur du commerce étranger de la France à la veille de la Révolution française pour mieux saisir les dynamiques commerciales à l’œuvre. Pour ce faire, il offre des interfaces d’interrogation et de visualisation des données adaptées à des publics et des intérêts variés.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://anr.portic.fr/\"\n        }}>{`En savoir plus sur le programme PORTIC`}</a></p>\n    </div>\n    <div className=\"column\">\n      <p>{`Les contenus de ce site sont placés sous `}<a parentName=\"p\" {...{\n          \"href\": \"https://creativecommons.org/licenses/by-nc-sa/3.0/fr/\"\n        }}>{`licence libre creative commons CC-BY-SA-NC`}</a>{`.`}</p>\n      <p>{`Le code source de ce site est placé sous licence libre `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.gnu.org/licenses/agpl-3.0.fr.html\"\n        }}>{`AGPL-3.0`}</a>{`.`}</p>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/medialab/portic-storymaps-2021/\"\n        }}>{`Accéder au code source de ce site`}</a></p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"le-programme-portic\",\n    level: 2,\n    title: \"Le programme PORTIC\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","/**\n * A series of miscellaneous helper functions\n */\n\n/* import external library */\nimport { csvParse } from 'd3-dsv';\nimport get from 'axios';\nimport iwanthue from 'iwanthue';\n/* import other assets */\nimport metadataFr from '../contents/fr/metadata'\nimport metadataEn from '../contents/en/metadata'\nimport palettes from '../colorPalettes';\n\nconst { generic } = palettes;\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\n\n/**\n * Generates a head's title for the current page\n * @param {string} title\n * @param {string} lang='fr'\n * @returns {string}\n */\nexport function buildPageTitle(title, lang = 'fr') {\n  const currentMetadata = metadata[lang] || metadataFr;\n  return `${title} | ${currentMetadata.title} | PORTIC`;\n}\n\n/**\n * Trims a text given a certain length limit/maximum\n * @param {string} str\n * @param {number} limit=30\n * @returns {string}\n */\nexport function trimText(str, limit = 30) {\n  if (str.length > limit) {\n    const words = str.split(' ');\n    let output = [words[0]];\n    let i = 1;\n    while (output.join(' ') < limit - 3 && i < words.length) {\n      output.push(words[i]);\n      i++;\n    }\n    output = output.join(' ');\n    return [output, words.slice(i).join(' ')];\n  }\n  return [str, undefined];\n}\n\n/**\n * Transform cartesian coordinates to polar coordinates\n * @param {number} x\n * @param {number} y\n * @returns {object} - distance and radians of the polar coordinates\n */\nexport function cartesian2Polar(x, y) {\n  const distance = Math.sqrt(x * x + y * y);\n  const radians = Math.atan2(y, x);\n  return {\n    distance, radians\n  }\n}\n/**\n * Transform polar coordinates to cartesian coordinates\n * @param {number} r\n * @param {number} theta\n * @returns {array} - array of x and y positions\n */\nexport const polarToCartesian = (r, theta) => [\n  r * Math.cos(theta),\n  r * Math.sin(theta)\n]\n\n/**\n * Generate a color palette in a deterministic way for the app\n * @param {string} name\n * @param {number} count - number of colors to generate\n * @returns {any}\n */\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return [generic.accent1, generic.accent2]\n  } else if (count === 3) {\n    return [generic.dark, generic.accent1, generic.accent2]\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}\n\n/**\n * Normalizes a dimension so that it is fitable for svg dimensions (not NaN, positive)\n * @param {number} num\n * @returns {number}\n */\nexport const fixSvgDimension = num => isNaN(num) ? 0 : Math.abs(+num);\n\n/**\n * Format a number so that it is more legible\n * @param {number} n\n * @param {string} style='fr'\n * @returns {string}\n */\nexport const formatNumber = (n, style = 'fr') => {\n  return ('' + n)\n    .split('')\n    .reverse()\n    .reduce(({ count, result }, digit, index) => {\n      const endOfLine = count === 3 || (count === 0 && index === ('' + n).length - 1);\n      if (endOfLine) {\n        return {\n          count: 1,\n          result: [...result, style === 'fr' ? ' ' : ',', digit]\n        }\n      } else return {\n        count: count + 1,\n        result: [...result, digit]\n      }\n\n    }, {\n      count: 0,\n      result: []\n    })\n    .result\n    .reverse()\n    .join('')\n}\n\n\n/**\n * ===============\n * DEPRECATED\n * Cécile's code for when we directly queryied data from source APIs\n * ==============\n */\n\n\n\n/**\n * Filters data given certain parameters\n * @param {array} data\n * @param {object} params\n * @returns {array}\n */\nconst _filterData = (data, { startYear, endYear, year, params, ...rest }) => {\n  console.group('filters');\n  console.time('filters time');\n  console.log('input', data);\n  /* dans data on a un dict de type : \n  [   {year: \"1789\", customs_region: \"La Rochelle\", partner_simplification: \"Iles\", export_import: ”Import\", product_revolutionempire: \"...\", ...},\n      {year: \"1782\", customs_region: \"Bordeaux\", ...},\n      {...},\n      columns: [\"year\", \"customs_region\", ...]\n\n  ]\n  */\n  let filteredData = data.filter(row => {\n    let rowYear = row.year ? +row.year.split(\".\")[0] : undefined;\n    if (startYear && endYear) {\n      return rowYear >= +startYear && rowYear <= +endYear;\n      // @todo : quand on aura rajouté startYear et endYear pour\n      // la récupération de portic il s'agira de déduire ce year des données\n    } else if (year && rowYear) {\n      return year === +rowYear;\n    } else return true;\n  })\n  // console.log('1', filteredData);\n\n  filteredData = filteredData.filter(row => {\n    // pour chaque filtre (sauf filtre timespan et filtrage des colomnes) :\n    let isValid = true;\n    // key --> 'year', filter_value --> 1789\n    // kwargs obtenu sous forme de dict : --> { year: 1789, customs_region: 'La Rochelle' }\n\n    // kwargs semble être indiçable mais pas sur qu'on doive pas le mettre dans un format spécial pas comme python\n    // sinon suggestion : function.apply(obj, [args])\n\n    // ligne originale : je ne sais pas pourquoi on ne veut prendre en compte les filtres que pour les colonnes qui ne sont pas à garder dans le résultats (colonne données dans l'argument 'params' sous forme de liste)\n    // for (let key,filter_value in [param for param in kwargs.items() if param[0] not in ['params']]): \n    // console.log('rest', rest);\n    Object.entries(rest)\n      .some(([key, inputFilterValue]) => {\n        const rowValue = row[key];\n        let filterValue = inputFilterValue;\n        // console.log('filter value 1', filterValue);\n        // si la valeur est une liste : on caste en string ses membres\n        if (Array.isArray(filterValue)) {\n          filterValue = filterValue.map(x => x + ''); // caster en string\n        }\n        // sinon c'est un tableau à une valeur qu'on caste en string\n        else {\n          filterValue = [filterValue + ''];\n        }\n        // console.log('filter value final', filterValue);\n        // à partir de là, filter_value est une liste de strings\n\n        // si la ligne a un attribut qui fait partie des valeurs acceptées par le filtre => on examine les autres filtres \n        if (filterValue.length > 0 && !(rowValue.includes(filterValue))) {\n          isValid = false;\n          return true;\n        }\n        return false;\n      })\n\n    return isValid;\n  })\n\n  // console.log('2', filteredData);\n\n\n  const transformedData = filteredData.map(row => {\n    let rowFormated = {};\n\n    // on ne garde que les colonnes qui nous intéressent dans le résultat => \n    // console.log(\"params : \", params);\n    // console.log(\"typeof(params) !== 'undefined' : \", (typeof params !== 'undefined'));\n    // console.log(\"row : \", row);\n    // on ne passe jamais ni dans le if ni dans le else, je ne sais pas pourquoi \n    // if (typeof params !== 'undefined') {\n\n    // if (params &&\n    // ci-dessous : tester si objet vide\n    if (!!params && Object.keys(params).length) {\n      // console.log(\"we are selecting only those columns : \", params);\n      for (let [column, value] of Object.entries(row)) {\n        if (params.includes(column)) {\n          rowFormated[column] = value;\n        }\n      }\n    }\n    // de base c'était else { ... } et on passait jamais dedans apparemment du coup là c'est bizarre\n    // else if (typeof params !== 'undefined') {\n    else {\n      // rowFormated = {...row}; // différencier rowFormated et row (nouvelle ref en unpackant et copiant key / params de row) => en JS differencier input d'output\n      // console.log(\"rowFormated = \", row);\n    }\n    // console.log(\"après le if / else\");\n    return rowFormated;\n  })\n  // console.log('3', transformedData);\n  console.timeEnd('filters time');\n  console.groupEnd('filters');\n  return transformedData;\n}\n\n/**\n * Gets toflit18 flows (from local csv) according to certain  filter parameters\n * @param {object} params\n * @returns {promise}\n */\nexport const getToflitFlowsByCsv = ({\n  startYear = null,\n  endYear = null,\n  year = null,\n  params = null,\n  ...rest // https://www.peterbe.com/plog/javascript-destructuring-like-python-kwargs-with-defaults ; \n  // \"standard\" JavaScript array : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\n}) => {\n  // méthode de gestion avec callback\n  // let result;\n  // trucAsynchrone\n  // .then(data => {\n  //     callback(null, data);\n  // })\n  // .catch(error => {\n  //     callback(error);\n  // })\n\n  // méthode de gestion avec promesse\n  // return new Promise((resolve, reject) => {\n  //     trucAsynchrone\n  //     .then(data => {\n  //         // faire des trucs avec data\n  //         resolve(data);\n  //     })\n  //     .catch(error => {\n  //         // faire des choses avec l'erreur\n  //         reject(error);\n  //     })\n  // })\n\n  // méthode async/await\n  // const result = await trucAsynchrone();\n  // return result;\n\n  /*\n  Synopsis : récupère les flux toflit18\n  --- \n  Paramètres :\n  * startYear : <int> # année de début\n  * endYear : <int> # année de fin\n  * params : <arr> # propriétés à renvoyer\n  * [tous les noms de colonne des flux] : <arr/string> valeurs à filtrer dans les flux (peut être une ou plusieurs valeurs)\n  */\n\n  return new Promise((resolve, reject) => {\n\n    // let results = []; // ça sert à quelque chose ?? pour moi c'est pas utilisé, sinon je ne devrais pas avoir l'erreur \"t.map is not a function\" \n    // => voir https://www.pluralsight.com/guides/typeerror-handling-in-react.js-for-map-function\n\n    let finalStartYear = startYear; // on ne modif pas params en JS\n    let finalEndYear = endYear;\n\n\n\n    // 1. Test de la validité des paramètres\n    if (startYear !== null && endYear === null) {\n      return reject(\"You must put an end year\");\n    } // pas sure pour les accolades\n    else if (endYear !== null && startYear === null) {\n      return reject(\"You must put a start year\");\n    }\n\n    if ((startYear !== null || endYear !== null) && year !== null) {\n      finalStartYear = null;\n      finalEndYear = null;\n    }\n\n    /* en l'état ça ne fonctionne pas */\n    const URL = `${process.env.PUBLIC_URL || 'localhost:3001'}/data/toflit18_flows_sprint.csv`;\n    // console.log(\"URL '${process.env.PUBLIC_URL}/data/toflit18_flows_sprint.csv' : \", URL)\n    get(URL) // get de axios\n      .then(({ data: csvString }) => {\n        // conversion en js (avec d3-dsv)\n        const newData = csvParse(csvString);\n        // faire des choses avec les résultats (filtres, ...)\n        const finalData = _filterData(newData, { startYear: finalStartYear, endYear: finalEndYear, year, params, ...rest });\n        resolve(finalData);\n      })\n      .catch((err) => {\n        reject(err);\n      })\n\n  })\n\n}","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport { animated, useSpring } from 'react-spring';\n\nimport colorsPalettes from '../../colorPalettes';\n\n/**\n * Returns a given port visual elements in triangles comparison visualization (for viz 3.1)\n * @param {number} numberOfColumns\n * @param {object} port\n * @param {function} scaleX\n * @param {function} scaleY\n * @param {number} legendWidth\n * @param {number} columnWidth\n * @param {umber} totalHeight\n * @param {number} totalWidth\n * @param {function} projection\n * @param {number} index\n * @param {object} margins\n * @param {number} rowHeight\n * @param {number} fontSize\n * @param {string} projectionTemplate\n * @returns {React.ReactElement} - React component\n */\nconst PortGroup = ({\n  numberOfColumns,\n  port,\n  scaleX,\n  scaleY,\n  legendWidth,\n  columnWidth,\n  totalHeight,\n  totalWidth,\n  projection,\n  index,\n  margins,\n  rowHeight,\n  fontSize,\n  projectionTemplate\n}) => {\n\n\n  const triangleWidth = scaleX(+port.nb_pointcalls_out)\n  const triangleHeight = scaleY(+port.mean_tonnage)\n\n  const xIndex = index % numberOfColumns;\n  // const yIndex = (index - index % numberOfColumns) / numberOfColumns;\n  const xTransform = xIndex * columnWidth + margins.left // + (legendWidth + margins.left) * totalWidth;\n  const yTransform = totalHeight * 2.3;\n\n  // const [x, y] = projection([+port.longitude, +port.latitude]);\n  const [x, y] = projection([+port.longitude, +port.latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { transform, x1, y1, x2, y2, staticTransform, markerRadius } = useSpring({\n    to: {\n      transform: `translate(${x},${y})`,\n      x1: projectionTemplate === 'rotated Poitou' ? xTransform + columnWidth / 2 : x,\n      y1: projectionTemplate === 'rotated Poitou' ? yTransform + rowHeight / 7 : y,\n      // x1: projectionTemplate === 'rotated Poitou' ? xTransform + columnWidth / 2 : totalWidth * 0.1,\n      // y1: projectionTemplate === 'rotated Poitou' ? yTransform + rowHeight / 7 : index * (totalHeight / numberOfColumns),\n\n      markerRadius: projectionTemplate === 'rotated Poitou' ? totalHeight * 0.02 : 0,\n      // markerRadius: projectionTemplate === 'rotated Poitou' ? totalHeight * 0.02 : 1,\n      \n      // x1: xTransform + columnWidth / 2,\n      // y1: yTransform + rowHeight / 7,\n      x2: x,\n      y2: y,\n      staticTransform: projectionTemplate === 'rotated Poitou' ? `translate(${xTransform}, ${yTransform}) scale(1)` : `translate(${x},${y}) scale(${projectionTemplate === 'rotated Poitou' ? 1 : 0.1})`\n      // staticTransform: projectionTemplate === 'rotated Poitou' ? `translate(${xTransform}, ${yTransform}) scale(1)` : `translate(${totalWidth * 0.1},${index * (totalHeight / numberOfColumns)}) scale(${projectionTemplate === 'France' ? 0.2 : 1})`\n    },\n    immediate: !isInited\n  });\n\n  const cellCenterX = columnWidth / 2;\n  const cellCenterY = rowHeight / 2;\n  const textStartY = rowHeight / 7;\n  const triangleStartY = cellCenterY + textStartY / 2 - triangleHeight / 2;\n  const legendTextWidth= totalWidth * 0.08;\n\n  let labelBgWidth = fontSize * 12;\n  if (port.port.length <= 10) {\n    labelBgWidth = fontSize * 6;\n  } else if (port.port.length <= 12) {\n    labelBgWidth = fontSize * 7;\n  } else if (port.port.length <= 15) {\n    labelBgWidth = fontSize * 8;\n  } else if (port.port.length <= 18) {\n    labelBgWidth = fontSize * 10;\n  }\n\n  return (\n    <g className={cx('port-point-and-triangle', {'is-minified': projectionTemplate !== 'rotated Poitou'})}>\n\n      <animated.line\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke='grey'\n        strokeDasharray='2, 8'\n      />\n\n      <animated.g className='port-point' transform={transform}>\n        <animated.circle\n          cx={0}\n          cy={0}\n          r={markerRadius}\n          style={{ fill: colorsPalettes.generic.dark }}\n          className=\"marker\"\n        />\n      </animated.g>\n\n      <animated.g className='port-triangle'\n        // transform={`translate(${(index) * (columnWidth)}, ${height * .33 + (index%3)*(rowHeight)})`}\n        transform={staticTransform}\n      >\n        {/* <rect\n          x={0}\n          y={0}\n          width={columnWidth}\n          height={rowHeight}\n          style={{stroke: 'red'}}\n        /> */}\n\n        {/* <path class='vertical-line'\n          d={`M ${cellCenterX} ${(rowHeight - triangleHeight) / 1.2} \n              V ${rowHeight / 7}\n              `}\n        /> */}\n        <path className='vertical-line'\n          d={`M ${cellCenterX} ${textStartY} \n              V ${triangleStartY}\n              `}\n        />\n\n        <g transform={`translate(${cellCenterX}, ${triangleStartY})`}>\n\n          <path className='triangle'\n            d={`M ${-triangleWidth / 2} ${0} \n                L ${triangleWidth / 2} ${0}\n                L ${0} ${triangleHeight}\n                Z\n                `}\n            fill=\"url(#TriangleGradient)\"\n          />\n          {/* <circle\n            fill=\"red\"\n            r={2}\n            cx={-triangleWidth / 2}\n            cy={0}\n          />\n          <circle\n            fill=\"red\"\n            r={2}\n            cx={triangleWidth / 2}\n            cy={0}\n          />\n          <circle\n            fill=\"red\"\n            r={2}\n            cx={0}\n            cy={triangleHeight}\n          /> */}\n        </g>\n        <g className=\"local-legend\">\n          {/* horizontal line */}\n          <line\n            x1={cellCenterX - triangleWidth/2}\n            x2={cellCenterX + triangleWidth/2}\n            y1={triangleStartY - 3}\n            y2={triangleStartY - 3}\n            marker-start=\"url(#triangle-left)\" \n            markerEnd=\"url(#triangle-right)\"\n          />\n          {/* vertical line */}\n          <line\n            x1={cellCenterX - triangleWidth/2 - 3}\n            x2={cellCenterX - triangleWidth/2 - 3}\n            y1={triangleStartY}\n            y2={triangleStartY + triangleHeight}\n            marker-start=\"url(#triangle-left)\" \n            markerEnd=\"url(#triangle-right)\"\n          />\n          {/* pointing arrows */}\n          <path\n            d={`\n            M ${-(legendTextWidth* .2) - triangleWidth / 3} ${triangleStartY * .65}\n            Q ${cellCenterX - 10} ${triangleStartY * .65} ${cellCenterX - 2} ${triangleStartY - 5}\n            `}\n            markerEnd=\"url(#triangle-right)\"\n          />\n          <path\n            d={`\n            M ${-triangleHeight / 3 + 3} ${triangleStartY + triangleHeight * .6 + 7}\n            L ${cellCenterX - triangleWidth/2 - 3} ${triangleStartY + triangleHeight * .6 + 7}\n            `}\n            markerEnd=\"url(#triangle-right)\"\n          />\n          <foreignObject \n            y={triangleStartY / 2}\n            x={-legendTextWidth - triangleWidth / 3}\n            width={legendTextWidth}\n            height={rowHeight}\n          >\n            <span xmlns=\"http://www.w3.org/1999/xhtml\">\n             nombre de navires sortis du port en 1789 : <strong>{port.nb_pointcalls_out}</strong>\n            </span>\n          </foreignObject>\n          <foreignObject \n            x={-legendTextWidth - triangleWidth / 3}\n            y={triangleStartY + triangleHeight * .6}\n            width={totalWidth * 0.08}\n            height={rowHeight}\n          >\n            <span xmlns=\"http://www.w3.org/1999/xhtml\">\n              tonnage moyen des navires : <strong>{(+port.mean_tonnage || 0).toFixed(1)}</strong>\n            </span>\n          </foreignObject>\n          \n        </g>\n        <g className='label' transformOrigin=\"bottom left\" transform={`translate(${columnWidth / 2}, ${rowHeight / 7 - totalHeight * 0.025})`}>\n          <path\n            d={`M 0 ${-fontSize} L ${labelBgWidth} ${-fontSize} ${labelBgWidth - 5} ${(-fontSize + fontSize * 0.2) / 2} ${labelBgWidth} ${fontSize * 0.2} 0 ${fontSize * 0.2} Z`}\n            // d={`M 0 ${-fontSize} L ${port.port.length * fontSize * .64} ${-fontSize} ${port.port.length * fontSize * .64 - 5} ${(-fontSize + fontSize * 0.2) / 2} ${port.port.length * fontSize * .64} ${fontSize * 0.2} 0 ${fontSize * 0.2} Z`}\n            // x={0}\n            // y={-fontSize}\n            // height={fontSize * 1.2}\n            // width={port.port.length * fontSize * .65}\n            style={{ fill: colorsPalettes.generic.dark }}\n            transformOrigin=\"bottom left\"\n            transform=\"rotate (-45)\"\n          />\n          <text\n            transformOrigin=\"bottom left\"\n            transform=\"rotate (-45)\"\n            font-size={fontSize}\n            style={{ fill: 'white' }}\n            x={3}\n            y={0}\n            textAnchor=\"left\"\n          > {port.port} </text>\n        </g>\n\n      </animated.g>\n    </g>\n  )\n}\n\nexport default PortGroup;","/* DOCUMENTATION : API de ce TriangleChart\n\n  Principe :\n    Composant conçu spécifiquement pour les triangles de la viz 3.1, mais pourrait être décliné\n    -> permet de produire une série d'objets en SVG, qui se disposent dans une grille en fonction de la longueur du dataset, et les dimensions de cette grille sont paramètrables\n\n  Paramètres : \n    data : données à afficher sur la carte,\n    totalWidth : largeur totale du composant (1 objet de légende + grille d'objets) (par défaut à 1200 px)\n    legendWidth : largeur de la légende (par défaut à un dizième de la largeur totale)\n    margins : marges de gauche (entre l'objet de la légende et la grille) et de froite (entr la droite de la grille et l'extrémité droite de l'écran)\n    rowHeight : hauteur d'une ligne de la grille (par défaut à 200px)\n    projection : on passe en paramètre la projection de d3 geo pour pouvoir donner accès au positionnement géographique sur une carte (permet dans le cas de la viz 3.1 de lier les triangles au point de localisation géographique du port qu'ils représentent => point et triangle sont nesté dans un même objet, ce qui permet d'établir une courbe pointillée entre eux et gérer l'interaction avec des jeux d'opacité au hover)\n\n  Pistes d'amélioration : \n  - filtrer les objets à l'entrée ? (par exemple pour la viz 3.1 on pourrait choisir d'afficher le triangle associé à un port que si les dimensions dépassent un certain seuil) => cela permettrait d'alléger la carte, en affichant seulement les ports pour lesquels on a des données représentatives\n\n  @TODO : documenter ce component de maière standardisée\n  */\n\nimport { scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport cx from 'classnames';\n\nimport './TriangleChart.scss'\nimport colorsPalettes from '../../colorPalettes';\n\n// import TriangleLegend from './TriangleLegend';\nimport PortGroup from './PortGroup';\n\n\n/**\n * Returns triangles comparison visualization (for viz 3.1)\n * @param {array} data\n * @param {number} totalWidth\n * @param {number} legendWidth - portion in [0,1]\n * @param {object} margins\n * @param {number} rowHeight\n * @param {function} projection\n * @param {string} projectionTemplate\n * @param {boolean} atlasMode\n * @returns {React.ReactElement} - React component\n */\nconst TriangleChart = ({\n  data,\n  totalWidth = 1200,\n  legendWidth = 0.1,\n  margins: inputMargins,\n  rowHeight = 200,\n  projection,\n  projectionTemplate,\n  atlasMode\n}) => {\n\n  const margins = inputMargins ||  {\n    left: totalWidth * .1,\n    right: totalWidth * .1\n  }\n  // {\n  //   left: 0.0,\n  //   right: 0.09\n  // }\n  const numberOfColumns = data.length;\n  const columnWidth = (totalWidth - margins.left - margins.right) / (numberOfColumns) // (totalWidth * (1 - legendWidth - margins.left - margins.right)) / numberOfColumns; // (totalWidth) / (numberOfColumns + 4) //\n  const numberOfRows = data.length / numberOfColumns;\n  const totalHeight = numberOfRows * rowHeight;\n  const fontSize = totalHeight * 0.05;\n\n\n  // scaleLinear<Range = number, Output = Range, Unknown = never>(range?: Iterable<Range>): ScaleLinear<Range, Output, Unknown> (+1 overload)\n  const scaleX = scaleLinear().domain([\n    0,\n    max(\n      data.map((port) => { // data.map : boucle fonctionelle\n        // return +port[xVariable];\n        return +port.nb_pointcalls_out;\n      })\n    )\n    // ]).range([0, columnWidth * 5]); // @TODO : adapter pour permettre chevauchement => ne plus se limiter à la taille d'une colonne (+ centre de mon triangle à gérer)\n  ]).range([5, columnWidth * 5]); // @TODO : adapter pour permettre chevauchement => ne plus se limiter à la taille d'une colonne (+ centre de mon triangle à gérer)\n\n  const scaleY = scaleLinear().domain([\n    0,\n    max(\n      data.map((port) => {\n        return +port.mean_tonnage; // parseFloat(port.mean_tonnage);\n      })\n    )\n  ]).range([5, rowHeight * 0.85]); // pour l'instant j'ai mis le max de longueur à 85% de la hauteur du rectangle conteneur \n  // je pourrais faire  range([0, rowHeight - place occupée par le texte]\n\n  // const legendTriangleWidth = 35;\n  // const legendTriangleHeight = 60;\n\n  return (\n\n    <g className={cx(\"TriangleChart\", {'is-atlas-mode': atlasMode})}>\n\n      <defs>\n        <linearGradient id=\"TriangleGradient\" x2='0%' y2='100%'>\n          <stop offset=\"10%\" stopColor={`rgb(100,100,100)`} stop-opacity={0.6} />\n          <stop offset=\"100%\" stopColor={colorsPalettes.generic.dark} />\n          {/* <stop offset=\"20%\" stopColor={colorsPalettes.generic.dark} />\n          <stop offset=\"100%\" stopColor={colorsPalettes.generic.dark} stop-opacity={0.3} /> */}\n        </linearGradient>\n      </defs>\n      {/* <TriangleLegend\n        {\n        ...{\n          legendWidth,\n          totalWidth,\n          totalHeight,\n          legendTriangleWidth,\n          legendTriangleHeight,\n          rowHeight,\n          fontSize,\n        }\n        }\n      /> */}\n      <g className=\"triangles\">\n        {\n          // sorting groups regarding their projected projection on the horizontal axis (to avoid lines crossings)\n          data.sort((a, b) => {\n            const [xa] = projection([+a.longitude, +a.latitude]);\n            const [xb] = projection([+b.longitude, +b.latitude]);\n\n            if (xa > xb) {\n              return 1;\n            }\n            return -1;\n          })\n            .map((port, index) => {\n\n              return (\n                <PortGroup\n                  key={index}\n                  {\n                  ...{\n                    numberOfColumns,\n                    port,\n                    scaleX,\n                    scaleY,\n                    legendWidth,\n                    columnWidth,\n                    totalHeight,\n                    totalWidth,\n                    projection,\n                    index,\n                    margins,\n                    rowHeight,\n                    fontSize,\n                    projectionTemplate\n                  }\n                  }\n                />\n              )\n            })\n\n        }\n        <defs>\n            <marker id=\"triangle-left\" viewBox=\"0 0 10 10\"\n              refX=\"1\" refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth={legendWidth * totalWidth * 0.04} \n              markerHeight={rowHeight * 0.02}\n              orient=\"auto\">\n              <path d=\"M 10 0 L 0 5 L 10 10 Z\" fill=\"darkgrey\" />\n            </marker>\n            <marker id=\"triangle-right\" viewBox=\"-10 0 10 10\"\n              refX=\"1\" refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth={legendWidth * totalWidth * 0.04} \n              markerHeight={rowHeight * 0.024}\n              orient=\"auto\">\n              <path d=\"M -10 0 L 0 5 L -10 10 Z\" fill=\"darkgrey\" />\n            </marker>\n          </defs>\n      </g>\n\n    </g>\n  )\n\n}\n\nexport default TriangleChart;","\n\nconst colorsPalettes = {\n  'ui': {\n    'colorText': '#403d3d',\n    'colorAccent': '#34495e',\n    'colorAccentBackground': '#336d7c',\n    'colorBackgroundBlue': '#d3e5e5',\n    'colorBackground': '#ebebeb',\n  },\n  'generic':{\n    'dark': '#336D7C',// marine sombre\n    'light': '#E0E3E6',// gris clair\n    'accent1': '#00C4AF',// '#00FFC8',// vert d'eau\n    'accent2': '#FEA43B'// orange\n  },\n  'admiralties': {\n    'La Rochelle': '#41BEA3',\n    'Marennes': '#A7E6F9',\n    \"Sables d'Olonne\": '#668EDB'\n  },\n  'provinces':{\n    'Poitou': '#668EDB',\n    'Aunis': '#41BEA3',\n    'Saintonge': '#A7E6F9',\n    'Angoumois': '#514EEE'\n  },\n  'product': {\n    'sel': '#E0CB0E',\n    'eau-de-vie et vins divers': '#A07BEE',\n    'autres produits': '#72808D',\n    'produits coloniaux': '#FEA43B',\n      },\n  'partner': {\n    'Afrique': '#875E2E',\n    'Reste du monde (USA)': '#E0E3E6',\n    'Grande Bretagne': '#542AAD',\n    'Europe': '#A07BEE',\n    'Ports francs et petites îles': '#5439F9',\n    'Colonies': '#E5881A',\n    'Indéterminé supposé Europe': '#A07BEE'\n  },\n  'customs_office': {\n    'La Rochelle': '#41BEA3',\n    'Rochefort': '#349883',\n    'Saint-Martin-de-Ré': '#277262',\n    'Saint-Martin île de Ré': '#277262',\n    'Tonnay-Charente': '#5AD0F4',\n    'Marans': '#67CBB6',\n    \"Les Sables-d'Olonne\": '#668EDB',\n    \"Sables d'Olonne\": '#668EDB',\n    'Marennes': '#A7E6F9',\n    'Charente': '#A7E6F9',\n    'Alligre': '#349883',\n    \"Tous les bureaux\": \"grey\"\n  },\n  tonnageClasses: {\n    '100%': '#A07BEE',\n    '75% ou plus': '#41BEA3',\n    'moins de 75%': '#FEA43B',\n  },\n  franceAlone: {\n    'France': '#41BEA3',\n  },\n  portsTreemaps: {\n    'France (région PASA)': '#41BEA3',\n    'Indéterminé': 'rgb(240,240,240)',\n    'zone maritime': '#98a9d9',\n    'multi-Etat': '#a42e0d',\n    'France (hors région PASA)': '#FED63B',\n\n    'Hambourg': '#F7E0DE',\n    'Duché d\\'Oldenbourg': '#F3D1CE',\n    'Prusse': '#EFC1BD',\n    'Lubeck': '#E7A39C',\n    'Brême': '#EBB2AD',\n    'Mecklenbourg': '#E3938C',\n    'Autriche': '#bd6a62',\n\n    'Grande-Bretagne': '#A07BEE',\n    'Provinces-Unies': '#2759e3',\n    'Danemark': '#8e7bee',\n\n    'Etats-Unis d\\'Amérique': '#EBB2AD',\n    'Pologne': '#804a45',\n    'Russie': '#804a45',\n    'Espagne': '#e35027',\n    'Portugal': '#e35027',\n  }\n}\n\nexport default colorsPalettes;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.285,\"time\":257100,\"words\":857}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <Caller id=\"intro-provinces\" mdxType=\"Caller\" />\n    <p>{`La France du dix-huitième siècle se caractérise par le fort dynamisme des ports et des hinterlands de la façade atlantique, stimulés par le commerce avec les Antilles et une demande européenne en biens de consommation en hausse. La guerre maritime qui commence en 1793 et qui se poursuit pendant plus de vingt ans, entraînant la perte définitive de Saint-Domingue en 1804 et de l’île de France (île Maurice) en 1815, sonne le glas de cette dynamique et déplace le centre de l’économie française vers l’intérieur. `}</p>\n    <p>{`L’étude de cas présentée ici s’intéresse à la navigation et au commerce maritime des côtes poitevines et charentaises à la veille de la Révolution. Cela correspond à la direction des fermes de la Rochelle et à la façade maritime des provinces du Poitou, de l’Aunis, de la Saintonge et de l’Angoumois (région « PASA »). Cette aire possède un dense maillage portuaire, avec une quarantaine de ports en activité. Certains ne font que du cabotage micro-local, d’autres intègrent petit et grand cabotage, d’autres enfin s’adonnent également à une navigation de long-cours. Cette région se prête donc particulièrement à une étude portant sur l’articulation entre les différentes échelles du commerce maritime à l’aube de la Révolution. `}</p>\n    <Caller id=\"intro-ports\" mdxType=\"Caller\" />\n    <p>{`Nous reconstituons l’histoire maritime et commerciale de la région PASA à partir de deux sources historiques. D’une part, nous disposons de traces administratives de la navigation maritime grâce aux redevances qui pèsent sur celle-ci sous l’Ancien Régime. Les registres des congés répertorient les navires à leur départ d’un port et le montant dû, qui varie le plus souvent selon leur tonnage et leur destination. Ces registres, rédigés par les greffiers de l’amirauté locale, ont été numérisés et structurés dans une base de données appelée `}<a href=\"http://navigocorpus.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`Navigocorpus`}</a>{`. Elle compte entre autres plus de 32 000 congés pour l’année 1787 pour l’ensemble des ports français, et quelque 6 900 congés pour 1789 relatifs aux côtes poitevines et charentaises.`}</p>\n    <p>{`Les registres des congés nous permettent de repérer les dates de départ des bâtiments, ainsi que diverses informations relatives à l’objet de leur voyage, leur tonnage, leur capitaine, etc. Ces données ne sont cependant pas dénuées d’incertitude : comme nous le verrons, le tonnage des navires est parfois surestimé dans certains ports. Aussi, dans le cadre de la présente étude, nous avons pris en compte l’itinéraire déclaré par les capitaines de navires au moment du départ, tout en étant conscients que la déclaration ne correspond pas nécessairement au voyage effectif. Les congés permettent toutefois une bonne mesure des trafics de la région de La Rochelle, y compris à toute petite échelle, tout en demandant une attention fine à la dimension d’incertitude inhérente à la source mobilisée.`}</p>\n    <Caller id=\"intro-bureaux\" mdxType=\"Caller\" />\n    <p>{`D’autre part, nous disposons de traces administratives relatives au commerce de la région PASA. La base de données `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/home\" target=\"blank\" rel=\"noopener noreferrer\">{`Toflit18`}</a>{` se fonde sur la numérisation des documents du Bureau de la balance du commerce de 1716 à 1821. Ces documents ont été produits grâce aux services des Fermes : chaque bureau des Fermes enregistrait localement les états de sortie et d’entrée des marchandises entre la France et l’étranger. Plus de 550 000 flux de sortie / entrée ont été documentés dans la base de données Toflit18. La direction des fermes de La Rochelle correspondait à la façade maritime de la région PASA.`}</p>\n    <p>{`Grâce aux données de la base Toflit18, nous sommes en mesure de lister les exports et imports entre les sept différents bureaux de ferme de la région PASA et les partenaires étrangers du royaume de France. Les informations que l’on peut extraire de ces flux sont, entre autres, le nom du produit échangé, la quantité, la valeur, le partenaire commercial, et l’entité administrative ayant enregistré le flux au niveau local. En 1789, elles précisent en outre, sauf pour le commerce de réexportation des denrées coloniales, l’origine du produit commercialisé (ville ou province française, ou État étranger). Elles fournissent donc des informations complémentaires à celles données par les sources relatives à la navigation.`}</p>\n    <div className=\"centered-part\"><div className=\"centered-part-contents\">\n        <Caller mdxType=\"Caller\" />\n        <p>{`Le croisement entre congés de navigation et données du Bureau de la balance du commerce rendu possible par les bases de données Toflit18 et Navigocorpus nous permet de saisir le commerce local, national et international, de préciser les flux et leur valeur pour ce qui est du commerce international, et d’explorer les relations et l’articulation entre les différents trafics de cette région.`}</p>\n        <p>{`La présente étude de cas décrit en trois temps l’histoire de la région PASA à l’aube de la Révolution française. D’abord, nous constatons la relative perte d’importance et de diversité commerciale de la région à la suite de la perte du Canada par le royaume de France durant la guerre de Sept Ans. Nous proposons ensuite une analyse détaillée de la restructuration de la région en relation avec cet événement, selon des filières spécialisées qui associent des ports particuliers avec le commerce de produits spécifiques. Nous démontrons enfin que, bien que dominant dans sa région, le port de la Rochelle ne structure pas en 1789 la région au profit d’un réseau d’échange plus diversifié.`}</p>\n      </div></div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Todo intro en`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"7 min read\",\"minutes\":6.06,\"time\":363600,\"words\":1212}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-1-le-déclin-de-la-région-de-la-rochelle-suite-à-la-perte-du-canada\"\n    }}>{`Partie 1. Le déclin de la région de La Rochelle suite à la perte du Canada`}</h1>\n    <Caller id=\"viz-principale-partie-1\" step={1} mdxType=\"Caller\" />\n    <p>{`Au dix-huitième siècle, la France a pleinement profité du développement des relations économiques entre l’Afrique, l’Amérique et l’Europe. L’ « Atlantique français » reposant sur la traite des Africains et leur exploitation dans les Îles françaises (Antilles et Mascareignes) a connu son apogée juste avant la révolte des esclaves de Saint-Domingue en août 1791 et le début de la guerre maritime avec l’Angleterre en février 1793. L’ancienne région Poitou-Charente, correspondant approximativement aux généralités de Poitou, Aunis, Saintonge et Angoumois (PASA), avait une longue tradition maritime à son actif et était bien située pour bénéficier de cette phase de prospérité. `}</p>\n    <Caller id=\"viz-principale-partie-1\" step={2} mdxType=\"Caller\" />\n    <p>{`L’examen du commerce avec les pays étrangers et les colonies de la direction des Fermes de La Rochelle, qui était leur façade maritime, montre toutefois un dynamisme limité. Il y a bien eu croissance du commerce, mais cette croissance a été plus lente que celle des autres grands ports du royaume. Cela s’explique en grande partie par les relations privilégiées de la direction de la Rochelle avec le Canada. D’une part, celui-ci se développe beaucoup moins vite que les Antilles, et la région souffre de ce manque de dynamisme durant la première moitié du siècle. D’autre part, le Canada est cédé aux Anglais lors du traité de Paris qui clôt la guerre de Sept Ans en 1763. Québec avait déjà été pris en 1759. Cette perte est sévère pour la région dont le commerce entame alors un recul relatif très net. La trajectoire de la région de la Rochelle contraste ainsi avec celles de Bordeaux et de Nantes dans la seconde moitié du siècle. Bordeaux, notamment, est beaucoup plus dynamique que La Rochelle et sa part du commerce français ne cesse d’augmenter jusqu’en 1789. `}</p>\n    <Caller id=\"partie-1-evolution-de-la-part-des-echanges-de-la-rochelle-au-xviiie\" mdxType=\"Caller\" />\n    <p>{`Après une année exceptionnelle en 1747, qui s’explique par l’organisation de convois transatlantiques au départ de La Rochelle escortés par la Marine pour échapper aux prédations britanniques, la direction de La Rochelle effectue 4,6% du total du commerce français en 1750. En 1789 sa part ne représente plus que 2,2%.`}</p>\n    <Caller id=\"viz-principale-partie-1\" step={3} mdxType=\"Caller\" />\n    <p>{`Le recul de La Rochelle n’est pas que quantitatif. En 1750, les données de la direction des Fermes de La Rochelle, chargée de la collecte des droits sur le commerce extérieur et colonial, montrent que cette partie du territoire commerce 21% des types de biens échangés par la France (645 sur 3055, après `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/classification/browser?kind%3Dproduct%26selected%3Dproduct_orthographic%26selectedParent%3Dproduct_source\" target=\"blank\" rel=\"noopener noreferrer\">{`uniformisation des variations orthographiques`}</a>{`). En 1789, elle n’en commerce plus que 7% (248/3565). Cette forte réduction de la typologie des biens commercialisés s’observe à la fois pour les exportations et pour les importations. À un niveau plus agrégé de typologie des produits, parmi les 150 secteurs de la `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/classification/browser?kind%3Dproduct%26selected%3Dproduct_revolutionempire%26selectedParent%3Dproduct_simplification\" target=\"blank\" rel=\"noopener noreferrer\">{`classification ”Révolution et Empire”, utilisée dans le cadre du programme ANR Toflit18`}</a>{`, La Rochelle en commerce 121 en 1750, mais seulement 88 en 1789.`}</p>\n    <p>{`Les exportations sont donc beaucoup plus diversifiées en 1750 qu’en 1789. L’indice de concentration (Herfindhal) est de 0,1 en 1750 et 0,24 en 1789. Un bien pour lequel il n’y a pas beaucoup de concurrence nationale (les eaux-de-vie) et deux denrées coloniales réexportées (le café et le sucre) dominent en 1789 les exportations. Les toiles de coton, souvent réexportées en direction de l’Afrique, viennent en quatrième place, suivies du sel (dont la valeur est faible par rapport au tonnage qu’il mobilise, car c’est une marchandise très pondéreuse). En 1750, la mercerie et les étoffes de laine font partie des cinq principales exportations (avec l’indigo, les eaux-de-vie et le sucre : le sel est en 14e position). `}</p>\n    <Caller id=\"partie-1-produits-importants-pour-la-rochelle\" mdxType=\"Caller\" />\n    <p>{`La direction des Fermes de La Rochelle s’est donc spécialisée dans les produits agricoles et les réexportations de denrées coloniales, aux dépens des biens manufacturés de la région. Ce constat négatif est toutefois nuancé par l’intensité capitalistique de la production d’eaux-de-vie qui la rapproche des biens manufacturés. La spécialisation et l’importance de ce produit d’exportation ressort avec évidence en comparant la part de la direction des Fermes de La Rochelle à la moyenne nationale.`}</p>\n    <p>{`Nous ne connaissons pas la destination des réexportations coloniales en 1789. En les excluant, on constate que la concentration des marchés de la direction des Fermes de La Rochelle est la même en 1750 et en 1789 (entre 0,41 et 0,44), mais que l’Angleterre a pris la place de l’Amérique (terme qui désigne en 1789 essentiellement les Antilles françaises). Cela est confirmé par la distribution des tonnages des navires partant depuis la région PASA vers l’étranger en 1789 : l’Angleterre y a une part très importante.`}</p>\n    <p>{`Pour aller vite, on pourrait résumer en disant que la direction des Fermes de La Rochelle n’exporte plus des biens différenciés vers le Canada, mais essentiellement des eaux-de-vie vers l’Angleterre. Du point de vue de la navigation, le fort tonnage destiné à ce type de commerce est inférieur à celui engagé pour l’exportation du sel vers les mers du Nord et Baltique.`}</p>\n    <p>{`Les données de la navigation collectées ne nous permettent pas de contribuer à l’analyse du déclin de cette région: d’une part, car nous n’avons le détail des sorties que pour la fin de l’Ancien Régime, ce qui empêche une analyse diachronique. D’autre part, car les données collectées pour 1789 n’apportent que des informations limitées pour ce qui est des produits transportés : les congés du port de La Rochelle, par exemple, ne mentionnent pas la nature de la cargaison, alors que dans les autres ports de la région le greffier se limite le plus souvent à noter seulement l’article principal qui compose la cargaison. Les registres des congés indiquent, toutefois, les destinations de chaque navire sorti et cette donnée permet de constater un relatif éclatement des marchés de cette région. `}</p>\n    <Caller id=\"partie-1-ports-destinations\" mdxType=\"Caller\" />\n    <p>{`Sans que l’on puisse affirmer qu’il s’agit d’une nouveauté, la marginalisation de la région vers la fin de l’Ancien Régime est confirmée par son manque de capacité à assurer ses propres trafics. La navigation avec l’étranger est assurée, à 90%, par des pavillons étrangers ou extérieurs à la région étudiée. Il s’agit, pour l’essentiel, des pavillons britannique et nord-européens. Parmi les ports de la région, seul La Rochelle joue un rôle, mais comme nous le verrons (partie 2.1), cette navigation est liée aux activités de traite et au commerce colonial. `}</p>\n    <Caller id=\"partie-1-ports-dattache-vers-etranger\" mdxType=\"Caller\" />\n    <p>{`Cette incapacité de la région à assurer les exportations vers l’étranger n’est pas liée à une absence d’activité maritime : au contraire, si on additionne le total des sorties de navires depuis les ports de la région étudiée en 1789, toute destination confondue, on mesure que les bâtiments régionaux assurent une partie considérable des trafics, supérieure à celle assurée par les navires des autres ports français, alors que la part de la navigation étrangère est très minoritaire. Toutefois, la part de navigation sous pavillon français assurée par les navires de la région étudiée, est inférieure à celle de la plupart des autres provinces françaises: en 1787, les ports de l’Aunis-Saintonge-Poitou assurent 51.6% du tonnage qu’ils expédient, contre 84.3% pour la Bretagne ou 58,7% pour la Guyenne. `}</p>\n    <Caller id=\"partie-1-ports-dattache\" mdxType=\"Caller\" />\n    <p>{`La région n’est donc pas très dynamique, à la fin de l’Ancien Régime, en matière d’armement.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 1 intro`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"17 min read\",\"minutes\":16.185,\"time\":971100,\"words\":3237}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-2-une-forte-spécialisation-portuaire--le-cas-de-la-traite-négrière-du-commerce-du-sel-et-de-leau-de-vie\"\n    }}>{`Partie 2. Une forte spécialisation portuaire : le cas de la traite négrière, du commerce du sel et de l’eau-de-vie`}</h1>\n    <Caller id=\"viz-principale-partie-2\" step={1} highlight=\"toflit18\" filter=\"aucun\" bureaux=\"tous,La Rochelle,Rochefort,Saint-Martin-de-Ré,Les Sables-d'Olonne,Marennes,Charente,Marans,Tonnay-Charente\" mdxType=\"Caller\" />\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <p>{`La région PASA se caractérise par une densité importante de ports qui entretiennent des relations plus ou moins étendues et plus ou moins intenses avec le reste de la France et du monde. L’importance de leurs mouvements maritimes et des tonnages n’est pas directement corrélée à la valeur des marchandises transportées. Ainsi, les deux bureaux des Fermes qui dominent en valeur des exportations sont ceux de La Rochelle, très lié au commerce colonial et négrier, et de Tonnay-Charente, exportateur d’eau-de-vie essentiellement vers la Grande-Bretagne. Par contre, l’activité portuaire de Marennes (exportateur du sel vers les ports de la mer du Nord et de la Baltique) est en tonnage la plus importante de la région mais ses exportations sont de faible valeur. Les importations sont dominées par les ports du bureau des fermes de La Rochelle (c’est à dire, essentiellement, La Rochelle), en raison de la forte valeur des produits coloniaux. La balance du commerce de Rochefort, qui importe des matières premières navales, est très déficitaire.`}</p>\n    <Caller id=\"partie-2-part-navigation-francaise\" mdxType=\"Caller\" />\n    <p>{`Nos analyses ont certes montré que`}<a href=\"https://drive.google.com/file/d/1Lr_7vo2oUHvWWWxNPknVtioLepYmIxLn/view\" target=\"blank\" rel=\"noopener noreferrer\">{` les tonnages enregistrés à Marennes semblent `}</a><a href=\"https://drive.google.com/file/d/1Lr_7vo2oUHvWWWxNPknVtioLepYmIxLn/view\" target=\"blank\" rel=\"noopener noreferrer\">{`surestimés de 20%`}</a>{`, et même de 50% dans 10% des pires cas, mais cela ne remet pas en cause la primauté de ce port. La carte, qui représente le tonnage expédié en 1789, à partir des congés délivrés aux navires, toutes destinations confondues, met en outre en évidence le caractère très internationalisé des transporteurs dans les ports exportateurs de sel vers l’étranger (Noirmoutier et l’île de Ré) et d’eau-de-vie (Tonnay-Charente), ainsi qu’à Rochefort, largement approvisionné par les marines du Nord qui y apportent les matériaux nécessaires à l’arsenal. Ce sont ces transporteurs qui assurent la presque totalité du commerce avec l’étranger (hors traite) de la région PASA. Comme nous le verrons `}<a href=\"https://medialab.github.io/portic-storymaps-2021/fr/page/partie-3\" target=\"blank\" rel=\"noopener noreferrer\">{`dans la partie 3`}</a>{`, La Rochelle n’a plus un rôle structurant pour les ports de cette région: d’autres ports entretiennent des relations avec l’étranger et avec les marchés français, en commercialisant les productions locales, sans que la chaîne logistique ne passe par La Rochelle.`}</p>\n    <p>{`Cette section propose une étude de trois ports de la région à la fin de l’Ancien Régime afin de montrer la diversité des produits qu’ils commercialisent et de leurs marchés. De par ses relations exclusives avec les colonies et surtout son investissement dans la traite négrière, La Rochelle mérite une étude à part. L’importation de quantités considérables de denrées coloniales, majoritairement ré-exportées vers l’Europe du Nord, met ce port dans une situation unique. Pour le commerce des eaux-de-vie, nous étudierons le cas de Tonnay-Charente. La mention de l’eau-de-vie parmi les cargaisons indiquées par les congés étant rare, il faudra se tourner d’abord vers les sources de la Balance du commerce, pour affiner ensuite les données par l’analyse de la navigation. `}</p>\n    <Caller id=\"sorties-de-sel\" mdxType=\"Caller\" />\n    <p>{`Plusieurs autres ports de la région, enfin, se consacrent prioritairement à l’exportation du sel, comme on peut le constater sur le diagramme : Ars-en-Ré, Noirmoutier et surtout Marennes mobilisent de flottes dépassant en 1789 les 10000 tonneaux pour sa commercialisation. Nous développerons ici en détail le cas de Marennes, principal port exportateur de sel, dont la particularité est de miser largement sur l’approvisionnement du marché national.`}</p>\n    <h2 {...{\n      \"id\": \"21-la-rochelle-et-le-commerce-triangulaire\"\n    }}>{`2.1. La Rochelle et le commerce triangulaire`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"colonial\"} highlight=\"toflit18\" bureaux=\"tous,La Rochelle\" mdxType=\"Caller\" />\n    <p>{`Au dix-huitième siècle, les colonies antillaises augmentent très considérablement leur production de sucre, café, indigo et produits tinctoriaux, pour répondre à la hausse de la demande européenne. La croissance de la production passe par un nombre de plus en plus élevé de plantations, qui ont un recours massif à une main-d’œuvre d’esclaves, que les Européens déportent par centaines de milliers depuis l’Afrique dans le cadre de la traite négrière. Ce commerce transatlantique d’êtres humains, achetés sur les côtes d’Afrique par les négriers européens, a commencé au XVe siècle, mais il atteint son apogée au dix-huitième siècle, lorsque 6 millions d’Africains sont déportés aux Amériques. La moitié d’entre eux est vendue aux Antilles. On estime à un million le nombre d’Africains introduits dans les colonies françaises au dix-huitième siècle. La principale destination est la colonie de Saint-Domingue (aujourd’hui Haïti) qui compte, à la veille de la grande révolte de 1791, un demi-million d’esclaves, dont plus de la moitié sont nés en Afrique. Alors que dans la plupart des ports négriers français, la part des armements négriers est nettement inférieure à celle des armements en droiture vers les Antilles, cela n’est pas le cas à La Rochelle: sur les 15 départs de 1789 depuis ce port destinés à approvisionner les Antilles en hommes ou en produits, 12 sont des négriers qui font voile tout d’abord vers les côtes africaines dans le cadre d’un circuit triangulaire.. Comme à Honfleur, il y a donc clairement, en matière de trafics transatlantiques, une spécialisation négrière rochelaise. En 1789, les 12 négriers partis de La Rochelle sont tous armés par des négociants rochelais. Trois autres négriers partent depuis Rochefort. Une `}<a href=\"https://www.slavevoyages.org/voyage/ship%23slave-\" target=\"blank\" rel=\"noopener noreferrer\">{`reconstitution en 3D d’un négrier rochelais`}</a>{` parti en 1784 - le seul négrier dont les plans complets sont conservés - est disponible sur le site Slavevoyages.`}</p>\n    <Caller id=\"viz-principale-partie-2\" filter={\"colonial\"} highlight=\"navigo\" bureaux=\"tous,La Rochelle\" minTonnage=\"100\" mdxType=\"Caller\" />\n    <p>{`L’activité négrière est aux mains d’armateurs privés qui espèrent réaliser un profit lors de la revente des captifs aux Antilles. Si Nantes est le principal port négrier français, La Rochelle a joué un rôle significatif, tout particulièrement dans les années 1730–1740 : entre 1713 et 1744, La Rochelle arme 15% des expéditions négrières françaises; sa part tombe à 11% après la perte du Canada. Alors que La Rochelle est le deuxième port négrier le plus important en France avant 1763, il passe au quatrième rang par la suite.`}</p>\n    <p>{`Malgré un déclin relatif, l’activité négrière rochelaise augmente en termes absolus : les armateurs rochelais passent de 4,3 armements négriers par an pour la période 1713–1744 à 12,5 armements par an dans la décennie 1783–1793. Pendant cette dernière décennie, la traite est véritablement l’activité principale, voire presque exclusive, des armateurs rochelais : en 1789, sur un total de 200 départs depuis le port de La Rochelle de navires armés par des Rochelais, un peu plus de la moitié des tonnages se dirigent vers l’Afrique (42% du total) ou vers les colonies antillaises ou les Mascareignes, le reste se répartissant entre Terre-Neuve et Saint-Pierre-et-Miquelon (9.2%) La part des armements vers l’étranger est insignifiante (0.2%), et celle hors des ports limitrophes (Aunis, Poitou, Saintonge) ne dépasse pas le 5%. Les trois quarts de la trentaine de navires rochelais dépassant le 50 tonneaux (le plus grand faisant 827 tonneaux) sortis du port de La Rochelle en 1789 se consacrent au commerce transatlantique et négrier. `}</p>\n    <p>{`Dès lors qu’on écarte la poussière des caboteurs, l’importance des destinations africaines et des colonies est lisible sur ce schéma, qui représente les destinations des navires sortis du port de La Rochelle en 1789, tout port d’attache confondu. Tous les navires qui se dirigent vers les Amériques, les Antilles ou l’océan Indien sauf un sont par ailleurs armés par des armateurs de La Rochelle. `}</p>\n    <p>{`Au total, dans les dernières années de l’Ancien Régime, une douzaine de navires reviennent chaque année à La Rochelle depuis les colonies, soit en droiture, soit (et surtout) de retour d’une expédition négrière après une étape aux Antilles. Les données de la Balance du commerce confirment la centralité du commerce colonial et négrier : en 1789, les exportations vers l’Afrique représentent 23% du total des exportations du bureau des Fermes de La Rochelle, alors que 73% est constitué par les ré-exportations des denrées coloniales. La valeur des produits ramenés est estimée, en 1789, à 7,1 millions de livres tournois, dont 5,1 sont réexportés à l’étranger. Les négociants rochelais semblent s’être taillés une position forte dans le marché du café, ce qui peut s’expliquer par leurs liens quasi-exclusifs avec Saint-Domingue où plusieurs grandes familles de la ville (Belin, Garesché, Poupet Rasteau) sont très bien implantées. Saint-Domingue fournit en effet la presque totalité du café importé en France depuis les Antilles.`}</p>\n    <Caller id=\"partie-2-carte-direction-bateaux-de-la-rochelle\" mdxType=\"Caller\" />\n    <p>{`Si les données collectées par la Balance du commerce ne permettent pas de connaître les destinations des réexportations coloniales rochelaises, les destinations des navires qui quittent le port en 1789 nous en donnent une indication approximative. Les Pays-Bas autrichiens (actuelle Belgique), les Provinces-Unies, Brême, Hambourg, les ports de la Baltique reçoivent chacun des navires totalisant entre 500 et 550 tonneaux. Parmi les autres destinations européennes des navires partis de La Rochelle, seule la Grande-Bretagne (1 048 tonneaux) n’est vraisemblablement pas destinataire des produits coloniaux, car elle s’approvisionne dans ses propres colonies. `}</p>\n    <p>{`Dès lors, il n’est pas surprenant que le négoce rochelais porte toute son attention aux questions liées au commerce colonial et négrier. Cela apparaît clairement parmi les sujets discutés par la chambre de commerce de La Rochelle. L’indexation faite à la main, à l’époque, sur la marge des registres de délibérations de la Chambre de Commerce de La Rochelle permet de constater que dans la seule année 1789, le commerce d’Afrique est discuté à une trentaine de reprises, et les colonies à une cinquantaine de reprises, le commerce de l’Inde à 9 reprises; à titre de comparaison, le commerce avec l’étranger est abordé 11 fois en tout, et la pêche (avec notamment la question de la concurrence et de l’admission de la pêche états-unienne, très débattue cette année là en France), 17 fois. Parmi les produits indexés en marge des registres de délibérations, les comestibles sont mentionnés 16 fois - ce qui dans la conjoncture céréalière particulière de l’époque n’est guère étonnant-, l’eau-de-vie et le vin 6, les sucres et les raffineries 8, le charbon de terre 3. On mesure, en dépit d’un critère sans doute grossier, que le regard des membres de la Chambre de commerce est clairement rivé sur les colonies et la traite. `}</p>\n    <p>{`Si la question de la traite semble absente des cahiers de doléances de la région (l’analyse porte sur un échantillon de 163 cahiers sur les 522 rédigés dans l’ensemble de la région PASA), la défense des intérêts coloniaux apparaît, significativement, uniquement dans le cahier de doléances du tiers état de la ville de La Rochelle, dont les représentants envoyés à Versailles « demanderont la révocation de l’arrêt rendu au conseil du roi, le 30 août 1784, concernant le commerce étranger dans les colonies, et le rétablissement des dispositions des lettres patentes de 1717 et 1727, auxquelles on est redevable des progrès qu’ont faits la navigation françoise et la culture des isles françoises de l’Amérique ». L’arrêt en question est celui qui a élargi l’exclusif mitigé, introduit en 1767, en facilitant l’approvisionnement des colonies par les navires étrangers dans des conditions restrictives précises. L’admission de navires étrangers aux colonies a provoqué les protestations de toutes les chambres du commerce de France concernées par le commerce colonial, car le négoce français refuse toute concurrence. Ce qui est intéressant c’est toutefois que nous ne sommes pas ici dans le cadre d’un document qui émane de la Chambre de commerce ou d’un groupe d’armateurs: le cahier de doléances du tiers état de La Rochelle se fait donc le porte-parole des intérêts du négoce colonial français, et demande également des lois interdisant la réexportation des sucres bruts afin d’encourager les raffineries locales. Enfin « les députés demanderont la révocation de l’arrêt du 14 avril 1785 , qui a créé une nouvelle compagnie des Indes et de celui pour l’admission des étrangers dans les isles de France et de Bourbon » (c’est -à-dire à l’île Maurice et à la Réunion), même si pendant l’époque du commerce libre (1769–1785), les armements vers l’océan Indien ou la Chine depuis La Rochelle (26) ont été inférieurs à ceux de Nantes (44), Bordeaux (41), Marseille (42) ou Saint-Malo (32) et bien sûr de Lorient (120). `}</p>\n    <p>{`La participation rocheloise à la navigation au-delà du cap de Bonne-Espérance à la fin de l’Ancien Régime est en effet modeste: l’état des exportations de 1789, n’indique que des exportations vers l’Inde d’une valeur de 38 060 livres tournois, et rien vers les Mascareignes. Ces données semblent toutefois incompatibles avec le départ du navire Henri IV pour l’île de France et l’île Bourbon, le 9 mai 1789, qui arrive à bon port en février 1790, et qui n’est pas un négrier `}{`[`}{`Toussaint, 1967, p. 291`}{`]`}{` à moins que sa cargaison ne vienne entièrement d’autres directions de Fermes du royaume. En 1787, ce sont trois navires qui partent de La Rochelle vers les Mascareignes : une certaine diversification des armements coloniaux apparaît donc, ici comme à Bordeaux, dans les années 1780, lorsque la baisse des profits du commerce antillais incite à chercher des investissements plus rentables.`}</p>\n    <h2 {...{\n      \"id\": \"22-le-commerce-de-leau-de-vie\"\n    }}>{`2.2. le commerce de l’eau-de-vie`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"eau-de-vie\"} bureaux=\"Charente, Saint-Martin-de-Ré, Rochefort,Tonnay-Charente\" mdxType=\"Caller\" />\n    <p>{`Les congés de navigation ne sont malheureusement pas de beaucoup de secours pour identifier les flux d’eau-de-vie. En effet, le greffier du port de Tonnay-Charente ne prend pas le soin d’annoter les cargaisons (il le fait 12 fois sur un total de 601 départs): nous avons donc un aperçu global de la navigation, sans pouvoir distinguer la nature des produits. L’analyse menée sur les sorties de l’année 1787 permet toutefois d’identifier les réseaux commerciaux. 67 navires de tonnage moyen, proche de 100 tx, quittent alors Tonnay-Charente : 42 se rendent à l’étranger (en Angleterre pour les deux tiers, le reste vers les îles anglo-normandes, Ostende et la Baltique) ; les 25 gros caboteurs restants se rendent à Dunkerque. On identifie ici la flotte européenne de l’eau-de-vie, qui représente 22% du tonnage sortant en 1787. Un cran en dessous, on identifie un second groupe, composé d’une poussière de petits caboteurs (tonnage moyen 35 tx) et qui représente tout de même 30% du tonnage sortant. Ces navires sont alignés sur une destination unique: La Rochelle. Ils sont pour partie occupés à l’approvisionnement de la ville et peut-être à un commerce régional ou national: en revanche, La Rochelle a perdu le rôle d’entrepôt pour le commerce international de l’eau-de-vie qu’elle avait dans les années 1730. Les principales maisons de négoce d’eau-de-vie, en particulier Martell, n’ont plus de bureaux à La Rochelle en 1789: leurs bureaux principaux ont été rapatriés à Tonnay-Charente et/ou déplacés à Paris. Enfin, des unités plus modestes (25 tx en moyenne) évoluent au sein de la mer des Pertuis (depuis la Seudre sud jusqu’aux Sables d’Olonne) : elles représentent 23% du tonnage à la sortie du port de Tonnay-Charente. Il faut remarquer que 479 de 743 congés délivrés en 1787 dans ce port concernent les navires avalant et attachés à des ports fluviaux. Venus porter les eaux-de-vie mais aussi les pierres de carrière et les produits manufacturés de l’arrière-pays à Tonnay-Charente, leurs maîtres quittent ce port soit à vide, soit avec une cargaison destinée à Rochefort, La Rochelle ou bien aux ports de la mer des Pertuis, qui leur fournissent un fret de retour pour leur navigation vers l’amont du fleuve Charente. `}{`]`}</p>\n    <Caller id=\"exports-eau-de-vie-la-rochelle-longitudinal\" mdxType=\"Caller\" />\n    <p>{`Les exportations d’eau-de-vie charentaise en 1789 sont très supérieures à la moyenne séculaire. L’explication réside en partie dans les modifications induites par le Traité d’Eden de 1786, qui entraîne une augmentation extrêmement importante des exportations d’eau-de-vie vers l’Angleterre, notamment des eaux-de-vie de qualité produites dans la région de Cognac, au détriment de celles de moindre qualité. Le total des exportations d’eaux-de-vie françaises vers la Grande-Bretagne passe de 10 à 15 millions de livres tournois dans les années 1760–70, à 40 millions en 1787–89.`}</p>\n    <Caller id=\"exports-eau-de-vie-comparaison-directions-des-fermes\" mdxType=\"Caller\" />\n    <p>{`La Rochelle domine les exportations d’eaux-de-vie françaises en 1750, mais est dépassée par Bordeaux en 1770, qui exporte, en concurrence avec la Direction des fermes de la Rochelle, des eaux-de-vie de l’Angoumois. Par contre, l’explosion des exportations vers l’Angleterre permise par le traité Eden-Reynald de 1787 bénéficie beaucoup plus à La Rochelle qu’à Bordeaux. Nantes stagne alors que les exportations depuis Bayonne et Montpellier croissent.`}</p>\n    <Caller id=\"origines-exports-eau-de-vie-1789-la-rochelle\" mdxType=\"Caller\" />\n    <p>{`Parmis les zones de production, l’Angoumois domine, suivi par l’Aunis. Les valeurs exportées en eaux-de-vie double (ie à teneur d’alcool plus élevé) sont comparables à celles de eaux-de-vie simples. La dénomination « eaux-de-vie double » n’existe que dans les chiffres de 1788 et 1789 et que dans les données issues de la région PASA, indiquant peut-être les progrès des techniques de distillation dans la région.`}</p>\n    <h2 {...{\n      \"id\": \"23-marennes-et-le-commerce-du-sel\"\n    }}>{`2.3. Marennes et le commerce du sel`}</h2>\n    <Caller id=\"viz-principale-partie-2\" filter={\"sel\"} bureaux=\"Saint-Martin-de-Ré, Marennes\" mdxType=\"Caller\" />\n    <p>{`Denrée pondéreuse de faible valeur, le sel voyage dès que cela est possible par voie maritime. Les côtes de la région PASA sont, comme celles du sud de la Bretagne, de très grands producteurs de sel. Marennes est un port désigné comme fournisseur par l’administration des gabelle il approvisionne entre autres les greniers à sel de Libourne, de Honfleur, et de Saint-Valéry-sur-Somme. Ses marchés sont donc avant tout nationaux - avec une demande soutenue notamment dans les ports de la Manche qui arment à la grande pêche. L’étranger (pays de la mer du Nord et du pourtour de la Baltique) y est un partenaire moins important que pour Saint-Martin-de-Ré ou Noirmoutier. `}</p>\n    <Caller id=\"sorties-de-marennes\" mdxType=\"Caller\" />\n    <p>{`C’est pourquoi, en quantité, le bureau des fermes de Marennes est le principal exportateur de sel en France, si l’on inclut aussi les livraisons vers les ports francs français. Il vient en troisième position, derrière les bureaux du Croisic et de Saint-Martin-de-Ré, si on se limite aux marchés extérieurs au royaume.`}</p>\n    <p>{`Les valeurs en jeu ne sont pas élevées comparées à celles des flux commerciaux dont il a été question pour La Rochelle et Tonnay-Charente: le sel exporté depuis Marennes, y compris à destination des ports francs français, se chiffre autour de 360,000 livres tournois en 1789 (dont 141,000 vers l’étranger). En revanche, son commerce alimente un mouvement portuaire extrêmement intense, qui fait de Marennes, en termes de nombre de navires sortis et de leur tonnage, le principal port de la région étudiée. Son commerce maritime est donc une activité importante, tant pour la production locale qu’il soutient, que pour l’activité induite liée à son transport (construction navale, emploi maritime). Comme on l’a vu plus haut (partie 1), les transporteurs ne sont pas de Marennes même, et les retombées concernent donc aussi bien les ports de cabotage de la région que ceux du littoral atlantique français.`}</p>\n    <Caller id=\"viz-principale-partie-2\" filter={\"sel\"} highlight=\"navigo\" bureaux=\"Saint-Martin-de-Ré, Marennes\" mdxType=\"Caller\" />\n    <p>{`Les données sur la navigation aident à préciser la géographie commerciale du sel exporté, même si elles n’indiquent pas les quantités exportées. À compter du règne de Louis XIV, la législation relative aux gabelles fait obligation au chargeur de naviguer avec une cargaison complète. Le tonnage des navires chargés de sel est donc un assez bon indicateur des quantités exportées. Les congés confirment que, parmi les ports exportateurs de la région étudiée, la primauté revient incontestablement à Marennes: en 1787, le tonnage additionné de navires sortis de ports français avec du sel y est de plus du double qu’à Ars-en-Ré, le deuxième grand exportateur de la région. Même en prenant en compte la surévaluation des tonnages de navires à Marennes, que nous avons constatée en comparant le tonnage d’un même navire relevé en plusieurs ports, Marennes demeure le principal fournisseur de sel en France. `}</p>\n    <p>{`L’exportation de sel est en outre une activité quasi exclusive à Marennes : sur 1174 départs en 1787, 990 ont chargé du sel. En 1789, ce sont 1301 sur 1481. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"introduction\",\n    level: 2,\n    title: \"Introduction\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"21-la-rochelle-et-le-commerce-triangulaire\",\n    level: 2,\n    title: \"2.1. La Rochelle et le commerce triangulaire\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"22-le-commerce-de-leau-de-vie\",\n    level: 2,\n    title: \"2.2. le commerce de l’eau-de-vie\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"23-marennes-et-le-commerce-du-sel\",\n    level: 2,\n    title: \"2.3. Marennes et le commerce du sel\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 2 TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.24,\"time\":494400,\"words\":1648}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"partie-3-la-rochelle-port-dominant-mais-pas-structurant\"\n    }}>{`Partie 3. La Rochelle, port dominant mais pas structurant`}</h1>\n    <Caller id=\"viz-principale-partie-3\" step={1} mdxType=\"Caller\" />\n    <p>{`En 1789, les navires qui sortent des ports exportateurs de sels (Marennes, Rochefort, Ars-en-Ré) ont un tonnage moyen plus important que ceux sortant de La Rochelle. De manière plus surprenante, la quantité de navires qui sortent des ports secondaires - Aligre, Charente, Marennes, Saint-Martin de Ré, voire même Rochefort - témoigne d’un dynamisme qui échappe largement au port dominant, La Rochelle. Cette particularité s’inscrit dans une histoire maritime longue de la région PASA.`}</p>\n    <p>{`Jusqu’à la perte des colonies nord-américaines, le port de La Rochelle a cultivé une certaine spécificité géographique. Quoique le port de La Rochelle pratiquait, comme la presque totalité des ports atlantiques, le commerce antillais et négrier, une part importante et qui a progressivement augmenté jusqu’à représenter plus de la moitié de ses armements pour les colonies dans les années 1750 était constituée par le commerce nord-américain - Canada, Louisiane et pêcheries de Terre-Neuve. Cette spécificité géographique a également influé sur sa spécialisation par produits. Le commerce des fourrures est ainsi une spécialité rochelaise jusqu’au début des années 1760. Les fourrures étaient importées non seulement du Canada, mais aussi de la Louisiane, porte de sortie des peaux de l’Ohio. Ces fourrures étaient pour partie ré-exportées en France et en Europe (principalement vers l’espace allemand et en Suisse). Une part importante, les peaux de castors en particulier, n’était pas réexportée, mais alimentait l’industrie de chamoiserie niortaise et d’autres localités françaises. En retour, les Rochelais approvisionnaient les Canadiens et la Louisiane en vivres, matières premières et en produits manufacturés. L’Amérique du Nord était donc un débouché important et facile pour les céréales de la région, les étoffes locales de basse qualité et, dans une moindre mesure, le sel nécessaire aux pêcheries de Terre-Neuve. Ce commerce quoique modeste avant les années 1740 fournissait des volumes importants d’emploi dans ces trois secteurs de l’économie régionale et contribuait à faire du port de La Rochelle le centre de gravité du complexe portuaire régional. Cette domination était renforcée par la prépondérance des capitaux rochelais, investis de manière prioritaire dans le commerce Atlantique - nord-américain et antillais. La domination rochelaise se mesurait notamment au début du siècle par la présence des bureaux principaux des maisons de Cognac à La Rochelle. Mais, dès la crise qui suivit la chute du système de Law, La Rochelle commença à perdre sa place et Tonnay-Charente à s’affirmer comme le principal port d’exportation de l’eau-de-vie produite dans la région, et du Cognac en particulier. `}</p>\n    <Caller id=\"viz-principale-partie-3\" step={2} mdxType=\"Caller\" />\n    <p>{`Ainsi, même si le port de la Rochelle a l’ascendant sur les autres ports de la région par la diversité des produits qu’il importe et exporte et, surtout, par son activité dans le commerce atlantique, les échanges des ports de la région sont largement autonomes comme le montre le réseau des voyages de la région PASA de 1787 comparé à ceux des deux autres régions situées au nord (la Loire-Atlantique) et au sud (l’Aquitaine). Les indices de centralité (la « betweeness centrality » ou « centralité d’intermédiarité » compte le nombre de plus courts chemins entre deux ports passant par le port donné ; le « pagerank » mesure la connexion relative à des ports eux-mêmes bien connectés. Voir `}<a href=\"https://fr.wikipedia.org/wiki/Centralit%25C3%25A9\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"https://fr.wikipedia.org/wiki/Centralit%C3%A9\"\n        }}>{`https://fr.wikipedia.org/wiki/Centralit%C3%A9`}</a></a>{`) comparées à ceux d’autres régions dominées par un port central (Sud-ouest Atlantique, Normandie, Loire-Atlantique) confirment la relative faiblesse de La Rochelle et son incapacité à structurer les trafics maritimes locaux comme nous l’avons illustré dans la partie 2 avec les exemples de la traite, du commerce des eaux-de-vie et du commerce du sel.`}</p>\n    <p>{`Ce constat peut être lié historiquement à la perte des colonies nord-américaines (Canada et Louisiane) qui a brisé une dynamique vertueuse qui s’était établie dans les années suivant la guerre de succession d’Autriche. En effet, avant 1748, le commerce des Antilles en droiture et la traite négrière continuaient à dominer le commerce de la Direction de la Rochelle en valeur, étant donné le dynamisme limité de la demande émanant de l’Amérique du Nord. Mais, dès la fin de la guerre de Succession d’Autriche, s’ouvre une période de croissance exceptionnelle pour le commerce avec l’Amérique du Nord. Sur la période 1748–1758, La Rochelle reçoit annuellement plus de 1 300 000 livres de peaux d’Amérique du Nord, soit presque autant en valeur que de sucre des Antilles (1 450 000 livres). Le nombre d’armements à destination du Canada est multiplié par deux alors que celui pour la Louisiane augmente de moitié. Par rapport aux années précédant la guerre, le trafic lié au commerce triangulaire baisse en moyenne d’un quart pour les Antilles et de plus de la moitié pour la traite, destinations pour lesquelles les envois rochelais sont directement en concurrence avec des ports comme Bordeaux, Nantes, Rouen et même Dunkerque et Marseille. A l’inverse, les Rochelais ont un monopole de fait pour la Louisiane qui n’intéresse guère les ports plus importants et seul Bordeaux les concurrence pour l’approvisionnement du Canada. Par ailleurs, ces deux destinations offraient des possibilités complémentaires. D’un côté, le commerce à destination du Canada pouvait se transformer en commerce triangulaire inversé - La Rochelle-Canada-Antilles - lorsque les capitaines rochelais trouvaient au Canada de quoi ravitailler les îles à sucre en morue salée et, plus rarement, en céréales. La Louisiane permettait également de réaliser des opérations de contrebande avec les colons espagnols, offrant la possibilité de riches retours sous forme de piastres (Augeron : 2004; Mathieu : 1991).`}</p>\n    <Caller id=\"viz-principale-partie-3\" step={3} mdxType=\"Caller\" />\n    <p>{`Ce commerce de niche, limité en volume, mais créateur d’emplois locaux et, au milieu du siècle, facteur d’un dynamisme certain, s’écroule avec la perte des colonies françaises nord-américaines à la fin de la guerre de Sept Ans. Cette perte déstructure durablement le commerce rochelais qui perd ses marchés privilégiés et sa position dominante au sein du réseau portuaire régional. En 1789, le commerce du port de la Rochelle est quasi exclusivement colonial : près de 90% de ses exportations en valeur sont destinées à la traite africaine et aux Antilles. Son impact dans la structuration de la région étudiée apparaît faible, alors que les autres bureaux de Fermes de la région exportent essentiellement des produits régionaux, cela n’est pas le cas dans le bureau de La Rochelle. D’autres ports, par ailleurs, sont nettement plus « extravertis » en termes de navigation. Le profil de La Rochelle devrait s’apparenter à celui des autres grands ports coloniaux, à cela près que Bordeaux exporte une partie consistante de produits régionaux de son arrière-pays, qu’il contribue à structurer. Le Havre et Nantes, comme La Rochelle, n’exportent pas, eux, essentiellement des produits de leur région. La part des voyages internes à la région est en revanche importante pour La Rochelle, mais cela reflète plus les nécessités de l’approvisionnement de la ville et de la région qu’un rôle d’entrepôt pour l’exportation. Ainsi, à titre d’exemple, le total du tonnage expédié du seul port de Ribérou-Saujon en 1789 vers La Rochelle avec de la chaux est de 1640 tonneaux. Quant à la quarantaine de navires qui s’y rendent depuis Marennes, ils ont à bord du vin, des eaux-de-vie, du bois, des fèves, des huîtres, des meubles, des passagers, ou naviguent à vide.`}</p>\n    <p>{`Les graphiques que nous proposons illustrent fidèlement nos propos. Ce déclin se donne à voir, à la veille de la Révolution, sur le graphique en début de section, où l’infrastructure de la région PASA apparaît originale par le faible poids relatif de son port principal - La Rochelle - incapable de freiner le développement des ports qu’il maintenait dans sa dépendance avant 1763: Tonnay-Charente, Marennes, Rochefort et Ars-en-Ré. Dans la période pré-révolutionnaire (1787–1789), les flux de navires comme de marchandises témoignent ainsi de la recomposition de l’économie de la façade maritime. Désormais, la valeur des flux de marchandises au départ de Tonnay-Charente et à l’arrivée de Rochefort, qui entretient directement les productions locales, se rapproche de ceux de La Rochelle.`}</p>\n    <p>{`Cette évolution est la conséquence de plusieurs contraintes qui se renforcent: la baisse de la capitalisation des négociants rochelais, conséquence directe de la vague de faillites qui secouent le milieu à la fin de la guerre de Sept Ans; la fermeture des marchés nord-américains subventionnés qui auraient permis un rebond rapide; la forte concurrence des autres ports sur la destination antillaise. Il ne restait donc que la traite négrière. Pour l’animer, les négociants rochelais se procurent les marchandises nécessaires à ce commerce dans toute la France et l’Europe et ne se fournissent que très peu dans l’arrière-pays rochelais. Le port n’est donc pas le point de passage obligé de son arrière-pays dans les relations avec le grand large, et ce, d’autant plus, que la faiblesse capitalistique de la place éloigne les maisons de commerce spécialisées dans le Cognac; ainsi Martell qui rapatrie leurs bureaux principaux à Tonnay-Charente ou à Paris. Même dans le commerce colonial, La Rochelle doit faire une place aux autres ports de la région puisque Rochefort se voit accorder l’autorisation de faire le commerce colonial, témoignant du déclin économique et politique du port.`}</p>\n    <p>{`Pour conclure, La Rochelle reste en 1789 un port relativement dominant dans la région, notamment en ce qui concerne le commerce atlantique, mais cette domination a largement diminué au cours du siècle. De plus, la spécialisation des ports de la région dans le sel pour les uns (Marennes, Rochefort, Ars-en-Ré), dans l’eau-de-vie pour les autres (Tonnay-Charente et, dans une moindre mesure, les ports de l’île de Ré), n’est plus articulée par la place de La Rochelle. Le commerce colonial ne s’appuie plus sur le réseau des ports et des places manufacturières locales, mais survit grâce aux capitaux et aux marchandises venus d’ailleurs.`}</p>\n    <Caller id=\"partie-3-comparaison-exports-coloniaux\" mdxType=\"Caller\" />\n    <p>{`Les guerres de la Révolution et napoléoniennes ont par la suite démontré la fragilité et l’artificialité d’un tel dispositif. Le blocus anglais et l’interdiction de la traite transatlantique sonnent pour le port de la Rochelle le glas de son destin de grand port commercial. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.015,\"time\":900,\"words\":3}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Part 3 TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"17 min read\",\"minutes\":16.105,\"time\":966300,\"words\":3221}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"à-propos\"\n    }}>{`À propos`}</h1>\n    <p>{`Le présent site a été réalisé dans le cadre du `}<a href=\"https://anr.portic.fr/\" target=\"blank\" rel=\"noopener noreferrer\">{`programme de recherche ANR PORTIC`}</a>{`. Ce programme porte sur les dynamiques de navigation et du commerce extérieur au dix-huitième siècle, un commerce qui s’effectue largement par voie maritime. Outre la meilleure compréhension de ces dynamiques par le croisement de deux jeux de données, un enjeu fondamental du programme est de chercher des méthodes de qualification et d’appréhension de l’incertitude des données historiques, en expérimentant des modes de visualisation et d’écriture appropriés.`}</p>\n    <p>{`Dans ce cadre, le Working Package n°5 de ce programme de recherche consiste à effectuer une série d’études de cas tirant parti de deux corpus existants de sources historiques numérisées : `}<a href=\"http://navigocorpus.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`Navigocorpus`}</a>{`, une base de données portant sur l’histoire de la navigation pilotée par Silvia Marzagalli et Christine Plumejeaud ; et `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/home\" target=\"blank\" rel=\"noopener noreferrer\">{`Toflit18`}</a>{`, une base de données portant sur le commerce extérieur de la France, pilotée par Loïc Charles et Guillaume Daudin.`}</p>\n    <p>{`Ce site web s’inscrit dans un mouvement second faisant suite aux premières entreprises de numérisation pour chacune des deux bases, en tentant de valoriser le travail déjà accompli via l’étude approfondie de sous-ensembles signifiants dans les données. Ces études éclairent des questions disciplinaires existantes sous un nouveau jour grâce aux nouveaux matériaux et méthodes offerts par les bases de données mobilisées par le programme. Les questions soulevées par une telle initiative sont multiples :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Comment mobiliser ensemble deux sources dont certaines dimensions sont incommensurables ou difficiles à mettre en équivalence ? Comment croiser les données numérisées des deux bases avec des connaissances plus denses et qualitatives sur les phénomènes étudiés, apportées par des historiens spécialistes de la région étudiée ? `}</li>\n      <li parentName=\"ul\">{`Comment prendre en compte, au moment de l’enquête et du raisonnement, l’importante stratification de transformations, de réductions et de décisions interprétatives constituant la chaîne qui relie les sources initiales avec les données qui en ont été tirées ? `}</li>\n      <li parentName=\"ul\">{`Comment prendre en compte l’incertitude ou l’incomplétude des données tout en proposant une analyse scientifiquement solide des phénomènes étudiés ? `}</li>\n      <li parentName=\"ul\">{`Comment faire dialoguer les formes classiques de l’écriture historique - le récit déployé phrase après phrase, l’argument déroulé paragraphe par paragraphe - avec les formes d’écriture diagrammatique et computationnelle qu’implique la réalisation d’un site web ? `}</li>\n      <li parentName=\"ul\">{`Comment gérer la collaboration interdisciplinaire et la partition d’expertises qu’implique une telle écriture multimodale ?`}</li>\n    </ul>\n    <p>{`Toutes ces questions ont été travaillées lors des six mois de collaboration qui ont mené à l’élaboration de ce site, dont voici un bref récit.`}</p>\n    <h2 {...{\n      \"id\": \"dune-série-de-questionnements-à-une-semaine-denquête\"\n    }}>{`D’une série de questionnements à une semaine d’enquête`}</h2>\n    <p>{`L’étude de cas dont ce site est l’aboutissement a été articulée autour d’un format de collaboration intensive que nous appelons datasprint et qui consiste à faire travailler ensemble des expert.e.s de plusieurs disciplines sur un temps court et avec des questions de recherche déterminées à l’avance, sur la base d’un ou plusieurs jeux de données préparés pour l’occasion.`}</p>\n    <p>{`En amont du datasprint, nous avons conduit pendant plusieurs mois un double travail de préparation des données, et de préparation des questions de recherche. Sur le plan des données, les équipes de navigo et de toflit18 données ont dû effectuer un important travail de nettoyage et d’affinement concernant les régions et les périodes étudiées : le fait de projeter une étude de cas précise a fait émerger des problèmes qui étaient restés dans l’ombre faute de besoin d’un réexamen approfondi. Un travail très important a également été effectué pour « aligner » les deux bases, c’est-à-dire pour mettre en correspondance les lieux et les types de produits commercés ou transportés tels qu’ils sont décrits dans chacune des bases.`}</p>\n    <p>{`Sur le plan de la préparation des questions de recherche de départ, nous avons conduit une série de réunions préliminaires reliées par des documents en ligne rédigés collaborativement, qui nous ont aidé à identifier des questions à la fois pertinentes en regard de l’histoire de la région et de la littérature existante, mais aussi de ce que les données nous permettaient - ou pas - d’explorer et de visualiser. Ce travail d’ajustement et de mise en correspondance entre les questions et les données a ainsi couru d’octobre 2020 à avril 2021, et nous a permis à la fois d’identifier les activités d’exploration les plus pertinentes à proposer aux participants durant l’atelier, et d’éviter les chausses-trappes qui nous auraient conduit dans des questionnements impossibles à résoudre.`}</p>\n    <p>{`De ce travail de préparation est né un document de questionnement scientifique destiné à expliciter les questions de recherche à explorer partagé à tous les participant.e.s de la semaine de datasprint. Ainsi, au début du datasprint, l’étude de cas était structurée en deux groupes, correspondant à deux lignes d’enquête complémentaires mais aussi à la constitution de deux équipes équilibrées pour la collaboration :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`la première équipe devait se consacrer à étudier le dynamisme de la région du Poitou par rapport à la France et au monde en général (avec l’hypothèse d’un déclin par rapport au reste de la France au cours du dix-huitième siècle)`}</li>\n      <li parentName=\"ul\">{`la seconde équipe devait se consacrer à étudier les relations de complémentarité et de domination entre ports de la région, de manière notamment à distinguer les flux et circuits commerciaux qui y sont associés`}</li>\n    </ul>\n    <p>{`Sur cette base, un « kit de bienvenue » a été conçu pour permettre à tou.te.s les expert.e.s de rapidement saisir les multiples dimensions de l’atelier, et nous avons conduit quelques enquêtes préliminaires permettant de résoudre les questions les plus évidentes pour tirer le meilleur parti possible de la concentration d’expertises multiples sur le temps court et très dense du datasprint.`}</p>\n    <h3 {...{\n      \"id\": \"faire-avec-les-conditions-de-recherche\"\n    }}>{`Faire avec les conditions de recherche`}</h3>\n    <p>{`La semaine du datasprint, qui a eu lieu début avril 2021, s’est avérée coïncider avec un moment de forte reprise de l’épidémie de covid-19 en France en général et à Paris en particulier. Cela nous a contraint à effectuer l’atelier en ligne. Conduire un datasprint en ligne revenait à se priver de l’incommensurable apport des échanges informels et autres possibilités d’affichage, de circulation et de spatialisation offerts par le travail dans un même lieu physique. À cette contrainte s’est ajoutée la subite fermeture des écoles maternelles et primaires ladite semaine, qui a occasionné une sérieuse charge extra-professionnelle pour une part substantielle des participant.e.s.`}</p>\n    <p>{`Le datasprint a néanmoins eu lieu, et nous avons décidé de considérer les conditions particulières dans lesquelles il s’est conduit non seulement comme des contraintes demandant de recalibrer drastiquement nos attentes, mais aussi comme des occasions d’invention et d’expérimentation appelant à adapter nos manières de procéder par rapport aux modalités initialement planifiées.`}</p>\n    <h3 {...{\n      \"id\": \"improvisations-et-adaptations\"\n    }}>{`Improvisations et adaptations`}</h3>\n    <p>{`Durant le datasprint, la diversité des compétences des participant.e.s a impliqué de remettre à plat la répartition des tâches. Ainsi, chacun a pu être amené à suggérer des pistes de recherche, manipuler les données, et se pencher sur l’analyse et la mise en forme des résultats. Cette semaine a notamment été l’occasion d’expérimenter avec un grand nombre de technologies utilisées durant les activités d’enquête, notamment `}<a href=\"https://jupyter.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`jupyter notebook`}</a>{`, `}<a href=\"https://kepler.gl/\" target=\"blank\" rel=\"noopener noreferrer\">{`kepler.gl`}</a>{`, `}<a href=\"https://vega.github.io/vega/\" target=\"blank\" rel=\"noopener noreferrer\">{`vega`}</a>{`, ou encore `}<a href=\"https://matplotlib.org/\" target=\"blank\" rel=\"noopener noreferrer\">{`matplotlib`}</a>{`. Nous avons néanmoins également parfois touché aux limites de ce principe en condition « zoomifiée », certaines discussions spécialisées (sur le plan technique ou sur le plan historique par exemple) nécessitant parfois de réformer les corps disciplinaires et de prévoir des moments d’aparté transversaux.`}</p>\n    <p>{`Le format datasprint implique par ailleurs une dimension expérimentale, parfois chaotique, et les difficultés de communications impliquées par la conduite en ligne ont amplifié cette dimension. Nous avons donc construit nos journées de travail sur un canevas allégé en terme d’amplitude horaire, et sous une forme tentant de varier les rythmes et les échelles d’interaction : un point de plénière en matinée, suivi de travail en deux groupes, eux-mêmes rapidement re-divisés en binômes ou en moments de travail individuel. `}</p>\n    <p>{`Sur le plan technique, nous avons opté pour une salle zoom permanente ouverte durant toute la semaine et divisée en « breakout rooms » (salles de travail) permettant de travailler en plus petits ensembles ; nous avons également soutenu la semaine avec un dossier google drive très organisé dans lequel l’ensemble des activités ont été archivées et consignées.`}</p>\n    <p>{`Pour faciliter le processus d’intercompréhension, des procédures méthodologiques ont également été proposées aux participants. Ainsi, des personnes jouant le rôle de facilitateurs ont fait le lien entre les différents groupes en circulant continuellement entre les différentes salles zoom de travail. Nous avons par ailleurs insisté sur l’importance de la documentation en structurant les activités de chaque jour autour de l’écriture de « rapports » remplis au fur et à mesure de la journée, dont une personne « scribe » était chargée de prendre soin afin de garder un maximum de traces et de permettre les échanges d’information asynchrones. Ces rapports ont finalement été progressivement abandonnés, car trop lourds étant donné le poids des autres activités. Nous avons également progressivement réduit les temps de visioconférence pour minimiser la fatigue liée aux échanges en ligne.`}</p>\n    <p>{`Les séances de travail d’un datasprint provoquent parfois un « effet bulle » dans lequel chaque équipe peut rapidement se déconnecter du travail effectué par les autres, entraînant des blocages, des tâches effectuées en doublon ou des « angles morts ». Ce problème est amplifié par la conduite en ligne. Pour faire face à ce défi, nous avons rythmé les journées de points d’étapes effectuées à plusieurs échelles - par petits groupes, par équipes, ou en plénière - afin de partager les avancées. Par ailleurs, des visites informelles et autres « zoom surfing » ont permis de favoriser certaines circulations d’idées et de méthodes.`}</p>\n    <p>{`L’un des intérêts du format datasprint est enfin de favoriser une unité de temps pour le travail interdisciplinaire. L’intensité qu’implique cette unité de temps appelle cependant une valorisation à la hauteur des efforts fournis sur le temps court. Le temps du datasprint est, en temps normal, à la fois un temps d’exploration et d’enquête, et un temps de production de résultats. Cependant, ce principe a été confronté à deux spécificités dans notre cas : les conditions de travail en ligne ont demandé de revoir les attentes plus modestement, mais aussi le principe et les objectifs mêmes des datasprint de PORTIC qui, parce qu’ils visent la publication de sites web finalisés et contribuant de manière relativement précise à des études de cas très serrées (et non de rapports d’exploration des données comme c’est souvent le cas pour les autres datasprints). Face à ces spécificités, il nous a fallu articuler l’atelier avec un travail postérieur cadré par d’autres temporalités pour arriver à un résultat publiable.`}</p>\n    <h2 {...{\n      \"id\": \"la-fabrication-dun-site-web-comme-pivot-pour-lécriture-multimodale--entretenir-une-infrastructure-technique-et-méthodologique\"\n    }}>{`La fabrication d’un site web comme pivot pour l’écriture multimodale : entretenir une infrastructure technique et méthodologique`}</h2>\n    <p>{`À partir du travail effectué lors du datasprint, nous avons engagé une seconde phase d’approfondissement. Sur le fond, les axes de recherche initialement envisagés ont été progressivement remaniés. Cela a été fait dès la fin de la semaine de datasprint, au moment de la rédaction d’un document de synthèse mettant en regard les visualisations produites durant la semaine. Ce travail a été ensuite continué par Cécile Asselin qui a effectué un travail de synthèse et de nettoyage sur les productions de la semaine.`}</p>\n    <h3 {...{\n      \"id\": \"une-écriture-multimodale\"\n    }}>{`Une écriture multimodale`}</h3>\n    <p>{`Afin de construire progressivement, à partir des explorations du datasprint, un document propre à être publié et à transmettre un récit et des arguments à partir des données des deux bases, nous avons tenté d’utiliser la perspective de la fabrication d’un site pour articuler trois types « d’écriture » : la confection de nouveaux fichiers de données correspondant aux enquêtes soulevées par les activités de la semaine (écriture computationnelle) ; la confection de visualisations d’informations (écriture diagrammatique) ; enfin, bien sûr, la mise en récit et en argument historique de l’étude de cas (écriture en prose).`}</p>\n    <p>{`Pour ce faire, nous avons décidé de structurer le site en une série de trois parties à la structure identique : une « visualisation principale » constituant l’argument principal de la partie, accompagné d’un texte se fondant d’abord sur elle puis suivant ses propres développement, accompagné de « visualisations secondaires ». Cette organisation visuelle et rhétorique a induit un mode de travail itératif sur le registre du « ping pong » qui s’est déployé en trois temps : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`dans la foulée du datasprint, les historien.ne.s ont d’abord travaillé à préciser les arguments de chacune des trois parties (avril-mai 2021)`}</li>\n      <li parentName=\"ul\">{`nous avons ensuite organisé deux jours intensifs de conception avec une équipe réduite d’ingénieur.e.s et de designers (Cécile Asselin, Robin de Mourat, Christine Plumejeaud, Paul Girard, Maxime Zoffoli) durant lesquels nous avons conçu des propositions de visualisations principales (fin mai 2021)`}</li>\n      <li parentName=\"ul\">{`les historien.es ont, à la suite de ces deux jours, repris la main sur l’écriture, enrichie et structurée par les propositions constituées par les visualisations, en précisant leurs textes comme leurs besoins pour des visualisations complémentaires, qui ont été progressivement produites en fonction du texte (juin-septembre 2021)`}</li>\n    </ul>\n    <p>{`Dans ce cadre, nous avons progressivement négocié une infrastructure de travail orientée vers le développement progressif du présent site web. Ce dernier a tout autant servi d’objectif que de moyen de rencontre entre les différentes activités qui ont suivi la semaine d’atelier datasprint.`}</p>\n    <p>{`La fabrication du site présenté au public a été articulée autour d’un protocole automatisé qui a permis de mettre le site à jour quotidiennement pendant sa phase d’écriture et de développement, et ainsi de faire progresser conjointement sa structure, son aspect graphique et les divers contenus qui le peuplent (voir son `}<a href=\"https://github.com/medialab/portic-storymaps-2021\" target=\"blank\" rel=\"noopener noreferrer\">{`répertoire github`}</a>{` pour plus d’informations). Plus précisément, ce protocole automatisé consistait à récupérer les contenus écrits dans un google documents écrit par les historien.ne.s, les données des bases navigo et toflit18 sur leurs espaces numériques respectifs, et enfin à produire un ensemble de données optimisées pour le web avant de refabriquer le site.`}</p>\n    <p>{`Cette méthode de travail sur mesure, alternative à l’utilisation d’un CMS (type wordpress) ou d’une intégration des contenus entièrement « artisanale », nous a permis de multiplier les itérations sur les données, les visualisations et les textes, afin de développer itérativement un document ajusté et cohérent pour la lecture. Elle nous a également permis d’échapper à une approche qui voudrait formater la production du site de manière trop séquentielle, c’est-à-dire faisant suivre un premier temps de « conception » puis un deuxième temps « d’exécution », pour plutôt faire place à la découverte et au dialogue avec les différents matériaux en train de se développer. `}</p>\n    <p>{`Ainsi, la méthode de travail et de montage du site adoptée ici, outre la dimension d’optimisation qu’implique l’automatisation de certaines tâches, a été le moyen de favoriser un dialogue plus organique entre les différentes écritures en jeu dans ce document : en réalisant simultanément le design du site, celui des visualisations, et les textes qui les accompagnent, nous avons tenté de faire profiter chacune de ces activités l’une de l’autre, comme des sources d’invention ou de solidification mutuelle, plutôt que de les considérer comme des tâches spécialisées et/ou articulées selon un régime de subordination (de l’histoire à la technique, ou du visuel au textuel, ou de l’argument à son illustration, etc.).`}</p>\n    <h3 {...{\n      \"id\": \"un-site-destiné-à-tisser-des-liens-avec-dautres-activités-et-dautres-publics\"\n    }}>{`Un site destiné à tisser des liens avec d’autres activités et d’autres publics`}</h3>\n    <p>{`Ce site est pensé à la fois comme un objet autonome déroulant le récit scientifique de l’histoire de la région de La Rochelle au dix-huitième siècle, et comme la première pièce d’assemblages scientifiques et didactiques encore à venir. Nous l’avons conçu avec le projet de l’adresser à un public constitué d’étudiant.e.s en histoire, de professeur.e.s d’histoire du secondaire, ou d’amateur.ice.s avancés passionnés par le Poitou et les Charentes. Cependant, le site est également pensé pour pouvoir s’articuler avec deux publics complémentaires :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`les personnes spécialisées dans la médiation et/ou la vulgarisation pourront utiliser certaines des visualisations pour des initiatives destinées à un plus grand public`}</li>\n      <li parentName=\"ul\">{`les historien.ne.s spécialisés pourront citer ces visualisations dans des publications conventionnelles en revues ou monographies et ainsi s’appuyer sur ces dernières pour continuer nos enquêtes`}</li>\n    </ul>\n    <p>{`Pour ce faire, nous avons notamment rendu chacune des visualisations « détachable » du récit proposé via la page atlas - et plus techniquement en dotant chacune des visualisations d‘une adresse URL propre.`}</p>\n    <p>{`Par ailleurs, le `}<a href=\"https://github.com/medialab/portic-storymaps-2021/\" target=\"blank\" rel=\"noopener noreferrer\">{`code source du site`}</a>{`, partagé sous licence libre, a été construit et documenté de manière à pouvoir être dérivé - en tout ou partie - pour d’autres projets à venir : il pourra apporter des éléments utiles pour les prochaines études de cas du programme PORTIC mais aussi pour d’autres projets similaires. Il est enfin à noter que toutes les données utilisées - et les scripts qui les génèrent à partir des données complètes de toflit18 et navigo, accessibles toutes les deux librement - sont également inclus dans le code source du site, rendant nos visualisations et résultats entièrement reproductibles.`}</p>\n    <h2 {...{\n      \"id\": \"une-écriture-collective\"\n    }}>{`Une écriture collective`}</h2>\n    <p>{`Ce site est le résultat d’un processus d’enquête et d’écriture collective qui a mobilisé des personnes issues de plusieurs disciplines : histoire, économie, informatique, géomatique, design. `}</p>\n    <p>{`Les textes de cette publication ont été écrits par `}<a href=\"https://cmmc-nice.fr/membres-du-cmmc/silvia-marzagalli/\" target=\"blank\" rel=\"noopener noreferrer\">{`Silvia Marzagalli`}</a>{` (professeur d’histoire moderne, Université Côte d’Azur - CMMC, coordinatrice et co-responsable scientifique du programme PORTIC), `}<a href=\"https://www.ined.fr/fr/recherche/chercheurs/Charles%2BLo%25C3%25AFc\" target=\"blank\" rel=\"noopener noreferrer\">{`Loïc Charles`}</a>{` (professeur d’économie, INED, Université Paris 8 Vincennes - LED), `}<a href=\"https://leda.dauphine.fr/fr/membre/detail-cv/profile/guillaume-daudin.html\" target=\"blank\" rel=\"noopener noreferrer\">{`Guillaume Daudin`}</a>{` (professeur d’économie, Université Paris-Dauphine - LEDa-DIAL), et `}<a href=\"https://criham.labo.univ-poitiers.fr/membres/thierry-sauzeau/\" target=\"blank\" rel=\"noopener noreferrer\">{`Thierry Sauzeau`}</a>{` (professeur d’histoire moderne, Université de Poitiers - Criham).`}</p>\n    <p>{`L’ensemble du processus de médiation et d’articulation de la collaboration a été mené par l’ingénieure stagiaire `}<a href=\"https://fr.linkedin.com/in/c%25C3%25A9cile-asselin-3659541b7\" target=\"blank\" rel=\"noopener noreferrer\">{`Cécile Asselin`}</a>{`, qui s’est consacrée à plein temps pendant six mois à la conduite méthodologique et technique de l’ensemble de l’étude de cas, accompagnée par `}<a href=\"https://medialab.sciencespo.fr/equipe/robin-de-mourat/\" target=\"blank\" rel=\"noopener noreferrer\">{`Robin de Mourat`}</a>{` (designer de recherche, médialab Sciences Po - co-responsable scientifique du programme PORTIC en charge des études de cas).`}</p>\n    <p>{`Les visualisations ont été conçues et développées par `}<a href=\"https://fr.linkedin.com/in/c%25C3%25A9cile-asselin-3659541b7\" target=\"blank\" rel=\"noopener noreferrer\">{`Cécile Asselin`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/robin-de-mourat/\" target=\"blank\" rel=\"noopener noreferrer\">{`Robin de Mourat`}</a>{`, `}<a href=\"https://lienss.univ-larochelle.fr/Plumejeaud-Christine-954\" target=\"blank\" rel=\"noopener noreferrer\">{`Christine Plumejeaud`}</a>{` (géomaticienne, laboratoire LIENSs - co-responsable scientifique du programme PORTIC), `}<a href=\"https://fr.linkedin.com/in/paul-girard-57822118\" target=\"blank\" rel=\"noopener noreferrer\">{`Paul Girard`}</a>{` (ingénieur expert en humanités numériques - entreprise `}<a href=\"https://www.ouestware.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Ouestware`}</a>{`), `}<a href=\"https://www.maximezoffoli.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Maxime Zoffoli`}</a>{` (designer expert en visualisation d’information), `}<a href=\"https://fr.linkedin.com/in/geraldine-geoffroy-4653ab19b\" target=\"blank\" rel=\"noopener noreferrer\">{`Géraldine Geoffroy`}</a>{` (data librarian, Université Côte d’Azur).`}</p>\n    <p>{`Les fonds de carte d’époque ont été constitués par `}<a href=\"https://lienss.univ-larochelle.fr/Plumejeaud-Christine-954\" target=\"blank\" rel=\"noopener noreferrer\">{`Christine Plumejeaud`}</a>{`.`}</p>\n    <p>{`La préparation et la vérification des données ont été effectuée par les équipes de Navigocorpus (`}<a href=\"https://lienss.univ-larochelle.fr/Plumejeaud-Christine-954\" target=\"blank\" rel=\"noopener noreferrer\">{`Christine Plumejeaud`}</a>{`, `}<a href=\"https://cmmc-nice.fr/membres-du-cmmc/silvia-marzagalli/\" target=\"blank\" rel=\"noopener noreferrer\">{`Silvia Marzagalli`}</a>{`), de Toflit18 (`}<a href=\"https://leda.dauphine.fr/fr/membre/detail-cv/profile/guillaume-daudin.html\" target=\"blank\" rel=\"noopener noreferrer\">{`Guillaume Daudin`}</a>{`, `}<a href=\"https://www.ined.fr/fr/recherche/chercheurs/Charles%2BLo%25C3%25AFc\" target=\"blank\" rel=\"noopener noreferrer\">{`Loïc Charles`}</a>{`) et du médialab (`}<a href=\"https://fr.linkedin.com/in/c%25C3%25A9cile-asselin-3659541b7\" target=\"blank\" rel=\"noopener noreferrer\">{`Cécile Asselin`}</a>{` et `}<a href=\"https://medialab.sciencespo.fr/equipe/robin-de-mourat/\" target=\"blank\" rel=\"noopener noreferrer\">{`Robin de Mourat`}</a>{`).`}</p>\n    <p>{`Le site a été développé par `}<a href=\"https://fr.linkedin.com/in/c%25C3%25A9cile-asselin-3659541b7\" target=\"blank\" rel=\"noopener noreferrer\">{`Cécile Asselin`}</a>{` et `}<a href=\"https://medialab.sciencespo.fr/equipe/robin-de-mourat/\" target=\"blank\" rel=\"noopener noreferrer\">{`Robin de Mourat`}</a>{`.`}</p>\n    <p>{`À ces personnes s’ajoutent celles ayant participé au datasprint qui a conduit à cette publication : les ingénieurs en méthodes numériques et designers du laboratoire médialab de Sciences Po `}<a href=\"https://bmaz.github.io/\" target=\"blank\" rel=\"noopener noreferrer\">{`Béatrice Mazoyer`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/benjamin-ooghe-tabanou/\" target=\"blank\" rel=\"noopener noreferrer\">{`Benjamin Ooghe-Tabanou`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/guillaume-plique/\" target=\"blank\" rel=\"noopener noreferrer\">{`Guillaume Plique`}</a>{`, `}<a href=\"https://medialab.sciencespo.fr/equipe/heloise-thero/\" target=\"blank\" rel=\"noopener noreferrer\">{`Héloïse Théro`}</a>{`, et `}<a href=\"https://paulinegourlet.com/\" target=\"blank\" rel=\"noopener noreferrer\">{`Pauline Gourlet`}</a>{` ; les chercheurs `}<a href=\"https://www.univ-brest.fr/crbc/menu/Membres%2Bdu%2Blaboratoire/Enseignants-chercheurs/Pierrick_Pourchasse\" target=\"blank\" rel=\"noopener noreferrer\">{`Pierrick Pourchasse`}</a>{` (professeur émérite d’histoire moderne, Université de Bretagne Occidentale), et `}<a href=\"https://l3i.univ-larochelle.fr/Bouju-Alain-MCF-HDR\" target=\"blank\" rel=\"noopener noreferrer\">{`Alain Bouju`}</a>{` (maître de conférence HDR en informatique, Université de La Rochelle).`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"dune-série-de-questionnements-à-une-semaine-denquête\",\n    level: 2,\n    title: \"D’une série de questionnements à une semaine d’enquête\",\n    children: [\n        {\n              id: \"faire-avec-les-conditions-de-recherche\",\n              level: 3,\n              title: \"Faire avec les conditions de recherche\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"improvisations-et-adaptations\",\n              level: 3,\n              title: \"Improvisations et adaptations\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"la-fabrication-dun-site-web-comme-pivot-pour-lécriture-multimodale--entretenir-une-infrastructure-technique-et-méthodologique\",\n    level: 2,\n    title: \"La fabrication d’un site web comme pivot pour l’écriture multimodale : entretenir une infrastructure technique et méthodologique\",\n    children: [\n        {\n              id: \"une-écriture-multimodale\",\n              level: 3,\n              title: \"Une écriture multimodale\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"un-site-destiné-à-tisser-des-liens-avec-dautres-activités-et-dautres-publics\",\n              level: 3,\n              title: \"Un site destiné à tisser des liens avec d’autres activités et d’autres publics\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"une-écriture-collective\",\n    level: 2,\n    title: \"Une écriture collective\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`About TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.115,\"time\":186900,\"words\":623}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Caller from '../../components/Caller'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"références\"\n    }}>{`Références`}</h1>\n    <h3 {...{\n      \"id\": \"sources-archivistiques\"\n    }}>{`Sources archivistiques`}</h3>\n    <p>{`Les données sur la navigation proviennent de la base de données Navigocorpus. Pour cette enquête, il s’agit plus particulièrement des:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`congés issus de la sous-série G5 conservés aux Archives Nationales de France`}</li>\n      <li parentName=\"ul\">{`congés de Lorient, Archives départementales du Morbihan, 10B-19`}</li>\n      <li parentName=\"ul\">{`congés de Saint-Tropez, Archives départementales du Var, 7 B 10`}</li>\n      <li parentName=\"ul\">{`Registres du Bureau de Santé de Marseille, 200 E 543 et 545`}</li>\n    </ul>\n    <p>{`Les données relatives aux expéditions négrières ont été complétées avec la base de données `}<a href=\"https://www.slavevoyages.org/voyage/database\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"https://www.slavevoyages.org/voyage/database\"\n        }}>{`https://www.slavevoyages.org/voyage/database`}</a></a></p>\n    <p>{`Les données relatives au commerce extérieur proviennent de la base de données Toflit18 (voir `}<a href=\"http://toflit18.medialab.sciences-po.fr/%23/exploration/sources\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"http://toflit18.medialab.sciences-po.fr/#/exploration/sources\"\n        }}>{`http://toflit18.medialab.sciences-po.fr/#/exploration/sources`}</a></a>{`).`}</p>\n    <p>{`Pour cette enquête, il s’agit plus particulièrement des : `}</p>\n    <p>{`Archives Nationales d’Outre-Mer (pour 1789) : Col. F2 B 14 (présent aussi en AN Marine B 7 514)`}</p>\n    <p>{`Archives Nationales de France (pour 1789) : AN F12 1665 et 1666 AN Marine B 7 514 (présent aussi en ANOM Col F2 B 14)`}</p>\n    <p>{`Archives départementales de la Charente-Maritime : 41 ETP 270 (pour l’historique des exportations de La Rochelle) `}</p>\n    <p>{`Bibliothèque municipale de Saint-Brieuc : Fonds Gournay, M84–87 (pour 1750)`}</p>\n    <p>{`La majeure partie des cahiers de doléances étudiés sont tirés des Archives départementales de Charente-Maritime (AD17). En effet, les Archives départementales de la Vendée (AD85) ne conservent que de rares cahiers pour littoral du Poitou (Bouin, Noirmoutier, l’Ile d’Elle dans le marais poitevin). La collecte et/ou la transcription ont été réalisées selon deux modalités. Nous avons tout d’abord récupéré un ensemble de cahiers charentais transcrits sur le site `}<a href=\"http://www.histoirepassion.eu/?-1789-Cahiers-de-doleances-et-Etats-generaux-\" target=\"blank\" rel=\"noopener noreferrer\">{`Histoire Passion - Saintonge Aunis Angoumois`}</a>{`. Nous avons ensuite complété ce corpus grâce à la collaboration des AD17 et des AD85. Ainsi, de nouveaux cahiers ont été récupérés et transcrits par Thierry Sauzeau et Silvia Marzagalli, le tout permettant d’évaluer l’exhaustivité et la teneur de l’échantillon utilisé. Le corpus de 163 cahiers recèle 14 cahiers de paroisses que complètent 5 cahiers de districts (groupes de paroisses) du littoral. L’ensemble de ce travail de consolidation et de mise en données est disponible et réutilisable `}<a href=\"https://docs.google.com/spreadsheets/d/1A8-OiTSYv7opCcWvF8tsJ0dmEXkHZMgN-7lhj-4hqFw/edit?usp%3Dsharing\" target=\"blank\" rel=\"noopener noreferrer\">{`à cette adresse`}</a>{`.`}</p>\n    <p>{`Les registres de délibération de la Chambre de Commerce de La Rochelle sont conservés aux Archives départementales de la Charente-Maritime, 41 ETP 8 (accessibles en ligne: `}<a href=\"https://archinoe.fr/v2/ad17/visualiseur/ir_ead_visu_lien.html?ir%3D11431%26id%3D490014227\" target=\"blank\" rel=\"noopener noreferrer\"><a parentName=\"p\" {...{\n          \"href\": \"https://archinoe.fr/v2/ad17/visualiseur/ir%5C_ead%5C_visu%5C_lien.html?ir=11431&id=490014227\"\n        }}>{`https://archinoe.fr/v2/ad17/visualiseur/ir\\\\_ead\\\\_visu\\\\_lien.html?ir=11431`}{`&`}{`id=490014227`}</a></a>{`) `}</p>\n    <h3 {...{\n      \"id\": \"bibliographie\"\n    }}>{`Bibliographie`}</h3>\n    <p>{`Augeron, Mickaël et Guillemet, Dominique (dir.), Champlain ou les portes du Nouveau Monde. Cinq siècles d’échanges entre le Centre-Ouest français et l’Amérique du Nord, La Crèche, Geste Éditions, 2004.`}</p>\n    <p>{`Clark, John G., La Rochelle and the Atlantic Economy during the Eighteenth Century, Baltimore, Johns Hopkins University Press, 1981.`}</p>\n    <p>{`Delafosse, Marcel (dir.), Histoire de La Rochelle, Toulouse, Privat, 2002.`}</p>\n    <p>{`Deveau, Jean-Michel, La traite rochelaise, Paris, Karthala, 1990.`}</p>\n    <p>{`Hocquet, Jean-Claude, « Navigation et transport du sel atlantique », dans Ménanteau, Loïc (dir.), Sel et salines de l’Europe atlantique, Rennes, PUR, 2018, p. 223–234.`}</p>\n    <p>{`Martinetti, Brice, Les négociants de La Rochelle au XVIIIe siècle, Rennes, PUR, 2013.`}</p>\n    <p>{`Mathieu, Jacques, La Nouvelle-France. Les Français en Amérique du Nord, XVIe-XVIIIe siècles, Paris, Belin, 1991.`}</p>\n    <p>{`Robert, Henri, Les trafics coloniaux du port de la Rochelle au XVIIIe siècle, Poitiers, Mémoire de la Société des Antiquaires de l’Ouest, 4e série, tome IV, 1960.`}</p>\n    <p>{`Sauzeau, Thierry et Normand, Eric (dir.), De Tonnay à Charente : histoire d’une porte maritime des pays charentais, La Crèche, Geste éditions, 2013, 203 p.`}</p>\n    <p>{`Sauzeau, Thierry, « Rochefort/Tonnay-Charente (XVIIe-XIXe siècles) entre concurrence et complémentarité », dans Fernandez, Alexandre et Marnot, Bruno (dir.), Les ports du golfe de Gascogne. De Concarneau à La Corogne (xve-xxie siècles), Paris, PUPS, 2013, p.109–122.`}</p>\n    <p>{`Sauzeau, Thierry, Les marins de la Seudre (XVIIIe-XIXe siècle), « Pays d’histoire », La Crèche, Geste Editions, 2005, 342 p.`}</p>\n    <p>{`Toussaint, Auguste, La route des Iles. Contribution à l’histoire maritime des Mascareignes, Paris, SEVPEN, 1967.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"sources-archivistiques\",\n    level: 3,\n    title: \"Sources archivistiques\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bibliographie\",\n    level: 3,\n    title: \"Bibliographie\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`References`}</p>\n    <p>{`TODO`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.01,\"time\":600,\"words\":2}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`some tests`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\n\n/**\n * Displays an svg image\n * @param {string} {path}\n * @returns {React.ReactElement} - React component\n */\nfunction SvgChart ({path}) {\n    return <img alt={path} src={`${process.env.PUBLIC_URL}${path}`} />\n} \n\nexport default SvgChart;","import GeographicMapChart from './GeographicMapChart';\n\nexport default GeographicMapChart;","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import DataProvider from './DataProvider';\n\nexport default DataProvider;","import TriangleChart from './TriangleChart';\n\nexport default TriangleChart;","import { useEffect, useState } from \"react\";\nimport { csvParse } from 'd3-dsv';\nimport get from 'axios';\n\n/**\n * Fetches data and provides it to children (used for tests)\n * @param {string} data\n * @param {function} children\n * @returns {React.ReactElement} - React component\n */\nconst DataProvider = ({\n  data: dataFilename,\n  children\n}) => {\n  // raw marker data\n  const [data, setData] = useState(null);\n  const [loadingData, setLoadingData] = useState(true);\n  /**\n   * Marker data loading\n   */\n  useEffect(() => {\n    if (dataFilename) {\n      const dataURL = `${process.env.PUBLIC_URL}/data/${dataFilename}`;\n      get(dataURL)\n        .then(({ data: str }) => {\n          const extension = dataFilename.split('.').pop();\n          let newData;\n          if (extension === 'csv') {\n            newData = csvParse(str);\n          } else if (extension === 'geojson' || extension === 'json') {\n            newData = str;\n          }\n\n          setData(newData);\n          setLoadingData(false);\n        })\n        .catch((err) => {\n          setLoadingData(false);\n        })\n    }\n\n  }, [dataFilename])\n  return loadingData ? <div>Loading</div> : children(data)\n}\n\nexport default DataProvider;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"8 min read\",\"minutes\":7.975,\"time\":478500,\"words\":1595}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport SvgChart from '../../components/SvgChart';\nimport VegaChart from '../../components/VegaChart';\nimport NetworkGraphChart from '../../components/NetworkGraphChart';\nimport GeographicMapChart from '../../components/GeographicMapChart';\nimport TriangleChart from '../../components/TriangleChart';\nimport BoatsIllustration from '../../components/BoatsIllustration';\nimport DataProvider from '../../components/DataProvider';\nimport LineChart from '../../components/LineChart';\nimport BarChart from '../../components/BarChart';\nimport colorPalettes from '../../colorPalettes.js';\nimport { Step3Objects } from '../../visualizations/PrincipalVisualizationPart3/renderObjectsFunctions.js'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Test en prod`}</p>\n    <h2 {...{\n      \"id\": \"carto-en-reactd3svg\"\n    }}>{`Carto en react+d3+SVG`}</h2>\n    <p>{`Ci-dessous un proto/boilerplate pour rendre du svg + données avec la galaxie d3 + du rendu direct en SVG via react.`}</p>\n    <h3 {...{\n      \"id\": \"fond-de-carte---test-custom-layer-avec-config-coast-from-nantes-to-bordeaux\"\n    }}>{`Fond de carte - test custom layer avec config “coast from Nantes to Bordeaux”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'part_3_step3_viz_customs_offices_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname'\n          }\n        }, {\n          type: 'custom',\n          data: visData,\n          renderObjects: Step3Objects\n        }]} projectionTemplate='coast from Nantes to Bordeaux' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider> \n    <h3 {...{\n      \"id\": \"fond-de-carte---test-flows-avec-config-world\"\n    }}>{`Fond de carte - test flows avec config “World”`}</h3>\n    <DataProvider data={'world_1789_23mars2021_level0.json'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'aggregated_flows.json'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'flows',\n          data: visData,\n          size: {\n            field: 'tonnages_cumulés'\n          }\n        }]} projectionTemplate='World' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-france\"\n    }}>{`Fond de carte - config “France”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'ports_locations_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'points',\n          data: visData,\n          color: {\n            field: 'admiralty',\n            palette: colorPalettes.admiralties\n          },\n          size: {\n            field: 'customs_region'\n          },\n          label: {\n            field: 'port'\n          }\n        }]} projectionTemplate='France' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-rotated-poitou\"\n    }}>{`Fond de carte - config “rotated Poitou”`}</h3>\n    <DataProvider data={'cartoweb_france_1789_geojson.geojson'} mdxType=\"DataProvider\">\n  {backgroundData => <DataProvider data={'part_3_step1_viz_data.csv'} mdxType=\"DataProvider\">\n        {visData => <GeographicMapChart layers={[{\n          type: 'choropleth',\n          data: backgroundData,\n          color: {\n            field: 'shortname',\n            palette: colorPalettes.provinces\n          }\n        }, {\n          type: 'points',\n          data: visData,\n          color: {\n            field: 'customs_office',\n            palette: colorPalettes.customs_office\n          },\n          size: {\n            field: 'mean_tonnage'\n          },\n          label: {\n            field: 'port'\n          }\n        }]} projectionTemplate='rotated Poitou' height={800} width={1200} mdxType=\"GeographicMapChart\" />}\n      </DataProvider>}\n    </DataProvider>\n    <h3 {...{\n      \"id\": \"fond-de-carte---config-poitou\"\n    }}>{`Fond de carte - config “Poitou”`}</h3>\n    <p>{`Cartographie des destination des bateaux aillant un port d’attache dans la région, par tonnage cumulé (couleur = amirauté) :`}</p>\n    <GeographicMapChart backgroundFilename=\"cartoweb_france_1789_geojson.geojson\" dataFilename=\"navigo-out-of-ships-from-region.csv\" markerColor=\"pointcall_admiralty\" markerSize=\"tonnage\" label=\"pointcall\" showLabels projectionTemplate='Poitou' height={800} width={1200} mdxType=\"GeographicMapChart\" />\n    <h2 {...{\n      \"id\": \"fond-de-carte-sans-template-pour-la-config\"\n    }}>{`Fond de carte sans template pour la config`}</h2>\n    <GeographicMapChart backgroundFilename=\"cartoweb_france_1789_geojson.geojson\" dataFilename=\"navigo-out-of-ships-from-region.csv\" markerColor=\"pointcall_admiralty\" markerSize=\"tonnage\" label=\"pointcall\" showLabels mdxType=\"GeographicMapChart\" />\n    {\n      /* # Tests composant LineChart\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data.filter(d => d.region === 'France')}\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 5,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n             annotations={[\n                   {\n                     type: 'span',\n                     start: 1756,\n                     end: 1763,\n                     axis: 'x',\n                     label: 'guerre de sept ans'\n                   },\n                   {\n                     type: 'span',\n                     start: 400000000,\n                     end: 500000000,\n                     axis: 'y',\n                     label: 'période de faste'\n                   }\n                 ]}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de titre\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'Région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de line chart (fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`,\n               fillGaps: true\n             }}\n             color={{\n               field: 'region',\n               title: 'Région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <LineChart\n             data={data}\n             title=\"test de linechart (minimum de props)\"\n             // width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               // title: 'année',\n             }}\n             y={{\n               field: 'Imports',\n               // title: 'imports',\n               // tickSpan: 100000000,\n               // tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               // title: 'Région'\n             }}\n             // tooltip={d => `import de ${d.Imports} en ${d.year} pour ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      # Tests composant BarChart\n      ## Horizontal bar chart\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart (sans fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickFormat: (d, i) => +d%5 === 0 ? d : undefined,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             annotations={[\n               {\n                 type: 'span',\n                 start: 1756,\n                 end: 1763,\n                 axis: 'x',\n                 label: 'guerre de sept ans'\n               },\n               {\n                 type: 'span',\n                 start: 400000000,\n                 end: 500000000,\n                 axis: 'y',\n                 label: 'période de faste'\n               }\n             ]}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart (fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked, fill gaps)\"\n             width={window.innerWidth - 20}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (grouped, fill gaps)\"\n             width={window.innerWidth - 20}\n             layout={'groups'}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n               fillGaps: true\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped, no fill gaps)\"\n             width={window.innerWidth - 20}\n             layout={'groups'}\n             x={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             y={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 100000000,\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      ## Vertical bar charts\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => d.region === 'France')}\n             title=\"Test de bar chart\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             y={{\n               field: 'year',\n               title: 'année',\n               // tickFormat: (d, i) => +d%5 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               // tickSpan: 1000000,\n               //tickFormat: v => `${v} lt.`\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_LR_partners.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked)\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             height={200}\n             y={{\n               field: 'year',\n               title: 'année',\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'partner',\n               title: 'partenaire'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} depuis ${d.partner}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_LR_partners.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data}\n             title=\"Test de bar chart (stacked, dimensionnement par la hauteur des lignes)\"\n             // width={window.innerWidth - 20}\n             orientation=\"vertical\"\n             y={{\n               field: 'year',\n               title: 'année',\n               rowHeight: 30,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickFormat: v => `${v} lt.`\n             }}\n             color={{\n               field: 'partner',\n               title: 'partenaire'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} depuis ${d.partner}`}\n           />\n         )\n       }\n      </DataProvider>\n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped)\"\n             width={window.innerWidth - 20}\n             orientation={'vertical'}\n             layout={'groups'}\n             y={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 50000000,\n               tickFormat: v => `${v / 1000}k lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      <DataProvider data={'decline_longitudinal_data.csv'}>\n       {\n         data => (\n           <BarChart\n             data={data.filter(d => +d.year < 1750)}\n             title=\"Test de bar chart (grouped - dimensionnement par hauteur des lignes)\"\n             width={window.innerWidth - 20}\n             orientation={'vertical'}\n             layout={'groups'}\n             y={{\n               field: 'year',\n               title: 'année',\n               tickSpan: 10,\n               rowHeight: 50\n               // tickFormat: (d, i) => +d%10 === 0 ? d : undefined,\n             }}\n             x={{\n               field: 'Imports',\n               title: 'imports',\n               tickSpan: 50000000,\n               tickFormat: v => `${v / 1000}k lt.`\n             }}\n             color={{\n               field: 'region',\n               title: 'région'\n             }}\n             tooltip={d => `import de ${d.Imports} en ${d.year} par ${d.region}`}\n           />\n         )\n       }\n      </DataProvider>\n      \n      ## Test triangle \n      <TriangleChart \n       dataFilename=\"part_3_step1_viz_data.csv\" \n       rowHeight={300}\n       totalWidth = {1600}\n       />\n      ## Test courbes de bézier\n      <BezierComponent\n       dataFilename=\"part_3_step3_viz_customs_offices_data.csv\"\n       cx={300}\n       cy={250}\n       r={210}\n       inPercentage={10}\n       // start={Math.PI / 2}\n       // end={Math.PI * 3 / 2}\n       />\n      # Test bateaux\n      <BoatsIllustration />\n      \n      # Commerce multi-échelle dans la région de La Rochelle\n      \n      Voici un tour d'horizon des modules react préparés pour faciliter le développement :\n      ## Image SVG (avec webpack)\n      On intègre une image  SVG depuis le local (elle sera donc packée par webpack) :\n      \n      ## Image SVG (sans webpack)\n      On intègre ici directement une image à partir de son URL en ligne (depuis le dossier `public`)\n      ##### ! cassé pour le moment\n      // <SvgChart path =\"/svg/ports-region-1789.svg\" />\n      ## Visualisation vega\n      Les visualisations vega ont besoin d'un fichier csv stocké dans le dossier `public/data` et d'une spec vega.\n      <VegaChart \n       data=\"sorties_navires_vers_colonies.csv\" \n       spec={{\n         \"mark\": \"rect\",\n         \"encoding\": {\n           \"x\": {\n             \"field\": \"port_depart\",\n             \"type\": \"nominal\"\n           },\n           \"y\": {\n             \"field\": \"port_destination\",\n             \"type\": \"nominal\"\n           },\n           \"color\": {\n             \"type\": \"quantitative\",\n             \"field\": \"tonnage\",\n             \"aggregate\": \"sum\"\n           }\n           \n         }\n       }}\n      />\n      ## Réseau avec sigma\n      Les visualisations sigma ont besoin d'un fichier gexf stocké dans le dossier `public/data`.\n      Paramètres :\n      * `nodeColor` : attribut pour couleur\n      * `nodeSize` : attribut pour taille\n      * `labelDensity` : densité des labels (float dans [0, 1])\n      \n      <NetworkGraphChart \n       data=\"toflit_aggregate_1789_only_out.gexf\" \n       nodeColor={`admiralty`}\n       nodeSize={`inside_degree`}\n       labelDensity={0.5}\n      />\n      */\n    }\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"carto-en-reactd3svg\",\n    level: 2,\n    title: \"Carto en react+d3+SVG\",\n    children: [\n        {\n              id: \"fond-de-carte---test-custom-layer-avec-config-coast-from-nantes-to-bordeaux\",\n              level: 3,\n              title: \"Fond de carte - test custom layer avec config “coast from Nantes to Bordeaux”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---test-flows-avec-config-world\",\n              level: 3,\n              title: \"Fond de carte - test flows avec config “World”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-france\",\n              level: 3,\n              title: \"Fond de carte - config “France”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-rotated-poitou\",\n              level: 3,\n              title: \"Fond de carte - config “rotated Poitou”\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"fond-de-carte---config-poitou\",\n              level: 3,\n              title: \"Fond de carte - config “Poitou”\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"fond-de-carte-sans-template-pour-la-config\",\n    level: 2,\n    title: \"Fond de carte sans template pour la config\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport { scaleLinear } from 'd3-scale';\nimport { extent, range, max } from 'd3-array';\nimport { useRef, useState, useEffect } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nimport './LineChart.scss';\n\nconst { generic } = colorsPalettes;\n\n/**\n * LineChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data\n * @param {string} title \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * @param {array} annotations\n * @params {string} annotations[n].type ['span]\n * @params {number} annotations[n].start\n * @params {number} annotations[n].end\n * @params {string} annotations[n].axis ['x', 'y']\n * @params {string} annotations[n].label\n * \n * @param {function} tooltip\n * \n * @returns {React.ReactElement} - React component \n */\nconst LineChart = ({\n  data,\n  title,\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  color,\n  x,\n  y,\n  tooltip,\n  margins: inputMargins = {},\n  annotations = []\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth - legendWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: yTickFormat,\n    tickSpan: yTickSpan,\n    domain: initialYDomain,\n    fillGaps\n  } = y;\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n  } = x;\n  let colorPalette;\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorModalities = uniq(data.map(d => d[color.field]));\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  const xDomain = initialXDomain || extent(data.filter(d => +d[y.field]).map(d => +d[x.field]));\n  const yDomain = initialYDomain || [0, max(data.map(d => +d[y.field]))];\n\n  const xScale = scaleLinear().domain(xDomain).range([margins.left, width - margins.right]).nice();\n  const yScale = scaleLinear().domain(yDomain).range([height - margins.bottom, margins.top]).nice();\n  const groups = color ? Object.entries(groupBy(data, d => d[color.field])) : [[undefined, data]];\n  let { values: xAxisValues } = axisPropsFromTickScale(xScale);\n  let { values: yAxisValues } = axisPropsFromTickScale(yScale, 10);\n  if (xTickSpan) {\n    xDomain[0] = xDomain[0] - xDomain[0] % xTickSpan;\n    xDomain[1] = xDomain[1] + (xTickSpan - xDomain[0] % xTickSpan);\n    xAxisValues = range(xDomain[0], xDomain[1], xTickSpan);\n    xScale.domain(xDomain);\n  }\n  if (yTickSpan) {\n    yDomain[0] = yDomain[0] - yDomain[0] % yTickSpan;\n    yDomain[1] = yDomain[1] + (yTickSpan - yDomain[0] % yTickSpan);\n    yAxisValues = range(yDomain[0], yDomain[1], yTickSpan);\n    yScale.domain(yDomain)\n  }\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"LineChart GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            <g className=\"axis left-axis ticks\">\n              <text x={margins.left - 10} y={margins.top - 10} className=\"axis-title\">\n                {y.title || y.field}\n              </text>\n              {\n                yAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(0, ${yScale(value)})`}\n                  >\n                    <text x={margins.left - 10} y={3}>\n                      {typeof yTickFormat === 'function' ? yTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"tick-mark\"\n                      x1={margins.left - 5}\n                      x2={margins.left}\n                      y1={0}\n                      y2={0}\n                    />\n                    <line\n                      className=\"background-line\"\n                      x1={margins.left}\n                      x2={xScale(xAxisValues[xAxisValues.length - 1])}\n                      y1={0}\n                      y2={0}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"axis bottom-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(${xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={height - margins.bottom + 20}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={yScale(yAxisValues[yAxisValues.length - 1])}\n                      y2={height - margins.bottom}\n                    />\n                    <line\n                      className=\"tick-mark\"\n                      x1={0}\n                      x2={0}\n                      y1={height - margins.bottom}\n                      y2={height - margins.bottom + 5}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"annotations-container\">\n              {\n                annotations\n                .filter(a => a.axis === 'x')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatHeight = height - yScale(yAxisValues[yAxisValues.length - 1]) - margins.bottom;\n                  const thatY1 = height - margins.bottom;\n                  const thatY2 = yScale(yAxisValues[yAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation x-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={xScale(start)}\n                        width={xScale(end) - xScale(start)}\n                        height={thatHeight}\n                        y={thatY2}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                      <line\n                        x1={xScale(start)}\n                        x2={xScale(start)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={xScale(end)}\n                        x2={xScale(end)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={xScale(end) + 20} \n                        x2={xScale(end) + 10} \n                        y1={thatY2 + labelPosition - 5}\n                        y2={thatY2 + labelPosition - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                      <text\n                        x={xScale(end) + 22}\n                        y={thatY2 + labelPosition}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n              {\n                annotations\n                .filter(a => a.axis === 'y')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatX1 = margins.left;\n                  const thatX2 = xScale(xAxisValues[xAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation y-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={thatX1}\n                        width={thatX2 - thatX1}\n                        y={yScale(start)}\n                        height={Math.abs(yScale(end) - yScale(start))}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                       <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(start)}\n                        y2={yScale(start)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(end)}\n                        y2={yScale(end)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={thatX1 + labelPosition - 5} \n                        x2={thatX1 + labelPosition - 5} \n                        y1={yScale(start) - 15}\n                        y2={yScale(start) - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                     <text\n                        x={thatX1 + labelPosition}\n                        y={yScale(start) - 10}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n            </g>\n            <g className=\"lines-container\">\n              {\n                groups.map(([groupName, items], groupIndex) => {\n                  const color = colorPalette && groupName ? colorPalette[groupName] : generic.dark;\n                  return (\n                    <g key={groupIndex}>\n                      {\n                        items.map((item, itemIndex) => {\n                          let next;\n                          let consecutive;\n                          const hasNext = itemIndex < items.length - 1;\n                          if (hasNext) {\n                            next = items[itemIndex + 1];\n                            consecutive = +item[x.field] + 1 === +next[x.field];\n                          }\n                          return (\n                            <>\n                              {\n                                (hasNext && fillGaps)\n                                  || (hasNext && consecutive && +item[y.field] && +next[y.field])\n                                  ?\n                                  <line\n                                    className=\"chart-line\"\n                                    x1={xScale(+item[x.field])}\n                                    x2={xScale(+next[x.field])}\n                                    y1={yScale(+item[y.field])}\n                                    y2={yScale(+next[y.field])}\n                                    style={{ stroke: color }}\n                                  />\n                                  : null\n                              }\n                              {\n                                +item[y.field] > 0 ?\n                                  <g key={itemIndex} className=\"data-dot-container\">\n                                    <circle\n                                      className=\"data-dot\"\n                                      fill={color}\n                                      r={height / 200}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                    />\n                                    <circle\n                                      className=\"data-dot-big\"\n                                      fill={color}\n                                      r={5}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                    />\n                                    <circle\n                                      fill={'transparent'}\n                                      r={5}\n                                      cx={xScale(item[x.field]) || 0}\n                                      cy={yScale(item[y.field]) || 0}\n                                      data-tip={tooltip ? tooltip(item) : undefined}\n                                      data-for=\"line-tooltip\"\n                                    />\n                                  </g>\n                                  : null\n                              }\n                            </>\n                          )\n                        })\n                      }\n                    </g>\n                  );\n                })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight + margins.top\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([genre, color], genreIndex) => (\n                        <li\n                          key={genre}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {genre}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"line-tooltip\" />\n    </>\n  )\n}\nexport default LineChart;","import LineChart from './LineChart';\n\nexport default LineChart;","import { useState, useEffect, useMemo, useReducer } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport {v4 as genId} from 'uuid';\n\nimport {useInterval} from '../../helpers/hooks';\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\nimport './BoatsIllustration.scss';\n\nconst PASS_DURATION = 100000;\nconst UPDATE_RATE = 4000;\n\n/**\n * Returns a boat hull shape\n * @param {number} width\n * @param {number} height\n * @returns  {React.ReactElement} - React component\n */\nconst Hull = ({\n  width,\n  height,\n}) => {\n  const bottomRightX = width * .7;\n  const bottomLeftX = width * .05;\n  return (\n    <path\n      className=\"hull\"\n      d={`M 0 0 L ${width / 3} ${0} L ${width / 3} ${height / 4} L ${width * .6} ${height / 4} L ${width * .6} 0 L ${width} 0 L ${bottomRightX} ${height} L ${bottomLeftX} ${height} Z`}\n    />\n  )\n\n}\n\n/**\n * Returns a boat sail shape\n * @param {number} width\n * @param {number} height\n * @param {number} sailSpeed - period in miliseconds\n * @param {number} distance - factor in [0,1]\n * @returns  {React.ReactElement} - React component\n */\nconst Sail = ({\n  width,\n  height,\n  sailSpeed,\n  distance = 1\n}) => {\n\n  const randomFactor = useMemo(() => Math.random() * .4 + 1, [])\n  \n  const minRightX = width;\n  const minLeftX = 0;\n  const maxLeftX = 5 * distance;\n  const maxRightX = width + 5 * distance;\n\n  const step1 = {\n    points: `0,${height * .1} ${width},${0} ${maxRightX},${height / 2} ${width},${height * .9} 0,${height} ${maxLeftX} ${height / 2}`\n  }\n  const step2 = {\n    points: `0,${height * .1} ${width},${0} ${minRightX},${height / 2} ${width},${height * .9} 0,${height} ${minLeftX} ${height / 2}`\n  }\n\n  const {points} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 500 * sailSpeed * randomFactor }\n  });\n  return (\n    <>\n      <animated.polygon\n        points={points}\n        className=\"sail\"\n      />\n    </>\n  )\n}\n\n/**\n * Returns a boat matt shape\n * @param {number} width\n * @param {number} height\n * @param {number} sailSpeed - period in miliseconds\n * @param {number} distance - factor in [0,1]\n * @returns  {React.ReactElement} - React component\n */\nconst Matt = ({\n  width,\n  height,\n  sailSpeed,\n  distance\n}) => {\n  const secondWidth = width * .7;\n  return (\n    <>\n      <g transform={`translate(${width/2 - secondWidth/2}, ${height * .1})`}>\n        <Sail sailSpeed={sailSpeed} distance={distance} width={secondWidth} height={height /4} />\n      </g>\n      <g transform={`translate(0, ${height * .4})`}>\n        <Sail sailSpeed={sailSpeed} distance={distance} width={width} height={height * .45} />\n      </g>\n      <line\n        x1={width / 2}\n        x2={width / 2}\n        y1={0}\n        y2={height * 1.1}\n      />\n    </>\n  )\n}\n\n/**\n * Returns a boat shape\n * @param {number} x\n * @param {number} height\n * @param {number} distance - factor in [0,1]\n * @returns  {React.ReactElement} - React component\n */\nconst Boat = ({\n  x,\n  height,\n  distance\n}) => {\n  const [hullHeightRatio, setHullHeightRatio] = useState(.2);\n  const [mattNumber, setMattNumber] = useState(1);\n  const matts = useMemo(() => {\n    let m = [];\n    for (let i = 0; i < mattNumber; i++) {\n      m.push({ heightRatio: 1 })\n    }\n    return m;\n  }, [mattNumber])\n\n  const step1 = {\n    transform: `skewX(-3)`\n  }\n  const step2 = {\n    transform: `skewX(3)`\n  }\n  const {transform} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 3000 }\n  });\n\n\n  useEffect(() => {\n    const nOfMatts = Math.round(Math.random() * 2) + 1;\n    const newHullHeightRatio = .1 + Math.random() * .1;\n    setMattNumber(nOfMatts)\n    setHullHeightRatio(newHullHeightRatio);\n  }, []);\n  const randomFactor = useMemo(() => Math.random(), [])\n\n\n  const boatWidth = height;\n\n  return (\n    <animated.g\n      className=\"boat\"\n      transform={transform}\n    >\n      {\n        matts.map((matt, mattIndex) => {\n          const displace = (boatWidth * .9);\n          const x = ((mattIndex) / (matts.length)) * displace;\n          const width = (boatWidth / matts.length) * .8;\n          return (\n            <g key={mattIndex} className=\"matt\" transform={`translate(${x}, 0)`}>\n              <Matt\n                width={width}\n                height={height - height * hullHeightRatio}\n                sailSpeed={randomFactor * .5 + 1}\n                distance={distance}\n              />\n            </g>\n          )\n        })\n      }\n      <g transform={`translate(0, ${height - height * hullHeightRatio})`}>\n        <Hull\n          width={boatWidth}\n          height={height * hullHeightRatio}\n        />\n      </g>\n    </animated.g>\n  )\n}\n\n/**\n * Returns a bird shape\n * @param {number} boatHeight\n * @param {number} containerHeight\n * @param {number} distance - factor in [0,1]\n * @returns  {React.ReactElement} - React component\n */\nconst Bird = ({\n  boatHeight,\n  containerHeight,\n  distance\n}) => {\n  \n  const dimension = containerHeight / 20 * (distance / 2);\n  const step1 = {\n    points: `0,${0}, ${dimension/2},${dimension/3} ${dimension},${0} ${dimension/2} ${dimension / 2}`\n  }\n  const step2 = {\n    points: `0,${dimension}, ${dimension/2},${0} ${dimension},${dimension} ${dimension/2} ${dimension / 3}`\n  }\n\n  const moveSteps = useMemo(() => {\n    const steps = []\n    for (let i = 0 ; i < 30 ; i++) {\n      const y = Math.random() * boatHeight * 1.3 + containerHeight - boatHeight * 1.5;\n      const x = Math.random() * boatHeight * 2 - boatHeight;\n      const scale = Math.random() + .5\n      steps.push({\n        transform: `translate(${x}, ${y})scale(${scale})`\n      })\n    }\n    return steps;\n  }, [boatHeight, containerHeight])\n\n  const {points} = useSpring({\n    loop: true,\n    to: [step1, step2, step1],\n    from: step1,\n    config: { duration: 300 }\n  });\n  const {transform} = useSpring({\n    loop: true,\n    to: [...moveSteps, moveSteps[0]],\n    from: moveSteps[0],\n    config: { duration: 900 }\n  });\n  return (\n    <animated.g className=\"bird\" transform={transform}>\n      <animated.polygon\n        points={points}\n      />\n    </animated.g>\n  )\n}\n\n/**\n * Returns a moving boat + optional birds\n * @param {number} containerHeight\n * @param {number} containerWidth\n * @param {boolean} rightToLeft\n * @param {number} startAt - starting point in pixels\n * @param {number} size - factor for defining height relative to container height\n * @param {number} distance - factor in [0,1]\n * @returns  {React.ReactElement} - React component\n */\nconst MovingBoat = ({\n  containerHeight,\n  containerWidth,\n  rightToLeft,\n  startAt,\n  size,\n  distance = 1\n}) => {\n  const birds = useMemo(() => {\n    if (distance > .5 && Math.random() > .5) {\n      const numberOfBirds = 1 + Math.round(Math.random() * 20);\n      let b = [];\n      for (let i = 0 ; i < numberOfBirds ; i++) {\n        b.push(i);\n      }\n      return b;\n    } else {\n      return [];\n    }\n  }, [distance])\n  const start = -containerWidth * 0.3; \n  const end = containerWidth * 1.3;\n  const step1 = {\n    transform: `translate(${rightToLeft ? end : start}, 0)`\n  }\n  const step2 = {\n    transform: `translate(${rightToLeft ? start : end}, 0)`\n  }\n  if (startAt) {\n    step1.transform =  `translate(${startAt}, 0)`\n  }\n  const randomFactor = useMemo(() => Math.random(), [])\n  const {transform} = useSpring({\n    from: step1,\n    to: step2,\n    config: { duration: PASS_DURATION * (2 - distance * (1 + randomFactor / 10)) }\n  });\n  const height = containerHeight * 0.2 * size * distance;\n  return (\n    <animated.g\n      transform={transform}\n    >\n      <g style={{opacity: distance}} transform={rightToLeft ? 'scale(-1, 1)' : ''}>\n        <g transform={`translate(0, ${containerHeight - height})`}>\n          <Boat\n            x={0}\n            height={height}\n            distance={distance}\n          />\n        </g>\n        {\n          birds.map(index => (\n            <Bird\n              containerHeight={containerHeight}\n              boatHeight={height}\n              distance={distance}\n              key={index}\n            />\n          ))\n        }\n        \n      </g>\n    </animated.g>\n  )\n}\n\n\n/**\n * Returns moving boats\n * @param {number} width\n * @param {number} height\n * @returns  {React.ReactElement} - React component\n */\nconst BoatsIllustration = ({\n  width: inputWidth = 1200,\n  height: inputHeight = 100,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  const createBoat = (payload = {}) => {\n    const {startAt = 0} = payload;\n    const id = genId();\n    const distance = Math.random() * .8 + .2;\n    const rightToLeft = Math.random() >= .5;\n    const size = Math.round(Math.random() * 3) + 1;\n    return {\n      id,\n      distance, \n      rightToLeft,\n      size,\n      createdAt: new Date().getTime(),\n      startAt\n    }\n  }\n  const [boats, updateBoats] = useReducer((b, action) => {\n    switch(action.type) {\n      case 'removeBoat':\n        return Object.entries(b).reduce((res, [id, boat]) => {\n          if (id !== action.payload) {\n            return {\n              ...res,\n              [id]: boat\n            }\n          } else {\n            return res;\n          }\n        }, {});\n      case 'createBoat':\n      default:\n        const boat = createBoat(action.payload);\n        return {\n          ...b,\n          [boat.id]: boat\n        }\n    }\n  }, {});\n\n  useEffect(() => {\n    // add boats regularly\n    const timeout = setTimeout(() => {\n      // add boat\n      updateBoats({type: 'createBoat'})\n    }, PASS_DURATION / 10)\n    return () => clearTimeout(timeout)\n  }, [boats, updateBoats])\n\n  useInterval(() => {\n    const now = new Date();\n    Object.entries(boats).reduce((res, [id, boat]) => {\n      if (now.getTime() < boat.createdAt + PASS_DURATION * 1.3) {\n        return {\n          ...res,\n          [id]: boat\n        }\n      } else {\n        updateBoats({type: 'removeBoat', payload: id})\n        return res;\n      }\n    }, {})\n  }, UPDATE_RATE)\n\n  useEffect(() => {\n    for (let i = 0 ; i < 5 ; i++) {\n      updateBoats({type: 'createBoat', payload: {startAt: width * Math.random()}})\n    }\n  }, []);/* eslint react-hooks/exhaustive-deps : 0 */\n\n  return (\n    <svg className=\"BoatsIllustration\" width={width} height={height}>\n      {\n        Object.entries(boats).map(([id, {\n          distance, \n          rightToLeft, \n          size,\n          startAt\n        }]) => (\n          <MovingBoat \n            key={id} \n            distance={distance} \n            size={size} \n            rightToLeft={rightToLeft} \n            containerHeight={height} \n            containerWidth={width} \n            startAt={startAt}\n          />\n        ))\n      }\n    </svg>\n  )\n}\n\nexport default BoatsIllustration;","import BoatsIllustration from './BoatsIllustration';\n\nexport default BoatsIllustration;","\nimport {useContext, useEffect, useRef, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\n\nimport {VisualizationControlContext} from '../../helpers/contexts';\n\n/**\n * Visulization caller to place in contents\n * @param {string} id - visualization id used by visualization context to map caller with a specific vis\n * @param {object} props - visualization parameters passed as payload to visualization context\n * @returns  {React.ReactElement} - React component\n */\nconst Caller = ({id: visualizationId, ...props}) => {\n  const ref = useRef(null);\n  // we differentiate caller id and visualization id as their rel can theoretically be n-1\n  const [id] = useState(genId());\n  const {\n    // used to define whether caller is active\n    activeVisualization,\n    onBlockClick,\n    // callbacks used to register/unregister visualization data & HTML ref in upstream state\n    onRegisterVisualization,\n    onUnregisterVisualization,\n  } = useContext(VisualizationControlContext);\n\n  // register vis on caller's mount, unregister it on unmount\n  useEffect(() => {\n    // we wrap callback in a setTimeout in order to have a non-null ref to the HTML element\n    setTimeout(() => {\n      let payload = {...props};\n      payload = {\n        ...payload,\n        ref,\n        visualizationId,\n        id\n      }\n      onRegisterVisualization(payload)\n    })\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id])\n\n  const onClick = e => {\n    if (typeof onBlockClick === 'function') {\n      onBlockClick(id, ref);\n    }\n  }\n  return (\n    <div\n      ref={ref}\n      onClick={onClick} \n      className={cx(\"Caller\", {\n        'is-active': activeVisualization && id === activeVisualization.id, \n        'is-clearfix': !visualizationId,\n        // currently is-hidden and is-devmode are logically symetrical, but this can be useful to differentiate the 2 in dev\n        'is-hidden': process.env.NODE_ENV !== 'development',\n        'is-devmode': process.env.NODE_ENV === 'development',\n      })}\n    >\n      {\n        process.env.NODE_ENV === 'development' ?\n        <>\n          {\n          visualizationId ?\n          <>caller pour la visualisation <code>{visualizationId}</code> </>\n          :\n          <>caller sans id (agit comme un clearfix)</>\n        }{\n          Object.keys(props).length ? \n            <span>avec les paramètres {JSON.stringify(props)}</span>\n          : null\n        }\n        </>\n        :\n        null\n      }\n      \n    </div>\n  );\n}\n\nexport default Caller;","import Caller from './Caller';\n\nexport default Caller;","import { geoPath } from \"d3-geo\";\nimport { generatePalette } from '../../helpers/misc';\nimport { uniq } from 'lodash';\nimport cx from 'classnames';\nimport { useSpring, animated } from 'react-spring'\nimport { useEffect, useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\n/**\n * Description\n * @param {string} d\n * @param {function} projection\n * @param {function} project\n * @param {object} palette\n * @param {object} layer\n * @param {number} width\n * @param {number} height\n * @returns {React.ReactElement} - React component\n */\nconst GeoPart = ({ \n  d: initialD, \n  projection, \n  project, \n  palette, \n  layer, \n  width, \n  height\n}) => {\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const currentD = project(initialD);\n\n  const animationProps = useSpring({\n    to: {\n      d: currentD\n    },\n    immediate: !isInited\n  });\n\n  // @todo do this cleanly (removing out of bound objects to improve performance)\n  const boundsAbs = geoPath().bounds(initialD);\n  const [[x1, y1], [x2, y2]] = [projection(boundsAbs[0]), projection(boundsAbs[1])];\n  const [xMin, xMax] = [x1, x2].sort((a, b) => {\n    if (a > b) return 1;\n    return -1;\n  });\n  const [yMin, yMax] = [y1, y2].sort((a, b) => {\n    if (a > b) return 1;\n    return -1;\n  });\n  const outOfBounds = (isNaN(xMin) || isNaN(xMax) || isNaN(yMin) || isNaN(yMax)) ? false : xMin > width || yMin > height || xMax < 0 || yMax < 0;\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  });\n  return outOfBounds ? null : (\n    <animated.path\n      title={initialD.properties.shortname}\n      d={animationProps.d}\n      className=\"geopart\"\n      data-tip={layer.tooltip ? layer.tooltip(initialD) : undefined}\n      data-for=\"geo-tooltip\"\n      style={{\n        fill: layer.color !== undefined && palette !== undefined ? palette[initialD.properties[layer.color.field]] : 'transparent'\n      }}\n    />\n  )\n}\n\n\n// @TODO : mettre en place une palette de couleurs quantitative \n\nconst ChoroplethLayer = ({ layer, projection, width, height, reverseColors }) => {\n\n  let palette;\n  const project = geoPath().projection(projection);\n\n  if (!layer.data) {\n    console.info(layer);\n    return null;\n  }\n\n  if (layer.data.features && layer.color && layer.color.field) {\n    // colors palette building\n    const colorValues = uniq(layer.data.features.map(datum => datum.properties[layer.color.field]));\n    if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n      palette = layer.color.palette;\n    } else if (layer.color.generatedPalette) {\n      const colors = generatePalette('map', layer.data.features.length);\n      palette = colorValues.reduce((res, key, index) => ({\n        ...res,\n        [key]: colors[index]\n      }), {});\n    }\n  }\n\n  return (\n    <>\n      <g className={cx(\"ChoroplethLayer\", { 'reverse-colors': reverseColors })}>\n        {\n          layer.data.features\n          .filter(d => d.geometry)\n          .map((d, i) => {\n            return (\n              <GeoPart \n                key={d.properties.id || d.properties.name || i} \n                {...{projection, project, palette, layer, d, width, height}}\n              />\n            )\n          })\n        }\n      </g>  \n    </>\n  );\n\n}\n\nexport default ChoroplethLayer;","\nimport { useMemo } from 'react';\nimport { uniq } from 'lodash';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\n\nimport { generatePalette } from '../../helpers/misc';\nimport { useSpring, animated, Transition } from 'react-spring'\nimport { useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\n\n/**\n * Returns a point and its label\n * @param {function} projection\n * @param {object} datum\n * @param {object} layer\n * @param {number} opacity\n * @param {function} onGroupMouseEnter\n * @param {function} onGroupMouseLeave\n * @param {boolean} displayLabel\n * @returns {React.ReactElement} - React component \n */\nconst PointGroup = ({\n  projection,\n  datum,\n  layer,\n  opacity,\n  onGroupMouseEnter,\n  onGroupMouseLeave,\n  displayLabel\n}) => {\n  const { tooltip } = layer;\n  const { latitude, longitude, size: area, color, label, rawSize, labelPosition = 'right', labelSize, index } = datum;\n  const size = Math.sqrt(area / Math.PI)\n  const [x, y] = projection([+longitude, +latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { transform } = useSpring({\n    to: {\n      transform: `translate(${x},${y})`\n    },\n    immediate: !isInited\n  });\n  return (\n    <>\n      <animated.g\n        className=\"point-group\"\n        transform={transform}\n        style={{\n          zIndex: labelSize,\n          opacity: opacity\n        }}\n        onMouseEnter={() => onGroupMouseEnter(index)}\n        onMouseMove={() => onGroupMouseEnter(index)}\n        onMouseLeave={() => onGroupMouseLeave()}\n        data-for=\"geo-tooltip\"\n        data-tip={typeof tooltip === 'function' ? tooltip(datum) : undefined}\n      >\n        <circle\n          cx={0}\n          cy={0}\n          r={size}\n          style={{ fill: color }}\n          className=\"marker\"\n        />\n        {\n          layer.size && layer.size.displayMetric && labelSize > 9 ?\n            <text\n              x={0}\n              y={labelSize * .8 * .33}\n              textAnchor=\"middle\"\n              fontSize={labelSize * .8}\n              fill=\"white\"\n            >\n              {rawSize}\n            </text>\n            : null\n        }\n\n        {\n          label && displayLabel ?\n            <text\n              x={labelPosition === 'right' ? size + 5 : -size - 5}\n              y={size / 2}\n              fill={layer.color && layer.color.labelsColor}\n              textAnchor={labelPosition === 'right' ? 'start' : 'end'}\n              fontSize={labelSize}\n            >\n              {label}\n            </text>\n            : null\n        }\n      </animated.g>\n    </>\n\n  );\n}\n\n/**\n * Returns label group in a stacked layout\n * @param {object} layer\n * @param {object} datum\n * @param {number} thatIndex\n * @param {number} opacity\n * @param {number} stackedRowHeight\n * @param {function} onGroupMouseEnter\n * @param {function} onGroupMouseLeave\n * @param {number} labelFontSize\n * @param {function} projection\n * @returns {React.ReactElement} - React component \n */\nconst StackedLabelGroup = ({\n  layer,\n  datum,\n  thatIndex,\n  opacity,\n  stackedRowHeight,\n  onGroupMouseEnter,\n  onGroupMouseLeave,\n  labelFontSize,\n  projection\n}) => {\n  const { tooltip } = layer;\n  const { latitude, longitude, size: area, label, /*labelPosition = 'right', labelSize, index*/ } = datum;\n  const size = Math.sqrt(area / Math.PI)\n  const [x, y] = projection([+longitude, +latitude]);\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n  const { x2, y2, transformLabel } = useSpring({\n    to: {\n      x2: x - size,\n      y2: y,\n      transformLabel: `translate(${window.innerWidth * 0.01}, ${datum.labelY})`\n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g\n      style={{\n        // zIndex: labelSize,\n        opacity: opacity\n      }}\n      onMouseEnter={() => onGroupMouseEnter(thatIndex)}\n      onMouseMove={() => onGroupMouseEnter(thatIndex)}\n      onMouseLeave={() => onGroupMouseLeave()}\n      data-for=\"geo-tooltip\"\n      data-tip={typeof tooltip === 'function' ? tooltip(datum) : undefined}\n    >\n      <animated.g className=\"label-container\" transform={transformLabel}>\n        <text style={{ fontSize: labelFontSize }}>\n          {\n            label\n          }\n        </text>\n      </animated.g>\n      <animated.line\n        x1={labelFontSize * label.length * .5 + window.innerWidth * 0.01}\n        y1={datum.labelY - stackedRowHeight * .2}\n        x2={x2}\n        y2={y2}\n      />\n    </animated.g>\n  )\n}\n\nconst PointsLayer = ({ layer, projection, width, height }) => {\n\n  const [hoveredIndex, setHoveredIndex] = useState(null);\n\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  /**\n    * Data aggregation for viz (note : could be personalized if we visualize other things than points)\n  */\n  const markerData = useMemo(() => {\n    if (layer.data) {\n\n      // regroup data by coordinates\n      const coordsMap = {};\n      layer.data.forEach(datum => {\n        // id\n        const mark = datum.latitude + ',' + datum.longitude;\n        if (!coordsMap[mark]) {\n          coordsMap[mark] = {\n            label: layer.label ? datum[layer.label.field] : undefined,\n            labelPosition: layer.label ? layer.label.position : undefined,\n            latitude: +datum.latitude,\n            longitude: +datum.longitude,\n            color: layer.color !== undefined ? datum[layer.color.field] : 'default',\n            size: (layer.size !== undefined && layer.size.field !== undefined) ? isNaN(+datum[layer.size.field]) ? 0 : +datum[layer.size.field] : 0\n          }\n        } else if (layer.size !== undefined) {\n          coordsMap[mark].size += (isNaN(+datum[layer.size.field]) ? 0 : +datum[layer.size.field])\n        }\n      })\n\n      let grouped = Object.entries(coordsMap).map(([_mark, datum]) => datum);\n\n      let palette;\n      if (layer.color !== undefined) {\n        // colors palette building\n        const colorValues = uniq(grouped.map(g => g.color));\n        if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n          palette = layer.color.palette;\n        } else {\n          const colors = generatePalette('map', colorValues.length);\n          palette = colorValues.reduce((res, key, index) => ({\n            ...res,\n            [key]: colors[index]\n          }), {});\n        }\n      }\n\n      // size building\n\n      // compute size (would have been more elegand with a ternary but I did not manage to write it properly)\n      let sizeCoef = width / 300; // default size\n      if (layer.size !== undefined && layer.size.custom !== undefined) {\n        sizeCoef = parseInt(layer.size.custom * width / 100);\n      }\n\n      const sizeExtent = extent(grouped.map(g => g.size));\n      // basing the scale on area rather than radius\n      const radiusRange = [3, width * height / 20000];\n      const areaRange = radiusRange.map(r => Math.PI * r * r);\n      const sizeScale = scaleLinear().domain(sizeExtent).range(areaRange) // adapt size to width, @TODO : enable to parameter scale (with domain & range)\n      const labelSizeScale = scaleLinear().domain(sizeExtent).range([8, width / 30]) // adapt size to width, @TODO : enable to parameter scale (with domain & range)\n      grouped = grouped.map(datum => ({\n        ...datum,\n        color: layer.color !== undefined ? palette[datum.color] : 'grey',\n        size: layer.size !== undefined ? layer.size.custom !== undefined ? sizeCoef : sizeScale(datum.size) : width / 100,\n        rawSize: datum.size,\n        labelSize: layer.size !== undefined ? labelSizeScale(datum.size) : width * height / 30000\n      }))\n      return grouped;\n    }\n  }, [projection, width, layer])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  let visibleMarkers = markerData\n    .filter(({ latitude, longitude }) => latitude && longitude && !isNaN(latitude) && !isNaN(longitude))\n    .sort((a, b) => {\n      if (a.latitude > b.latitude) {\n        return 1;\n      }\n      return -1;\n    })\n\n  const onGroupMouseEnter = index => {\n    if (hoveredIndex !== index)\n      setHoveredIndex(index);\n  }\n  const onGroupMouseLeave = () => {\n    setTimeout(() => {\n      if (hoveredIndex !== null)\n        setHoveredIndex(null);\n    })\n  }\n  const stackedLabelsTop = height * .1;\n  const stackedLabelsHeight = height * .9;\n  const stackedRowHeight = stackedLabelsHeight / visibleMarkers.length;\n  const maxLabelFontSize = window.innerHeight * 0.02;\n  const labelFontSize = stackedRowHeight < maxLabelFontSize ? stackedRowHeight : maxLabelFontSize;\n  if (layer.stackLabels) {\n    visibleMarkers = visibleMarkers\n      .sort((a, b) => {\n        if (a.latitude > b.latitude) {\n          return -1;\n        }\n        return 1;\n      })\n      .map((d, i) => ({\n        ...d,\n        labelY: stackedRowHeight * i + stackedLabelsTop\n      }))\n  }\n  visibleMarkers = visibleMarkers.map((d, index) => ({ ...d, index }));\n  return (\n    <g className=\"PointsLayer\">\n      {\n        layer.stackLabels ?\n          <g className=\"stacked-labels-container\">\n            <Transition\n              // items={visibleMarkers.map((d, i) => ({...d, labelPosition: i%2 === 0 ? 'left' : 'right', index: i}))}\n              items={visibleMarkers}\n              from={{ opacity: 0 }}\n              enter={{ opacity: 1 }}\n              leave={{ opacity: 0 }}\n            >\n              {({ opacity }, datum, thatIndex) => (\n                <StackedLabelGroup\n                  key={datum.label}\n                  {...{\n                    projection,\n                    datum,\n                    layer,\n                    opacity: hoveredIndex !== null ? hoveredIndex === datum.index ? 1 : .1 : opacity,\n                    thatIndex: datum.index,\n                    onGroupMouseEnter,\n                    onGroupMouseLeave,\n                    stackedRowHeight,\n                    labelFontSize,\n                  }}\n                />\n              )\n\n              }\n            </Transition>\n          </g>\n          : null\n      }\n      <Transition\n        // items={visibleMarkers.map((d, i) => ({...d, labelPosition: i%2 === 0 ? 'left' : 'right', index: i}))}\n        items={visibleMarkers}\n        from={{ opacity: 0 }}\n        enter={{ opacity: 1 }}\n        leave={{ opacity: 0 }}\n      >\n        {({ opacity }, datum, index) => (\n          <PointGroup\n            key={datum.label}\n            {...{\n              projection,\n              datum,\n              layer,\n              opacity: hoveredIndex !== null ? hoveredIndex === datum.index ? 1 : .1 : opacity,\n              index: datum.index,\n              onGroupMouseEnter,\n              onGroupMouseLeave,\n              displayLabel: !layer.stackLabels\n            }}\n          />\n        )\n\n        }\n      </Transition>\n      {/* {\n        visibleMarkers\n          .map((datum, index) => {\n            return (\n              <PointGroup\n                key={datum.label}\n                {...{ projection, datum, layer }}\n              />\n            )\n          })\n      } */}\n    </g>\n  );\n}\n\nexport default PointsLayer;","\nimport { useMemo, useState, useEffect } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport cx from 'classnames';\nimport { max } from 'd3-array';\nimport { uniq } from 'lodash';\nimport { cartesian2Polar, fixSvgDimension, generatePalette, polarToCartesian } from '../../helpers/misc';\n\nimport { useSpring, animated } from 'react-spring'\n\n/*\nPrincipe : path entre deux point géographiques, dont le stroke peut varier, et on peut avoir la direction avec une fleche \n\nformat des données attendu (json) : \n\nExemple :\n\"flow_id\": \"45.95_-0.9_46.166667_-1.15\", \n\"port_dep\": \"Charente\", \n\"port_dest\": \"La Rochelle\", \n\"latitude_dep\": 45.95, \n\"longitude_dep\": -0.9, \n\"latitude_dest\": 46.166667, \n\"longitude_dest\": -1.15, \n\"nb_flows\": 22, \n\"tonnages_cumulés\": 730}\n\n*/\n\n/**\n * Displays a particular flow\n * @param {string} id\n * @param {boolean} hovered\n * @param {number} xDep\n * @param {number} yDep\n * @param {number} xDest\n * @param {number} yDest\n * @param {number} strokeWidth\n * @param {string} color\n * @param {string} path\n * @param {number} actualXDep\n * @param {number} actualYDep\n * @param {number} actualXDest\n * @param {number} actualYDest\n * @param {number} arrowLength\n * @param {function} onMouseEnter\n * @param {function} onMouseLeave\n * @returns {React.ReactElement} - React component \n */\nconst FlowGroup = ({\n  id,\n  hovered,\n  xDep: inputXDep,\n  yDep: inputYDep,\n  xDest: inputXDest,\n  yDest: inputYDest,\n  strokeWidth: inputStrokeWidth,\n  color = 'black',\n\n  path,\n  actualXDep,\n  actualYDep,\n  actualXDest,\n  actualYDest,\n  arrowLength,\n  onMouseEnter,\n  onMouseLeave,\n  // datum,\n  // layer,\n  // depLabelTextAnchor,\n  // depLabelX,\n  // depLabelY,\n  // destLabelTextAnchor,\n  // destLabelX,\n  // destLabelY,\n  // fontSize,\n}) => {\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, []);\n\n  const { d, strokeWidth } = useSpring({\n    to: {\n      xDep: inputXDep,\n      yDep: inputYDep,\n      xDest: inputXDest,\n      yDest: inputYDest,\n      d: path,\n      strokeWidth: fixSvgDimension(inputStrokeWidth),\n      arrowPath: `M ${actualXDep} ${actualYDep} L ${actualXDest} ${actualYDest}`\n    },\n    immediate: !isInited\n  });\n\n  return (\n    <g onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave} className={cx(\"flow-group\", { hovered })}>\n      <defs>\n        <marker\n          id={`triangle-${id}`}\n          viewBox={`0 0 ${arrowLength} ${arrowLength}`}\n          refY={arrowLength / 2}\n          orient=\"auto\">\n          <path d={`M 0 0 L ${arrowLength} ${arrowLength / 2} L 0 ${arrowLength} Z`} fill={color} />\n        </marker>\n      </defs>\n      {/* hover placeholder */}\n      <animated.path\n        d={d}\n        strokeWidth={strokeWidth * 3}\n        fill=\"none\"\n        stroke={color}\n        opacity={0}\n      />\n      <animated.path\n        d={d}\n        strokeWidth={strokeWidth}\n        markerEnd={`url(#triangle-${id})`}\n        fill=\"none\"\n        stroke={color}\n      />\n    </g>\n  )\n}\n\n/**\n * Displays a series of flow and their labels\n * @param {array} layer\n * @param {function} projection\n * @param {number} width\n * @param {number} height\n * @param {string} projectionTemplate\n * @returns {React.ReactElement} - React component\n */\nconst FlowsLayer = ({\n  layer,\n  projection,\n  width,\n  height,\n  projectionTemplate,\n}) => {\n\n  /**\n    * Data aggregation for viz\n  */\n  const markerData = useMemo(() => {\n    if (layer.data) {\n\n      // size building\n      const strokeWidthScale = scaleLinear().domain([\n        0,\n        max(\n          layer.data.map((flow) => {\n            return +flow[layer.size.field];\n          })\n        )\n      ]).range([1, width * height / 20000]);\n\n      const arrowSizeScale = strokeWidthScale.copy().range([0, width * height / 100000]);\n\n      let grouped = layer.data.map(flow => ({ // je ne sais pas si grouped reste le plus adapté\n        ...flow,\n        // color: palette[datum.color],\n        strokeWidth: strokeWidthScale(+flow[layer.size.field]),\n        arrowSize: arrowSizeScale(layer.data.strokeWidth)\n      }))\n      let palette;\n      if (layer.color !== undefined) {\n        // colors palette building\n        const colorValues = uniq(grouped.map(g => g[layer.color.field]));\n        if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n          palette = layer.color.palette;\n        } else {\n          const colors = generatePalette('map', colorValues.length);\n          palette = colorValues.reduce((res, key, index) => ({\n            ...res,\n            [key]: colors[index]\n          }), {});\n        }\n        grouped = grouped.map(datum => ({\n          ...datum,\n          color: layer.color !== undefined ? palette[datum[layer.color.field]] : 'grey',\n        }))\n      }\n      // console.log(\"grouped : \", grouped)\n      return grouped\n        .filter(({ latitude_dep, longitude_dep, latitude_dest, longitude_dest }) => latitude_dep && longitude_dep && latitude_dest && longitude_dest && !isNaN(latitude_dep) && !isNaN(longitude_dep) && !isNaN(latitude_dest) && !isNaN(longitude_dest))\n        .map((datum, index) => {\n          const { latitude_dep, longitude_dep, latitude_dest, longitude_dest, strokeWidth, arrowSize, color } = datum;\n          const [xDep, yDep] = projection([+longitude_dep, +latitude_dep]);\n          const [xDest, yDest] = projection([+longitude_dest, +latitude_dest]);\n          // console.log(\"[xDep, yDep] / [xDest, yDest] : \", [xDep, yDep], \" / \", [xDest, yDest]);\n          if (layer.hideOverflowingFlows) {\n            if (xDep < 0 || xDep > width || xDest < 0 || xDest > width\n              || yDep < 0 || yDep > height || yDest < 0 || yDest > height\n            ) {\n              return null;\n            }\n          }\n          const id = `${xDep}-${yDep}-${xDest}-${yDest}`;\n\n          const arrowLength = fixSvgDimension(strokeWidth) * 3;\n\n          const { distance, radians } = cartesian2Polar(xDest - xDep, yDest - yDep);\n          const [relativeXDest, relativeYDest] = polarToCartesian(distance - arrowLength, radians);\n          let actualXDest = xDep + relativeXDest;\n          let actualYDest = yDep + relativeYDest;\n          let actualXDep = xDep;\n          let actualYDep = yDep;\n          let path = `M ${actualXDep} ${actualYDep} L ${actualXDest} ${actualYDest}`;\n\n          let depLabelPosition = actualXDest < actualXDep ? 'right' : 'left';\n          let destLabelPosition = actualXDest > actualXDep ? 'right' : 'left';\n          if (actualXDest < width * .26) {\n            destLabelPosition = 'right';\n          }\n          if (actualXDest > width * .75) {\n            destLabelPosition = 'left';\n          }\n\n          const fontSize = width * 0.02;\n\n          const depLabelTextAnchor = depLabelPosition === 'right' ? 'start' : 'end';\n          const depLabelX = depLabelPosition === 'right' ? 10 : -10\n          const depLabelY = fontSize * .3\n\n          const destLabelTextAnchor = destLabelPosition === 'right' ? 'start' : 'end'\n          const destLabelX = destLabelPosition === 'right' ? 10 : -10\n          const destLabelY = fontSize * .3;\n\n          return {\n            id,\n            arrowSize,\n            xDep,\n            yDep,\n            xDest,\n            yDest,\n            strokeWidth,\n            datum,\n            layer,\n            width,\n            color,\n            height,\n            projectionTemplate,\n\n            fontSize,\n            path,\n            actualXDep,\n            actualYDep,\n            actualXDest,\n            actualYDest,\n            arrowLength,\n\n            depLabelTextAnchor,\n            depLabelX,\n            depLabelY,\n\n            destLabelTextAnchor,\n            destLabelX,\n            destLabelY,\n          }\n        })\n        .filter(d => d)\n    }\n    return []\n  }, [projection, width, layer, height])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  const labels = useMemo(() => {\n    let newLabels = markerData.reduce((res, flow) => {\n      const {\n        id,\n        xDep,\n        yDep,\n        xDest,\n        yDest,\n        strokeWidth,\n  \n        depLabelX,\n        depLabelY,\n        depLabelTextAnchor,\n  \n        destLabelX,\n        destLabelY,\n        destLabelTextAnchor,\n        fontSize,\n        datum\n      } = flow;\n      const depId = datum[layer.label.fields[0]] // `${actualXDep}-${actualYDep}`;\n      if (res[depId]) {\n        // update position if we find a larger flow for this label\n        if (res[depId].largerStrokeWidth > strokeWidth) {\n          res[depId] = {\n            ...res[depId],\n            largerStrokeWidth: strokeWidth,\n            x: xDep + depLabelX,\n            y: yDep + depLabelY,\n            textAnchor: depLabelTextAnchor,\n            fontSize\n          }\n        }\n        res[depId].flows = [...res[depId].flows, id]\n        // create a new entry for label\n      } else {\n        res[depId] = {\n          label: datum[layer.label.fields[0]],\n          largerStrokeWidth: strokeWidth,\n          x: xDep + depLabelX,\n          y: yDep + depLabelY,\n          textAnchor: depLabelTextAnchor,\n          fontSize,\n          flows: [id]\n        }\n      }\n  \n      const destId = datum[layer.label.fields[1]] // `${actualXDest}-${actualYDest}`;\n      if (res[destId]) {\n        // update position if we find a larger flow for this label\n        if (res[destId].largerStrokeWidth > strokeWidth) {\n          res[destId] = {\n            ...res[destId],\n            largerStrokeWidth: strokeWidth,\n            x: xDest + destLabelX,\n            y: yDest + destLabelY,\n            textAnchor: destLabelTextAnchor,\n            fontSize\n          }\n        }\n        res[destId].flows = [...res[destId].flows, id]\n        // create a new entry for label\n      } else {\n        res[destId] = {\n          label: datum[layer.label.fields[1]],\n          largerStrokeWidth: strokeWidth,\n          x: xDest + destLabelX,\n          y: yDest + destLabelY,\n          textAnchor: destLabelTextAnchor,\n          fontSize,\n          flows: [id]\n        }\n      }\n      return res;\n    }, {})\n    newLabels = Object.entries(newLabels).map(([id, label]) => ({\n      id,\n      ...label,\n      width: label.label.length * label.fontSize * 0.5,\n      actualX: label.textAnchor === 'start' ? label.x : label.x - (label.label.length * label.fontSize * 0.5),\n      height: label.fontSize,\n    }))\n    newLabels = newLabels.sort((a, b) => {\n      if (a.y > b.y) {\n        return 1;\n      }\n      return -1;\n    })\n    // resolve labels collisions\n    for (let i = 0 ; i < newLabels.length ; i++) {\n      for (let j = i + 1 ; j < newLabels.length ; j++) {\n        const label1 = newLabels[i];\n        const label2 = newLabels[j];\n\n        const minAx = label1.x;\n        const minAy = label1.y - label1.height;\n        const maxAx = label1.x + label1.width;\n        const maxAy = label1.y;\n\n        const minBx = label2.x;\n        const minBy = label2.y - label2.height;\n        const maxBx = label2.x + label2.width;\n        const maxBy = label2.y;\n\n        const aLeftOfB = maxAx < minBx;\n        const aRightOfB = minAx > maxBx;\n        const aAboveB = minAy > maxBy;\n        const aBelowB = maxAy < minBy;\n\n        if (!( aLeftOfB || aRightOfB || aAboveB || aBelowB )) {\n          if (!aAboveB || aBelowB) {\n            const distanceY = Math.abs(label1.y - (label2.y - label2.height));\n            label1.y -= distanceY / 2 ;\n            label2.y += distanceY / 2 ;\n          }\n          // if (!aLeftOfB || aRightOfB) {\n          //   const distanceX = Math.abs(label1.x - (label2.x + label2.width));\n          //   label1.x -= distanceX / 2 ;\n          //   label2.x += distanceX / 2 ;\n          // }\n        }\n      }\n    }\n    newLabels = newLabels.sort((a, b) => {\n      if (a.largerStrokeWidth > b.largerStrokeWidth) {\n        return -1;\n      }\n      return 1;\n    })\n    return newLabels;\n  }, [markerData])\n  \n\n  const [hoverIds, setHoverIds] = useState(undefined);\n  return (\n    <g className=\"FlowsLayer\" >\n      {\n        markerData\n          .map((data, index) => {\n\n            const {\n              id,\n              arrowSize,\n              xDep,\n              yDep,\n              xDest,\n              yDest,\n              strokeWidth,\n              datum,\n              layer,\n              width,\n              color,\n              height,\n              projectionTemplate,\n\n              fontSize,\n              path,\n              actualXDep,\n              actualYDep,\n              actualXDest,\n              actualYDest,\n              arrowLength,\n              depLabelTextAnchor,\n              depLabelX,\n              depLabelY,\n              destLabelTextAnchor,\n              destLabelX,\n              destLabelY,\n            } = data;\n\n            const onMouseEnter = () => {\n              setHoverIds([id]);\n            }\n            const onMouseLeave = () => {\n              setHoverIds(undefined);\n            }\n            const hovered = hoverIds && hoverIds.includes(id);\n            return (\n              <FlowGroup\n                key={index}\n                {\n                ...{\n                  hovered,\n                  id,\n                  arrowSize,\n                  xDep,\n                  yDep,\n                  xDest,\n                  yDest,\n                  strokeWidth,\n                  datum,\n                  layer,\n                  width,\n                  color,\n                  height,\n                  projectionTemplate,\n\n                  fontSize,\n                  path,\n                  actualXDep,\n                  actualYDep,\n                  actualXDest,\n                  actualYDest,\n                  arrowLength,\n                  depLabelTextAnchor,\n                  depLabelX,\n                  depLabelY,\n                  destLabelTextAnchor,\n                  destLabelX,\n                  destLabelY,\n\n                  onMouseEnter,\n                  onMouseLeave,\n                }\n                }\n              />\n            );\n          })\n      }\n      {\n        labels.map((thatLabel, index) => {\n          const {\n            id,\n            label,\n            textAnchor,\n            x,\n            // actualX,\n            y,\n            fontSize,\n            flows,\n          } = thatLabel;\n          const isVisible = hoverIds ? hoverIds.find(hoveredId => flows.includes(hoveredId)) : true;\n          const onMouseEnter = () => {\n            setHoverIds(flows);\n          }\n          const onMouseLeave = () => {\n            setHoverIds(undefined);\n          }\n          return (\n            <g\n              id={id}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n            >\n              {/* <rect\n                x={actualX}\n                y={y - height}\n                width={width}\n                height={height}\n                fill=\"pink\"\n              /> */}\n              <text\n                id={id}\n                className={cx(\"label\", {'is-visible': isVisible})}\n                textAnchor={textAnchor}\n                x={x}\n                y={y}\n                fontSize={fontSize}\n              >\n                {label}\n              </text>\n            </g>\n          )\n        })\n      }\n    </g>\n  );\n}\n\nexport default FlowsLayer;","\n\n\n/**\n * Allows to display custom objects on the map\n * @param {object} layer\n * @param {function} projection\n * @param {number} width\n * @param {number} height\n * @param {string} projectionTemplate\n * @returns {React.ReactElement} - React component\n */\nconst CustomObjectLayer = ({ \n  layer, \n  projection, \n  width, \n  height, \n  projectionTemplate \n}) => {\n    return (\n        <g className=\"CustomObjectsLayer\">\n          {\n            typeof layer.renderObjects === 'function' ?\n                layer.renderObjects({data: layer.data, projection, width, height, projectionTemplate})\n            :\n            layer.data\n              .map((datum, index) => {\n                return layer.renderObject({ datum, projection, width, height, projectionTemplate })\n              })\n          }\n        </g>\n      );\n}\n\nexport default CustomObjectLayer;","import { useEffect, useState } from \"react\"\n\nconst Button = ({\n    children,\n    onMouseDown,\n    ...props\n  }) => {\n    const [isMouseDown, setState] = useState(false)\n  \n    useEffect(() => {\n      let interval\n      if (isMouseDown) {\n        console.log(\"setInterval\")\n        interval = setInterval(onMouseDown, 100)\n      }\n      return () => {\n        console.log(\"clearInterval\")\n        clearInterval(interval)\n      }\n    }, [isMouseDown, onMouseDown])\n  \n    return <button\n      {...props}\n      onMouseDown={() => {\n        setState(true)\n      }}\n      onMouseUp={() => {\n        setState(false)\n      }}\n      style={{ background: isMouseDown ? 'red' : undefined }}\n    >\n      {children}\n    </button>\n  }\n\n  export default Button ;","import { useState, useEffect } from \"react\";\n\n\n/**\n * A plain input for debug mode\n * @param {string} value\n * @param {function} onBlur\n * @param {object} props\n * @returns {React.ReactElement} - React component \n */\nconst Input = ({\n  value: inputValue,\n  onBlur,\n  ...props\n}) => {\n  const [value, setValue] = useState(inputValue)\n  useEffect(() => {\n    setValue(inputValue)\n  }, [inputValue])\n\n  return <input\n    value={value}\n    onChange={(e) => {\n      setValue(e.target.value)\n    }}\n    onBlur={(e) => {\n      onBlur(e.target.value)\n    }}\n  />\n}\n\nexport default Input;","import { uniq } from \"lodash-es\";\nimport { generatePalette } from '../../helpers/misc';\n\n\n/**\n * Centralized map legend\n * @param {array<object>} layers\n * @param {string} position - used as css suffix ('bottom', 'bottom left', ...)\n * @param {function} layerFilter - allows to hide some layers from legend\n * @returns {React.ReactElement} - React component \n */\nconst Legend = ({\n  layers,\n  position,\n  layerFilter\n}) => {\n  return (\n    <div className={`Legend ${typeof position === 'string' ? position : ''}`}>\n      <h5 className=\"legend-main-title\">Légende</h5>\n      {\n        layers\n        .filter(l => {\n          if (typeof layerFilter === 'function') {\n            return layerFilter(l);\n          }\n          return true;\n        })\n        .map((layer, id) => {\n          let hasSize;\n          let hasColors;\n          let colorModalities;\n          if (layer.size && layer.size.field) {\n            hasSize = true;\n          }\n          if (layer.color && layer.color.field) {\n            hasColors = true;\n            const colorValues = uniq(layer.data.map(datum => datum[layer.color.field]))\n            // @todo refactor the following with PointsLayer as an util\n            let palette;\n            // colors palette building\n            if (layer.color.palette) { // if palette given in parameters we use it, otherwise one palette is generated\n              palette = layer.color.palette;\n            } else {\n              const colors = generatePalette('map', colorValues.length);\n              palette = colorValues.reduce((res, key, index) => ({\n                ...res,\n                [key]: colors[index]\n              }), {});\n            }\n            colorModalities = Object.entries(palette);\n          }\n          return (\n            <>\n              {\n                hasSize ?\n                <div key={id} className=\"size-legend-container\">\n                  {/* <h6 className=\"legend-title\">Taille des cercles</h6> */}\n                  <div className=\"size-legend-item\">\n                  <span className=\"size-icon-container\">\n                    <span />\n                    <span />\n                  </span>\n                  <span className=\"label\">\n                  {layer.size.title || layer.size.field}\n                  </span>\n                  </div>\n                </div>\n                : null\n              }\n              {\n                hasColors ?\n                <div key={id + 'b'} className=\"color-legend-container\">\n                  <h6 className=\"legend-title\">{layer.color.title || layer.color.field}</h6>\n                  <ul className=\"modalities-list\">\n                    {\n                      colorModalities.map(([modality, color], modalityIndex) => (\n                        <li key={modalityIndex}>\n                          <span style={{background: color}} className=\"color-marker\" />\n                          <span className=\"label\">{modality}</span>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                </div>\n                : null\n              }\n            </>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Legend;","/* DOCUMENTATION : API de ce GéoComponent\n\n  Principe :\n    Composants réutilisable pour toutes les cartes utilisés sur les sites PORTIC\n    cartographie en SVG\n    -> permet de faire des cartes choroplèthes, de représenter des ports, des flux de navires, ...\n\n  Paramètres : \n    * width : largeur de la carte (par défaut à 1500 px)\n    * height : hauteur de la carte (par défaut à 1500 px)\n\n    * layers : différentes couches de la carte ('choropleth', 'points', 'flows', 'custom'), à chaque layer il faut donner un fichier de données (stocké dans public/data) pour construire le objets qui le constituent, les couleurs, tailles, labels de ces objets sont paramètrables \n        si layer 'custom' choisi, il faut passer au layer une fonction d'affichage des données :\n        - renderObject : donner un objet de donnée en paramètre, la fonction s'occupe de construire sa représentation SVG et de la positionner individuellement sur la carte\n        - renderObjects : donner un dataset, la fonction s'occupe de construire une représentation SVG de l'ensemble des objets, et de gérer leurs positionnement sur la carte (souvent adapté quand le positionnement n'est pas géographique, qu'on a besoin de gérer les espacements entre objets ...)\n\n    * projectionTemplate : configuration de carte utilisée fréquemment ('France', 'coast from Nantes to Bordeaux', 'Poitou', 'rotated Poitou')\n    * projectionConfig: configuration de carte customisée (ce paramètre prime sur projectionTemplate si les 2 sont données en même temps)\n\n    * debug : permet d'ajuster manuellement la configuration de la carte quand true (les paramètres de zoom, les coordonnées du centre, la rotation et les translations sont ajustables)\n    \n  @TODO : documenter ce component de manière standardisée\n  */\n\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { geoEqualEarth } from \"d3-geo\";\nimport ChoroplethLayer from './ChoroplethLayer';\nimport PointsLayer from './PointsLayer';\nimport FlowsLayer from './FlowsLayer';\nimport CustomObjectLayer from './CustomObjectLayer';\n// import TriangleChart from '../TriangleChart/TriangleChart';\nimport Button from './Button';\nimport Input from './Input';\nimport Legend from './Legend';\n\nimport './GeographicMapChart.scss'\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\n/**\n * Displays a multi-layers map\n * @param {number} width\n * @param {number} height\n * @param {string} title\n * @param {array} layers\n * @param {string} projectionTemplate\n * @param {object} projectionConfig\n * @param {boolean} debug\n * @param {string} withLegend - can directly take legend position\n * @param {function} legendLayerFilter\n * @returns {React.ReactElement} - React component \n */\nconst GeographicMapChart = ({\n  width: inputWidth = 1500,\n  height: inputHeight = 1500,\n  title,\n  layers = [],\n  projectionTemplate: initialProjectionTemplate,\n  projectionConfig: inputProjectionConfig, // customeconfig that will overwrite a template (optional argument) \n  debug = false, // @todo : à réparer\n  withLegend,\n  legendLayerFilter\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  // viz params variables\n  const [scale, setScale] = useState(200)\n  const [rotation, setRotation] = useState(0)\n  const [translationX, setTranslationX] = useState(width / 2)\n  const [translationY, setTranslationY] = useState(height / 2)\n  const [centerX, setCenterX] = useState(-1.7475027) // -1.7475027 pour centrer sur région\n  const [centerY, setCenterY] = useState(46.573642) // 46.573642\n\n  const [projectionTemplate, setProjectionTemplate] = useState(initialProjectionTemplate)\n\n  // trick for nice animations\n  useEffect(() => {\n    // setTimeout(() => {\n      setProjectionTemplate(initialProjectionTemplate);\n    // })\n  }, [initialProjectionTemplate])\n\n\n  // define a default map Config\n  const defaultProjectionConfig = useMemo(() => {\n    return {\n      rotationDegree: 0,\n      centerX: 2.4486203,\n      centerY: 46.8576176,\n      scale: height * 5\n    };\n  }, [height]) // repsonsive : se fait en fonction de la height de l'écran\n\n  /**\n   * d3 projection making\n   */\n  const projection = useMemo(() => { // def les bonnes valeurs pour la config de la projection // enregistrer dans le state // les appliquer dans la projection\n\n    let projectionConfig = { ...defaultProjectionConfig } // casser la référence à defaultProj pour respecter principe react qu'on ne modifie pas un objet reçu en argument\n\n    let projection = geoEqualEarth()\n\n    switch (projectionTemplate) {\n      case 'World':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * .5,\n          centerX: -1,\n          centerY:  15,\n          // translationX: width * 0.4,\n          // translationY: height * 0.28\n        }\n        break;\n      case 'coast from Nantes to Bordeaux':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 24,\n          centerX: -1.7475027,\n          centerY: 46.573642,\n          translationX: width * 0.4,\n          translationY: height * 0.28\n        }\n        break;\n      case 'Poitou':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 30,\n          centerX: -1.7475927,\n          // centerY: 46.573872,\n          centerY: 47.4,\n          // translationX: width * 0.4,\n          translationX: width * 0.45,\n          translationY: 0\n        }\n        break;\n      case 'Poitou zoomed':\n        projectionConfig = {\n          ...projectionConfig,\n          scale: height * 23,\n          centerX: -1.7475927,\n          // centerY: 46.573872,\n          centerY: 47.4,\n          // translationX: width * 0.4,\n          translationX: width * 0.45,\n          translationY: 0\n        }\n        break;\n      case 'rotated Poitou':\n        projectionConfig = {\n          ...projectionConfig,\n          rotationDegree: 58,\n          scale: height * 32,\n          centerX: -1.7475027,\n          centerY: 46.573642,\n          translationX: width * 0.29,\n          translationY: height * 0.25\n        }\n        break;\n      case 'France':\n      default: // as France config \n        // console.log('projection config in dry version', projectionConfig);\n        // console.log(`we are taking the config as specified in config parameters ===> if not specified, the view should correspond to France`);\n        break;\n    }\n\n    if (inputProjectionConfig !== undefined) {\n      projectionConfig = {\n        ...projectionConfig,\n        ...inputProjectionConfig\n      }\n    }\n\n    // update the config\n    setScale(projectionConfig.scale)\n\n    setRotation(projectionConfig.rotationDegree)\n\n    setCenterX(projectionConfig.centerX)\n    setCenterY(projectionConfig.centerY)\n\n    if (projectionConfig.translationX !== undefined) {\n      setTranslationX(projectionConfig.translationX)\n      setTranslationY(projectionConfig.translationY)\n    }\n    else {\n      projectionConfig.translationX = width / 2;\n      projectionConfig.translationY = height / 2;\n      setTranslationX(width / 2)\n      setTranslationY(height / 2)\n    }\n\n    projection\n      .scale(projectionConfig.scale)\n\n    projection.center([projectionConfig.centerX, projectionConfig.centerY])\n\n    if (projectionConfig.rotationDegree) {\n      projection.angle(projectionConfig.rotationDegree)\n    }\n\n    projection.translate([projectionConfig.translationX, projectionConfig.translationY])\n\n    return projection;\n  }, [width, height, defaultProjectionConfig, inputProjectionConfig, projectionTemplate]) \n\n\n\n  // const [xCenterPoint, yCenterPoint] = projection([centerX, centerY]);\n  return (\n    <div className=\"GeographicMapChartWrapper\">\n\n      {title ? <h5 className=\"visualization-title\">{title}</h5> : null}\n\n      {\n        debug ?\n          <>\n            <h2>scale: {scale}, rotation: {rotation}, translationX: {translationX}, translationY: {translationY}, centerX: {centerX}, centerY: {centerY}</h2>\n            <div className=\"table\">\n              <ul id=\"horizontal-list\">\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setScale(scale * 1.6)}>scale+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setScale(scale / 1.6)}>scale-</Button>\n                    </li>\n                    <li>\n                      <Input value={scale} placeHolder={\"entrez une valeur pour la scale\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? scale : +str\n                        setScale(val)\n                      }} />\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => { console.log(\"DOWN !!\"); setRotation(rotation + 2) }}>rotation+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setRotation(rotation - 2)}>rotation-</Button>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setTranslationX(translationX * 1.2)}>translationX+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setTranslationX(translationX * 0.8)}>translationX-</Button>\n                    </li>\n                    <li>b\n                      <Button onMouseDown={() => setTranslationY(translationY * 1.2)}>translationY+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setTranslationY(translationY * 0.8)}>translationY-</Button>\n                    </li>\n                  </ul>\n                </li>\n                <li>\n                  <ul>\n                    <li>\n                      <Button onMouseDown={() => setCenterX(centerX + 0.3)}>centerX+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setCenterX(centerX - 0.3)}>centerX-</Button>\n                    </li>\n                    <li>b\n                      <Button onMouseDown={() => setCenterY(centerY + 0.3)}>centerY+</Button>\n                    </li>\n                    <li>\n                      <Button onMouseDown={() => setCenterY(centerY - 0.3)}>centerY-</Button>\n                    </li>\n                    <li>\n                      <Input value={centerX} placeHolder={\"entrez une valeur pour la latitude\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? centerX : +str\n                        setCenterX(val)\n                      }} />\n                    </li>\n                    <li>\n                      <Input value={centerY} placeHolder={\"entrez une valeur pour la longitude\"} onBlur={(str) => {\n                        const val = isNaN(+str) ? centerY : +str\n                        setCenterY(val)\n                      }} />\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </>\n          : null\n      }\n\n      <svg className=\"GeographicMapChart\" width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n\n        {\n          layers.map((layer, layerIndex) => {\n\n            switch (layer.type) {\n              case 'choropleth':\n                return <ChoroplethLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                  reverseColors={layer.reverseColors}\n                />\n\n              case 'points':\n                return <PointsLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                />\n\n              case 'flows': \n                return <FlowsLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  width={width}\n                  height={height}\n                  projectionTemplate={projectionTemplate}\n                />\n\n              case 'custom':\n                return <CustomObjectLayer\n                  key={layerIndex}\n                  layer={layer}\n                  projection={projection}\n                  projectionTemplate={projectionTemplate}\n                  width={width}\n                  height={height}\n                />\n\n              default:\n                return <g key={layerIndex}><text>Unsupported layer type</text></g>\n            }\n          })\n        }\n        {/* <circle cx={xCenterPoint} cy={yCenterPoint} r={5} fill={'red'} />\n        <rect x=\"58%\" y=\"78%\" width={width * 0.4} height={height * 0.2} rx=\"15\" ry=\"15\" fill={'white'} opacity={0.5} /> */}\n      </svg>\n      {\n        withLegend ?\n        <Legend layerFilter={legendLayerFilter} layers={layers} position={withLegend} />\n        : null\n      }\n      <ReactTooltip id=\"geo-tooltip\" />\n    </div>\n  )\n}\n\nexport default GeographicMapChart;","\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { extent, range, max } from 'd3-array';\nimport { useRef, useState, useEffect } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst { generic } = colorsPalettes;\n\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} orientation ['horizontal', 'vertical'] \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * @param {object} x.sort\n * @param {string} x.sort.field\n * @param {boolean} x.sort.ascending\n * @param {string} x.sort.type ['number', 'string']\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * @param {object} y.sort\n * @param {string} y.sort.field\n * @param {boolean} y.sort.ascending\n * @param {string} y.sort.type\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * @param {number} annotations\n * @params {string} annotations[n].type ['span]\n * @params {number} annotations[n].start\n * @params {number} annotations[n].end\n * @params {string} annotations[n].axis ['x', 'y']\n * @params {string} annotations[n].label\n * @param {function} tooltip\n * @returns {react}\n */\nconst HorizontalBarChart = ({\n  data,\n  title,\n  orientation = 'horizontal',\n  layout = 'stack',\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  color,\n  x,\n  y,\n  tooltip,\n  margins: inputMargins = {},\n  annotations = []\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  // const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      // const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      // setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: yTickFormat,\n    tickSpan: yTickSpan,\n    domain: initialYDomain,\n    field: yField,\n    sort: sortY = {}\n  } = y;\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n    fillGaps: fillXGaps,\n    field: xField,\n    sort : sortX = {},\n  } = x;\n  const {\n    field: sortYField = yField,\n    ascending: sortYAscending = true,\n    type: sortYType = 'number',\n    autoSort: yAutoSort = false\n  } = sortY;\n  const {\n    field: sortXField = xField,\n    ascending: sortXAscending = true,\n    type: sortXType\n  } = sortX;\n  let colorPalette;\n  let colorModalities;\n  if (color) {\n    colorModalities = uniq(data.map(d => d[color.field]));\n  }\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  let xValues = uniq(data.filter(d => +d[y.field]).map(d => d[x.field]));\n  let vizWidth = width - margins.left - margins.right;\n\n  let xDomain = xValues;\n  let bandsNb = xValues.length;\n  let columnWidth = vizWidth / bandsNb;\n  let xScale = scaleBand().domain(xDomain).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]);\n\n  if (initialXDomain) {\n    xDomain = range(initialXDomain);\n    xValues = xDomain;\n    bandsNb = xValues.length;\n    columnWidth = vizWidth / bandsNb;\n    xScale = scaleLinear().domain(extent(xDomain)).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]).nice();\n  } else if (fillXGaps) {\n    const xExtent = extent(xValues.filter(v => +v).map(v => +v));\n    if (xTickSpan) {\n      xExtent[0] = xExtent[0] - xExtent[0] % xTickSpan;\n      xExtent[1] = xExtent[1] + xExtent[1] % xTickSpan;\n    }\n    xDomain = range(xExtent[0], xExtent[1]);\n    xValues = xDomain;\n    bandsNb = xValues.length;\n    columnWidth = vizWidth / bandsNb;\n    xScale = scaleLinear().domain(extent(xDomain)).range([margins.left + columnWidth / 2, width - margins.right - columnWidth / 2]).nice();\n  }  \n\n  const groups = Object.entries(groupBy(data, d => d[x.field])) // color ? Object.entries(groupBy(data, d => d[color.field])) : [[undefined, data]];\n\n  const yDomain = initialYDomain || layout === 'stack' ? \n    // stack -> max = max sum for a given x modality\n    [0, max(\n      groups.map(\n        ([_groupName, values]) => \n          values.reduce((sum, datum) => sum + +(datum[y.field]), 0)\n      )\n      )\n    ]\n    :\n    // group -> max = abs max\n    [0, max(data.map(d => +d[y.field]))];\n\n    let bandWidth = layout === 'stack' ? columnWidth / 2 : (columnWidth / colorModalities.length) * .5;\n    const yScale = scaleLinear().domain(yDomain).range([height - margins.bottom, margins.top]).nice();\n    const yStackScale = yScale.copy().range([0, height - margins.bottom - margins.top]);\n\n  const xAxisValues = xTickSpan ? range(xDomain[0], xDomain[xDomain.length - 1], xTickSpan) : xValues;\n  let { values: yAxisValues } = axisPropsFromTickScale(yScale, 10);\n\n  if (yTickSpan) {\n    yDomain[0] = yDomain[0] - yDomain[0] % yTickSpan;\n    yDomain[1] = yDomain[1] + (yTickSpan - yDomain[0] % yTickSpan);\n    yAxisValues = range(yDomain[0], yDomain[1], yTickSpan);\n    yScale.domain(yDomain)\n  }\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"BarChart is-horizontal GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            <g className=\"axis left-axis ticks\">\n              <text x={margins.left - 10} y={margins.top - 15} className=\"axis-title\">\n                {y.title || y.field}\n              </text>\n              {\n                yAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(0, ${yScale(value)})`}\n                  >\n                    <text x={margins.left - 10} y={3}>\n                      {typeof yTickFormat === 'function' ? yTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"tick-mark\"\n                      x1={margins.left - 5}\n                      x2={margins.left}\n                      y1={0}\n                      y2={0}\n                    />\n                    <line\n                      className=\"background-line\"\n                      x1={margins.left}\n                      x2={xScale(xAxisValues[xAxisValues.length - 1])}\n                      y1={0}\n                      y2={0}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"axis bottom-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={value}\n                    transform={`translate(${xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={height - margins.bottom + 20}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={yScale(yAxisValues[yAxisValues.length - 1])}\n                      y2={height - margins.bottom}\n                    />\n                    <line\n                      className=\"tick-mark\"\n                      x1={0}\n                      x2={0}\n                      y1={height - margins.bottom}\n                      y2={height - margins.bottom + 5}\n                    />\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"annotations-container\">\n              {\n                annotations\n                .filter(a => a.axis === 'x')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatHeight = fixSvgDimension(height - yScale(yAxisValues[yAxisValues.length - 1]) - margins.bottom);\n                  const thatY1 = height - margins.bottom;\n                  const thatY2 = yScale(yAxisValues[yAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation x-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={xScale(start)}\n                        width={fixSvgDimension(xScale(end) - xScale(start))}\n                        height={thatHeight}\n                        y={thatY2}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                      <line\n                        x1={xScale(start)}\n                        x2={xScale(start)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={xScale(end)}\n                        x2={xScale(end)}\n                        y1={thatY1}\n                        y2={thatY2}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={xScale(end) + 20} \n                        x2={xScale(end) + 10} \n                        y1={thatY2 + labelPosition - 5}\n                        y2={thatY2 + labelPosition - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                      <text\n                        x={xScale(end) + 22}\n                        y={thatY2 + labelPosition}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n              {\n                annotations\n                .filter(a => a.axis === 'y')\n                .map((annotation, annotationIndex) => {\n                  const {start, end, label, labelPosition = 20} = annotation;\n                  const thatX1 = margins.left;\n                  const thatX2 = xScale(xAxisValues[xAxisValues.length - 1]);\n                  return (\n                    <g className=\"annotation y-axis-annotation\" key={annotationIndex}>\n                      <rect\n                        x={thatX1}\n                        width={fixSvgDimension(thatX2 - thatX1)}\n                        y={yScale(start)}\n                        height={fixSvgDimension(yScale(end) - yScale(start))}\n                        fill=\"url(#diagonalHatch)\"\n                        opacity={.4}\n                      />\n                       <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(start)}\n                        y2={yScale(start)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line\n                        x1={thatX1}\n                        x2={thatX2}\n                        y1={yScale(end)}\n                        y2={yScale(end)}\n                        stroke=\"grey\"\n                        opacity={.4}\n                        strokeDasharray={'4,2'}\n                      />\n                      <line \n                        x1={thatX1 + labelPosition - 5} \n                        x2={thatX1 + labelPosition - 5} \n                        y1={yScale(start) - 15}\n                        y2={yScale(start) - 5}\n                        stroke=\"grey\" \n                        markerEnd=\"url(#arrowhead)\" \n                      />\n                     <text\n                        x={thatX1 + labelPosition}\n                        y={yScale(start) - 10}\n                        fontSize={'.5rem'}\n                        fill=\"grey\"\n                      >\n                        {label}\n                      </text>\n                      <defs>\n                        <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" \n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                          <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                        </marker>\n                      </defs>\n                      <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                              M0,4 l4,-4\n                              M3,5 l2,-2\" \n                            style={{stroke:'grey', opacity: .5, strokeWidth:1}} />\n                    </pattern>\n\n                    </g>\n                  )\n                })\n              }\n            </g>\n            <g className=\"bars-container\">\n              {\n                groups\n                .sort((a, b) => {\n                  const multiplier = sortXAscending ? 1 : -1;\n                  if (sortXField === x.field) {\n                    const aVal = sortXType === 'number' ? +a[0] : a[0];\n                    const bVal = sortXType === 'number' ? +b[0] : b[0];\n                    if (aVal < bVal) {\n                      return -1 * multiplier;\n                    }\n                    return 1 * multiplier;\n                  }\n                  const aVal = sortXType === 'number' ? \n                    +a[1].reduce((sum, datum) => sum + +datum[sortXField], 0) \n                    : a[1][sortXField];\n                  const bVal = sortXType === 'number' ? \n                    +b[1].reduce((sum, datum) => sum + +datum[sortXField], 0) \n                    : b[1][sortXField];\n                  if (aVal < bVal) {\n                    return -1 * multiplier;\n                  }\n                  return 1 * multiplier;\n                  \n                })\n                .map(([xModality, items], groupIndex) => {\n                  let stackDisplaceY = height - margins.bottom;\n                  return (\n                    <g key={groupIndex} transform={`translate(${xScale(items[0][x.field])}, 0)`}>\n                      {\n                        items\n                        .sort((a, b) => {\n                          if (!yAutoSort) {\n                            return 0;\n                          }\n                          const multiplier = sortYAscending ? 1 : -1;\n                          const aVal = sortYType === 'number' ? +a[sortYField] : a[sortYField];\n                          const bVal = sortYType === 'number' ? +b[sortYField] : b[sortYField];\n                          if (aVal > +bVal) {\n                            return -1 * multiplier;\n                          }\n                          return 1 * multiplier;\n                        })\n                        .map((item, itemIndex) => {\n                          const thatX = layout === 'stack' ? -bandWidth / 2 : itemIndex * ((columnWidth * .5) / items.length) - columnWidth / 4;\n                          const thatHeight = layout === 'stack' ? yStackScale(item[y.field]) : height - margins.bottom - yScale(item[y.field]) || 0;\n                          \n                          const thatY = layout === 'stack' ? stackDisplaceY - thatHeight : yScale(item[y.field]);\n                          if (layout === 'stack') {\n                            stackDisplaceY -= thatHeight;\n                          }\n                          const thatColor = colorPalette ? colorPalette[item[color.field]] : generic.dark;\n                          return (\n                            <>\n                              {\n                                +item[y.field] > 0 ?\n                                  <rect key={itemIndex}\n                                    fill={thatColor}\n                                    width={fixSvgDimension(bandWidth)}\n                                    x={thatX}\n                                    y={thatY}\n                                    height={fixSvgDimension(thatHeight)}\n                                    data-for=\"bar-tooltip\"\n                                    data-tip={typeof tooltip === 'function' ? tooltip(item, itemIndex, groupIndex) : undefined}\n                                  />\n                                  : null\n                              }\n                            </>\n                          )\n                        })\n                      }\n                    </g>\n                  );\n                })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color]) => (\n                        <li\n                          key={modality}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"bar-tooltip\" />\n    </>\n  )\n}\n\nexport default HorizontalBarChart;","\nimport { scaleLinear } from 'd3-scale';\nimport { range, max } from 'd3-array';\nimport { useRef, useState, useEffect, useMemo } from 'react';\nimport { groupBy } from 'lodash';\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\n\nimport colorsPalettes from '../../colorPalettes';\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst { generic } = colorsPalettes;\n\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * @param {object} x.sort\n * @param {string} x.sort.field\n * @param {boolean} x.sort.ascending\n * @param {string} x.sort.type ['number', 'string']\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * @param {boolean} y.formatLabel\n * @param {object} y.sort\n * @param {string} y.sort.field\n * @param {boolean} y.sort.ascending\n * @param {string} y.sort.type\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * \n * @param {function} tooltip\n * \n * @returns  {React.ReactElement} - React component\n */\nconst VerticalBarChart = ({\n  data,\n  title,\n  layout = 'stack',\n  width: initialWidth = 1200,\n  height: initialHeight = 1200,\n  color,\n  y,\n  x,\n  tooltip,\n  margins: inputMargins = {},\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n\n  const width = fixSvgDimension(initialWidth - legendWidth);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ? headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ? legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n  }, [width, height, color, data])\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 30,\n    ...inputMargins\n  };\n\n  const {\n    tickFormat: xTickFormat,\n    tickSpan: xTickSpan,\n    domain: initialXDomain,\n    field: xField,\n    sort: sortX = {}\n  } = x;\n  const {\n    rowHeight: fixedRowHeight,\n    formatLabel,\n    field: yField,\n    sort: sortY = {}\n  } = y;\n  const {\n    field: sortYField = yField,\n    autoSort = false,\n    ascending: sortYAscending = true,\n    type: sortYType,\n  } = sortY;\n  const {\n    field: sortXField = xField,\n    ascending: sortXAscending = true,\n    type: sortXType = 'number'\n  } = sortX;\n  let colorPalette;\n  let colorModalities;\n  if (color) {\n    colorModalities = uniq(data.map(d => d[color.field]))\n  }\n  if (color && color.palette) {\n    colorPalette = color.palette;\n    colorModalities = Object.entries(colorPalette).map(([id]) => id)\n  } else if (color) {\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n  let yValues = uniq(data.map(d => d[y.field]));\n  let bandsNb = yValues.length;\n  let vizHeight = (fixedRowHeight ? fixedRowHeight * (bandsNb) : height - headersHeight);\n\n  let rowHeight = fixSvgDimension(fixedRowHeight || vizHeight / bandsNb);\n\n  const groups = useMemo(() => \n    Object.entries(groupBy(data, d => d[y.field]))\n    // sort groups\n    .sort((a, b) => {\n      if (!autoSort) {\n        return 0;\n      }\n      const multiplier = sortYAscending ? 1 : -1;\n      if (sortYField === y.field) {\n        const aVal = sortYType === 'number' ? +a[0] : a[0];\n        const bVal = sortYType === 'number' ? +b[0] : b[0];\n        if (aVal < bVal) {\n          return -1 * multiplier;\n        }\n        return 1 * multiplier;\n      }\n      const aVal = sortYType === 'number' ?\n        +a[1].reduce((sum, datum) => sum + +datum[sortYField], 0)\n        : a[1][sortYField];\n      const bVal = sortYType === 'number' ?\n        +b[1].reduce((sum, datum) => sum + +datum[sortYField], 0)\n        : b[1][sortYField];\n      if (aVal < bVal) {\n        return -1 * multiplier;\n      }\n      return 1 * multiplier;\n    })\n    // sort items\n    .map(([yModality, items]) => [\n      yModality,\n      items\n      .sort((a, b) => {\n        if (!autoSort) {\n          // sort in the order of colorpalette\n          if (colorModalities.indexOf(a[color.field]) > colorModalities.indexOf(b[color.field])) {\n            return 1;\n          }\n          return -1;\n        }\n        const multiplier = sortXAscending ? 1 : -1;\n        const aVal = sortXType === 'number' ? +a[sortXField] : a[sortXField];\n        const bVal = sortXType === 'number' ? +b[sortXField] : b[sortXField];\n        if (aVal > +bVal) {\n          return -1 * multiplier;\n        }\n        return 1 * multiplier;\n      })\n    ])\n  , [data, y, autoSort, sortYAscending, sortYField, sortYType, sortXAscending, sortXField, sortXType, color, colorModalities]);\n\n  const xDomain = initialXDomain || layout === 'stack' ?\n    // stack -> max = max sum for a given x modality\n    [0, max(\n      groups.map(\n        ([_groupName, values]) =>\n          values.reduce((sum, datum) => sum + +(datum[x.field]), 0)\n      )\n    )\n    ]\n    :\n    // group -> max = abs max\n    [0, max(data.map(d => +d[x.field]))];\n  let bandHeight = layout === 'stack' ? rowHeight / 2 : (rowHeight / colorModalities.length) * .5;\n  const xScale = scaleLinear().domain(xDomain).range([0, width - margins.left - margins.right]).nice();\n  const xStackScale = xScale.copy().range([0, width - margins.left - margins.right]);\n\n  let { values: xAxisValues } = axisPropsFromTickScale(xScale, 10);\n\n  if (xTickSpan) {\n    xDomain[0] = xDomain[0] - xDomain[0] % xTickSpan;\n    xDomain[1] = xDomain[1] + xDomain[1] % xTickSpan;\n    xAxisValues = range(xDomain[0], xDomain[1], xTickSpan);\n    xScale.domain(xDomain);\n  }\n  const svgHeight = vizHeight + margins.top + margins.bottom;\n  const finalHeight = initialHeight > (svgHeight + headersHeight) ? initialHeight : svgHeight + headersHeight;\n  return (\n    <>\n      <figure style={{ width: initialWidth, height: finalHeight }} className=\"BarChart is-vertical GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={svgHeight}>\n            <g className=\"axis top-axis ticks\">\n              {\n                xAxisValues.map((value, valueIndex) => (\n                  <g\n                    key={valueIndex}\n                    transform={`translate(${margins.left + xScale(value)}, 0)`}\n                  >\n                    <text x={0} y={margins.top - 5}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                    <line\n                      className=\"background-line\"\n                      x1={0}\n                      x2={0}\n                      y1={margins.top}\n                      y2={vizHeight + margins.top}\n                    />\n                    <text x={0} y={svgHeight - margins.bottom + 10}>\n                      {typeof xTickFormat === 'function' ? xTickFormat(value, valueIndex) : value}\n                    </text>\n                  </g>\n                ))\n              }\n            </g>\n            <g className=\"bars-container\">\n              {\n                groups\n                  .map(([yModality, items], groupIndex) => {\n                    let stackDisplaceX = margins.left;\n                    return (\n                      <g key={groupIndex} transform={`translate(0, ${margins.top + rowHeight * groupIndex})`}>\n                        <foreignObject\n                          x={0}\n                          y={layout === 'stack' ? bandHeight / 4 : (bandHeight * items.length) / 2 /* + bandHeight * (items.length / 2)*/}\n                          width={margins.left}\n                          height={rowHeight * 2}\n                        >\n                          <div className=\"vertical-bar-label\">\n                            <div>{typeof formatLabel === 'function' ? formatLabel(yModality, groupIndex) : yModality}</div>\n                          </div>\n                        </foreignObject>\n                        {/* <text y={rowHeight / 2 + 5} className=\"vertical-bar-label\" x={margins.left - 5}>\n                          {typeof formatLabel === 'function' ? formatLabel(yModality, groupIndex) : yModality}\n                        </text> */}\n                        {\n                          items\n                            .map((item, itemIndex) => {\n\n                              const thatY = layout === 'stack' ? bandHeight / 2 : itemIndex * ((rowHeight * .5) / items.length) + rowHeight / 4;\n                              const thatWidth = layout === 'stack' ? xStackScale(+item[x.field]) : xScale(item[x.field]);\n                              const thatX = layout === 'stack' ? stackDisplaceX : margins.left;\n                              if (layout === 'stack') {\n                                stackDisplaceX += thatWidth;\n                              }\n                              const thatColor = colorPalette ? colorPalette[item[color.field]] : generic.dark;\n                              return (\n                                <>\n                                  {\n                                    +item[x.field] > 0 ?\n                                      <rect key={itemIndex}\n                                        fill={thatColor}\n                                        width={fixSvgDimension(thatWidth)}\n                                        x={thatX}\n                                        y={thatY}\n                                        height={fixSvgDimension(bandHeight - 1)}\n                                        data-for=\"bar-tooltip\"\n                                        data-tip={typeof tooltip === 'function' ? tooltip(item, itemIndex, groupIndex) : undefined}\n                                      />\n                                      : null\n                                  }\n                                </>\n                              )\n                            })\n                        }\n                      </g>\n                    );\n                  })\n              }\n            </g>\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color], modalityIndex) => (\n                        <li\n                          key={modalityIndex}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"bar-tooltip\" />\n    </>\n  )\n}\n\nexport default VerticalBarChart;","import HorizontalBarChart from './HorizontalBarChart';\nimport VerticalBarChart from './VerticalBarChart';\n\nimport './BarChart.scss';\n\n/**\n * BarChart component - returns a <figure> containing a svg linechart\n * \n * @param {array} data \n * @param {string} title \n * @param {string} orientation ['horizontal', 'vertical'] \n * @param {string} layout ['stack', 'groups'] \n * @param {width} number \n * @param {height} number \n * \n * @param {object} color\n * @param {string} color.field\n * @param {string} color.title\n * @param {object} color.palette\n * \n * @param {object} x\n * @param {string} x.field\n * @param {string} x.title\n * @param {number} x.tickSpan\n * @param {function} x.tickFormat\n * @param {array} x.domain\n * \n * @param {object} x\n * @param {string} y.field\n * @param {string} y.title\n * @param {number} y.tickSpan\n * @param {function} y.tickFormat\n * @param {array} y.domain\n * @param {boolean} y.fillGaps\n * \n * @param {object} margins\n * @param {number} margins.left\n * @param {number} margins.top\n * @param {number} margins.right\n * @param {number} margins.bottom\n * \n * @param {function} tooltip\n * \n * @returns {React.ReactElement} - React component\n */\nconst BarChart = ({\n  orientation = 'horizontal',\n  ...props\n}) => {\n  if (orientation === 'horizontal') {\n    return <HorizontalBarChart {...props} />\n  }\n  return <VerticalBarChart {...props} />\n}\nexport default BarChart;","import BarChart from './BarChart';\n\nexport default BarChart;","var map = {\n\t\"./en/about.mdx\": [\n\t\t225\n\t],\n\t\"./en/footer.mdx\": [\n\t\t653,\n\t\t5\n\t],\n\t\"./en/introduction.mdx\": [\n\t\t216\n\t],\n\t\"./en/metadata\": [\n\t\t338,\n\t\t0\n\t],\n\t\"./en/metadata.js\": [\n\t\t338,\n\t\t0\n\t],\n\t\"./en/part-1.mdx\": [\n\t\t219\n\t],\n\t\"./en/part-2-1.mdx\": [\n\t\t654,\n\t\t6\n\t],\n\t\"./en/part-2-2.mdx\": [\n\t\t655,\n\t\t7\n\t],\n\t\"./en/part-2-3.mdx\": [\n\t\t656,\n\t\t8\n\t],\n\t\"./en/part-2-intro.mdx\": [\n\t\t221\n\t],\n\t\"./en/part-3.mdx\": [\n\t\t223\n\t],\n\t\"./en/references.mdx\": [\n\t\t227\n\t],\n\t\"./en/test-scrolly.mdx\": [\n\t\t657,\n\t\t9\n\t],\n\t\"./en/tests.mdx\": [\n\t\t228\n\t],\n\t\"./fr/a-propos.mdx\": [\n\t\t224\n\t],\n\t\"./fr/footer.mdx\": [\n\t\t122\n\t],\n\t\"./fr/introduction.mdx\": [\n\t\t215\n\t],\n\t\"./fr/metadata\": [\n\t\t339,\n\t\t1\n\t],\n\t\"./fr/metadata.js\": [\n\t\t339,\n\t\t1\n\t],\n\t\"./fr/partie-1.mdx\": [\n\t\t218\n\t],\n\t\"./fr/partie-2.mdx\": [\n\t\t220\n\t],\n\t\"./fr/partie-3.mdx\": [\n\t\t222\n\t],\n\t\"./fr/references.mdx\": [\n\t\t226\n\t],\n\t\"./fr/test-scrolly.mdx\": [\n\t\t658,\n\t\t10\n\t],\n\t\"./fr/tests.mdx\": [\n\t\t229\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 646;\nmodule.exports = webpackAsyncContext;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.085,\"time\":5100,\"words\":17}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Marzagalli, Silvia, et al. Commerce multi-échelles autour du port de La Rochelle au XVIIIe siècle. 2021, `}<a parentName=\"p\" {...{\n        \"href\": \"https://medialab.github.io/portic-storymaps-2021\"\n      }}>{`https://medialab.github.io/portic-storymaps-2021`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.275,\"time\":16500,\"words\":55}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`MARZAGALLI, Silvia, ASSELIN, Cécile, BOUJU, Alain, CHARLES, Loïc, DAUDIN, Guillaume, GEOFFROY, Géraldine, GIRARD, Paul, GOURLET, Pauline, MAZOYER, Béatrice, de MOURAT, Robin, OOGHE-TABANOU, Benjamin, PLIQUE, Guillaume, PLUMEJEAUD, Christine, POURCHASSE, Pierrick, SAUZEAU, Thierry, THÉRO, Héloïse et ZOFFOLI, Maxime, 2021. Commerce multi-échelles autour du port de La Rochelle au XVIIIe siècle. `}{`[en ligne]`}{`. Octobre 2021. Disponible à l’adresse : `}<a parentName=\"p\" {...{\n        \"href\": \"https://medialab.github.io/portic-storymaps-2021\"\n      }}>{`https://medialab.github.io/portic-storymaps-2021`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.15,\"time\":9000,\"words\":30}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Marzagalli, S., Asselin, C., Bouju, A., Charles, L., Daudin, G., Geoffroy, G., … Zoffoli, M. (2021). Commerce multi-échelles autour du port de La Rochelle au XVIIIe siècle. Repéré à `}<a parentName=\"p\" {...{\n        \"href\": \"https://medialab.github.io/portic-storymaps-2021\"\n      }}>{`https://medialab.github.io/portic-storymaps-2021`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","/* eslint import/no-webpack-loader-syntax: 0 */\nimport { useState, useRef, useEffect } from 'react';\nimport cx from 'classnames';\n// import copy from 'copy-to-clipboard';\n\nimport FrMla from '!babel-loader!mdx-loader!./mla-fr.mdx';\nimport FrIso690 from '!babel-loader!mdx-loader!./iso-fr.mdx';\nimport FrApa from '!babel-loader!mdx-loader!./apa-fr.mdx';\n\nimport './CitationWidget.scss';\n\n\nconst CONTENTS = {\n  fr: {\n    'MLA': FrMla,\n    'ISO 690': FrIso690,\n    'APA': FrApa\n  },\n  en: {\n    'MLA': FrMla\n  }\n}\n\n\n/**\n * Description\n * @param {string} lang\n * @returns {React.ReactElement} - React component\n */\nconst CitationWidget = ({\n  lang = 'fr',\n}) => {\n  const blockquoteRef = useRef(null);\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  // const [copyClicked, setCopyClicked] = useState(false);\n  const [currentStyle, setCurrentStyle] = useState(null);\n  useEffect(() => {\n    if (lang === 'fr' || lang === 'en') {\n      setCurrentStyle(Object.keys(CONTENTS[lang])[0]);\n    }\n  }, [lang])\n\n  const Contents = currentStyle ? CONTENTS[lang][currentStyle] : undefined;\n\n  const messages = {\n    title: {\n      fr: 'Citer cette publication',\n      en: 'Cite this publication',\n    },\n    copyCitation: {\n      fr: 'copier',\n      en: 'copy'\n    },\n    citationCopied: {\n      fr: 'copié dans le presse-papier !',\n      en: 'copied in the clipboard !'\n    }\n  }\n\n  // const handleCopyClick = (e) => {\n  //   e.stopPropagation();\n  //   setCopyClicked(true);\n  //   const contents = blockquoteRef.current.innerHTML;\n  //   copy(contents, { format: 'text/html' });\n  //   // copy(blockquoteRef.current.innerText);\n  //   setTimeout(() => setCopyClicked(false), 5000);\n  // }\n\n  if (!['fr', 'en'].includes(lang)) {\n    return null;\n  }\n\n  return (\n    <div className={cx(\"CitationWidget\", { 'is-collapsed': isCollapsed })}>\n      <button\n        className={cx(\"collapse-toggler\", { 'is-active': !isCollapsed })}\n        onClick={() => setIsCollapsed(!isCollapsed)}\n      >\n        {messages.title[lang]}\n      </button>\n      <div className={cx('collapsible-contents')}>\n        <blockquote ref={blockquoteRef}>\n          {currentStyle ? <Contents /> : null}\n        </blockquote>\n        <div className=\"widget-footer\">\n          {\n            Object.entries(CONTENTS[lang]).length > 1 ?\n              <ul className=\"styles-list\">\n                {\n                  lang && currentStyle ?\n                    Object.entries(CONTENTS[lang])\n                      .map(([id, Contents]) => (\n                        <li onClick={() => setCurrentStyle(id)} key={id} className={cx('list-item', { 'is-active': currentStyle === id })}>\n                          <span>{id}</span>\n                        </li>\n                      ))\n                    : null\n                }\n              </ul>\n              : null\n          }\n          {/* disabled: copy on click (gadget) */}\n          {/* <div className=\"copy-link-container\">\n            <span onClick={handleCopyClick}>{copyClicked ? messages.citationCopied[lang] : messages.copyCitation[lang]}</span>\n          </div> */}\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default CitationWidget;","import CitationWidget from './CitationWidget';\n\nexport default CitationWidget;","const Test = ({\n  datasets = {}\n}) => {\n  return(\n    <div className=\"Test\">\n      <div>Ceci est un appel pour une visualisation qui n'a pas encore été développée</div>\n      {\n        Object.keys(datasets).length ? \n        <div>\n          <h3>Datasets de la visualisation :</h3>\n          {\n            Object.entries(datasets)\n            .map(([datasetName, values]) => {\n              return (\n              <div key={datasetName}>\n                <h3>{datasetName}</h3>\n                <pre>\n                  <code>\n                    {\n                      JSON.stringify(values, null, 2)\n                    }\n                  </code>\n                </pre>\n              </div>\n              )\n            })\n          }\n        </div>\n        : null\n      }\n    </div>\n    )\n}\n\nexport default Test;","import { scalePow, scaleBand, scaleLinear } from \"d3-scale\";\nimport { range } from \"lodash\";\nimport { extent, max } from 'd3-array';\nimport { useMemo, useRef, useState, useEffect } from \"react\";\nimport { axisPropsFromTickScale } from 'react-d3-axis';\nimport cx from 'classnames';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport colorsPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\n/**\n * Improve the display of numbers\n * @param {string|number} str - the number to prettify\n * @returns {string}\n */\nconst prettifyValue = str => {\n  const inted = Math.round(+str) + '';\n  let finalStr = '';\n  let count = 0;\n  for (let i = inted.length - 1; i >= 0; i--) {\n    const char = inted[i];\n    count++;\n\n    finalStr = char + finalStr;\n    if (count === 3) {\n      count = 0;\n      finalStr = ' ' + finalStr;\n    }\n  }\n  if (finalStr[0] === ',') {\n    finalStr = finalStr.slice(1);\n  }\n\n  return finalStr;\n}\n\n/**\n * Displays a double diagram displaying a histogram and a linechart, with optional additional annotations\n * @param {array} data\n * @param {string} absoluteField\n * @param {string} shareField\n * @param {string} herfindhalField\n * @param {number} width\n * @param {number} height\n * @param {string} axisLeftTitle\n * @param {string} axisRightTitle\n * @param {number} startYear\n * @param {number} endYear\n * @param {boolean} fillGaps - whether to display a line between two datapoints distant by more than one year\n * @param {function} barTooltipFn\n * @param {string} cityName\n * @param {array<number>} highlightYears\n * @param {string} title\n * @param {object} colorScaleMessages\n * @param {array<object>} annotations - in the form of {startYear: [int], endYear: [int], label: [string], row: [int], labelPosition: [string in ['left', 'right']]}\n * @param {object} margins - in the form {'left': [number],'right': [number],'top': [number],'bottom': [number]}\n * @returns {React.ReactElement} - React component\n */\nconst LongitudinalTradeChart = ({\n  data: inputData,\n  // fields: if null, viz will not show the corresponding data\n  absoluteField,\n  shareField,\n  herfindhalField,\n\n  width,\n  height: wholeHeight,\n  axisLeftTitle,\n  axisRightTitle,\n\n  startYear,\n  endYear,\n  fillGaps,\n  barTooltipFn,\n  cityName,\n  highlightYears,\n  title,\n  colorScaleMessages,\n  annotations = [],\n  margins\n}) => {\n  const data = useMemo(() => inputData.filter(d => +d.year >= startYear & +d.year <= endYear), [startYear, endYear, inputData])\n  const headerRef = useRef(null);\n  const footerRef = useRef(null);\n  const [height, setHeight] = useState(wholeHeight);\n  useEffect(() => {\n    // handling ref updates to set the correct height\n    setTimeout(() => {\n      let newHeight = wholeHeight;\n      if (headerRef && headerRef.current) {\n        newHeight = wholeHeight - headerRef.current.offsetHeight;\n        if (footerRef && footerRef.current) {\n          newHeight -= footerRef.current.offsetHeight;;\n        }\n      }\n      setHeight(newHeight);\n      ReactTooltip.rebuild();\n    })\n\n  }, [wholeHeight])\n\n\n  const yearsExtent = extent(data.map((d) => +d.year));\n  const yearsEnumerated = range(...yearsExtent);\n\n  const xBand = scaleBand()\n    .domain([...yearsEnumerated, endYear, endYear + 1])\n    .range([margins.left, width - margins.right])\n    .padding(0.1);\n  const herfindhalColorScale = scalePow()\n    .domain(extent(data, (d) => +d[herfindhalField]))\n    .range([colorsPalettes.generic.accent2, 'grey']);\n  // const herfindhalOpacityScale = herfindhalColorScale.copy()\n  // .range([1, 0.5])\n\n  const yearDomain = xBand.domain().map((y) => +y);\n  const yearTicks = yearDomain\n    .filter((y) => y % 5 === 0)\n  const yAbsoluteScale = scaleLinear()\n    .domain([0, max(data, (d) => +d[absoluteField])])\n    .nice()\n    .range([height - margins.bottom, margins.top]);\n  const yShareScale = scaleLinear()\n    .domain([0, max(data, (d) => +d[shareField])])\n    .nice()\n    .range([height - margins.bottom, margins.top]);\n\n  const { values: rightYAxisValues } = axisPropsFromTickScale(yAbsoluteScale, Math.round(height / 20));\n  let { values: leftYAxisValue } = axisPropsFromTickScale(yShareScale, Math.round(height / 20));\n  if (yShareScale.domain()[1] - yShareScale.domain()[0] <= 5) {\n    leftYAxisValue = axisPropsFromTickScale(yShareScale, 5).values;\n  }\n  return (\n    <div className={cx(\"LongitudinalTradeChart\", { 'has-highlights': highlightYears !== undefined })}>\n      <div className=\"chart-header\" ref={headerRef}>\n        <h3 className=\"visualization-title\" style={{ marginLeft: margins.left }}>{title}</h3>\n        <div className=\"axis-headers-container\">\n          <div style={{\n            background: axisLeftTitle && axisLeftTitle.length ? colorsPalettes.generic.accent2 : undefined,\n            marginLeft: margins.left,\n          }} className=\"axis-header axis-header-left\">\n            {axisLeftTitle}\n          </div>\n          {\n            colorScaleMessages ?\n              <div className=\"color-scale-container\">\n                <div className=\"color-scale-detail\">\n                  <div\n                    className=\"bar\"\n                    style={{\n                      background: `linear-gradient(to right, ${herfindhalColorScale(herfindhalColorScale.domain()[0])}, ${herfindhalColorScale(herfindhalColorScale.domain()[1])})`\n                    }}\n                  />\n                  <div className=\"labels\">\n                    <span>{colorScaleMessages.maximum}</span>\n                    {/* <span>{colorScaleMessages.title}</span> */}\n                    <span>{colorScaleMessages.minimum}</span>\n                  </div>\n                </div>\n              </div>\n              : null\n          }\n          <div style={{\n            background: axisRightTitle && axisRightTitle.length ? colorsPalettes.generic.accent1 : undefined,\n            marginRight: margins.right,\n          }} className=\"axis-header axis-header-right\">\n            {axisRightTitle}\n          </div>\n        </div>\n      </div>\n      <svg width={width} height={height}>\n        <g\n          className=\"axis axis-left\"\n        >\n          {\n            leftYAxisValue.map(value => {\n              return (\n                <g key={value} className=\"axis-group\">\n                  <line\n                    x1={margins.left * .8}\n                    x2={margins.left}\n                    y1={yShareScale(value)}\n                    y2={yShareScale(value)}\n                    stroke={colorsPalettes.generic.accent2}\n                  />\n                  <line\n                    x1={margins.left}\n                    x2={width - margins.right}\n                    y1={yShareScale(value)}\n                    y2={yShareScale(value)}\n                    stroke={colorsPalettes.generic.accent2}\n                    strokeDasharray={'2, 2'}\n                    opacity={.2}\n                  />\n                  <text\n                    x={margins.left * .7}\n                    y={yShareScale(value) + height / 100}\n                    fill={colorsPalettes.generic.accent2}\n                  >\n                    {Math.round(+value * 100) + '%'}\n                  </text>\n                </g>\n              )\n            })\n          }\n        </g>\n        <g\n          className=\"axis axis-right\"\n        >\n          {\n            rightYAxisValues.map(value => {\n              return (\n                <g key={value} className=\"axis-group\">\n                  <line\n                    x1={xBand(yearTicks[0]) + xBand.bandwidth() / 2}\n                    x2={xBand(yearTicks[yearTicks.length - 1])}\n                    y1={yAbsoluteScale(value)}\n                    y2={yAbsoluteScale(value)}\n                    stroke={colorsPalettes.generic.accent1}\n                    strokeDasharray={'4, 2'}\n                    opacity={.5}\n                  />\n                  <text\n                    x={width - margins.right + 2}\n                    y={yAbsoluteScale(value) + height / 100}\n                    fill={colorsPalettes.generic.accent1}\n                  >\n                    {value > 0 ? Math.round(value / 1000000) + 'm livres t.' : 0}\n                  </text>\n                </g>\n              )\n            })\n          }\n        </g>\n        <g className=\"axis axis-bottom\">\n          <line\n            y1={height - margins.bottom}\n            y2={height - margins.bottom}\n            x1={xBand(yearTicks[0]) + xBand.bandwidth() / 2}\n            x2={xBand(yearTicks[yearTicks.length - 1]) + xBand.bandwidth() / 2}\n            stroke={'lightgrey'}\n          />\n          {\n            yearTicks\n              .map((year, i) => {\n                const x = xBand(year) + xBand.bandwidth() / 2;\n                const y = height - margins.bottom;\n                return (\n                  <g\n                    key={i}\n                    className=\"axis-group\"\n                    transform={`translate(${x}, ${y})`}\n                  >\n                    <line\n                      x1={0}\n                      x2={0}\n                      y1={0}\n                      y2={margins.bottom / 6}\n                      stroke=\"grey\"\n                    />\n                    <g\n                      transform={`translate(${(xBand.bandwidth() * .5)}, ${margins.bottom / 2})`}\n                    >\n                      <text fill=\"grey\">\n                        {year}\n                      </text>\n                    </g>\n                  </g>\n                )\n              })\n          }\n        </g>\n        <g className=\"annotations-container\">\n          {\n            annotations\n              .filter(({ startYear: aStartYear, endYear: aEndYear }) => aStartYear >= startYear && aEndYear <= endYear)\n              .map((annotation, annotationIndex) => {\n                const { startYear, endYear: initialEndYear } = annotation;\n                const endYear = initialEndYear + 1;\n                return (\n                  <g className=\"annotation\" key={annotationIndex}>\n                    <rect\n                      x={xBand(startYear)}\n                      width={xBand(endYear) - xBand(startYear)}\n                      height={fixSvgDimension(height - margins.top - margins.bottom)}\n                      y={margins.top}\n                      fill=\"url(#diagonalHatch)\"\n                      opacity={.4}\n                    />\n                    <line\n                      x1={xBand(startYear)}\n                      x2={xBand(startYear)}\n                      y1={margins.top}\n                      y2={height - margins.bottom}\n                      stroke=\"grey\"\n                      opacity={.4}\n                      strokeDasharray={'4,2'}\n                    />\n                    <line\n                      x1={xBand(endYear)}\n                      x2={xBand(endYear)}\n                      y1={margins.top}\n                      y2={height - margins.bottom}\n                      stroke=\"grey\"\n                      opacity={.4}\n                      strokeDasharray={'4,2'}\n                    />\n                    <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                          M0,4 l4,-4\n                          M3,5 l2,-2\"\n                        style={{ stroke: 'grey', opacity: .5, strokeWidth: 1 }} />\n                    </pattern>\n\n                  </g>\n                )\n              })\n          }\n        </g>\n\n        <g className=\"bars-container\">\n          {\n            data.map((d) => {\n              return (\n                <rect\n                  key={d.year}\n                  x={xBand(+d.year)}\n                  y={yShareScale(d[shareField])}\n                  width={xBand.bandwidth()}\n                  height={fixSvgDimension(yShareScale(0) - yShareScale(d[shareField]))}\n                  fill={herfindhalField && d[herfindhalField] ? herfindhalColorScale(+d[herfindhalField]) : colorsPalettes.generic.dark}\n                  // opacity={herfindhalField && d[herfindhalField]\n                  //         ? herfindhalOpacityScale(+d[herfindhalField])\n                  //         : 1}\n                  data-tip={barTooltipFn ?\n                    barTooltipFn(d.year, (d[shareField] * 100).toFixed(2), cityName, d[herfindhalField] && (+d[herfindhalField] || 0).toFixed(2))\n                      .replace('[colorBox]', `<span style=\"display:inline-block;width: .8em;height:.8em;background:${herfindhalColorScale(+d[herfindhalField] || 0)}\"></span>`)\n                    : undefined}\n                  data-for={cityName}\n                  data-effect=\"solid\"\n                  data-html={true}\n                  data-class=\"bar-tooltip\"\n                  data-place=\"left\"\n                  className={cx('graph-bar', { 'is-highlighted': highlightYears && highlightYears.includes(+d.year) })}\n                />\n              )\n            })\n          }\n        </g>\n\n        <g\n          className=\"lines-container\"\n        >\n          {/* data points circles */\n            data\n              .sort((a, b) => {\n                if (+a.year > +b.year) {\n                  return 1;\n                }\n                return -1;\n              })\n              .filter(datum => +datum[absoluteField])\n              .map((datum, index) => {\n                \n                const x = xBand(+datum.year) + xBand.bandwidth() / 2;\n                const y = yAbsoluteScale(+datum[absoluteField]);\n                return (\n                  <>\n                    <circle\n                      key={index}\n                      {\n                      ...{\n                        cx: x,\n                        cy: y,\n                        r: width * 0.005\n                      }\n                      }\n                      fill={'transparent'}\n                      data-tip={`${datum.year} : export de <strong>${prettifyValue(+datum[absoluteField])}</strong> livres tournois.`}\n                      data-for={cityName}\n                      data-class=\"bar-tooltip\"\n                      data-html={true}\n                    />\n                    <circle\n                      key={index + 'a'}\n                      {\n                      ...{\n                        cx: x,\n                        cy: y,\n                        r: 1.5\n                      }\n                      }\n                      fill={colorsPalettes.generic.accent1}\n                    />\n                  </>\n                )\n              })\n          }\n          {\n            data\n              .sort((a, b) => {\n                if (+a.year > +b.year) {\n                  return 1;\n                }\n                return -1;\n              })\n              .map((datum, index) => {\n                const next = data[index + 1];\n                if (index === data.length - 1 || fillGaps ? false : +next.year !== +datum.year + 1) {\n                  return null;\n                }\n                if (!next) {\n                  return null;\n                }\n                const x1 = xBand(+datum.year) + xBand.bandwidth() / 2;\n                const x2 = xBand(+next.year) + xBand.bandwidth() / 2;\n                const y1 = yAbsoluteScale(+datum[absoluteField]);\n                const y2 = yAbsoluteScale(+next[absoluteField]);\n                if (!+datum[absoluteField] || !+next[absoluteField]) {\n                  return null;\n                }\n                const ratio = +next[absoluteField] > +datum[absoluteField] ? +next[absoluteField] / +datum[absoluteField] - 1 : -(1 - +next[absoluteField] / +datum[absoluteField]);\n                return (\n                  <line\n                    key={datum.year}\n                    {\n                    ...{\n                      x1,\n                      x2,\n                      y1,\n                      y2\n                    }\n                    }\n                    stroke={colorsPalettes.generic.accent1}\n                    title={`${datum.year}-${next.year}`}\n                    strokeWidth={2}\n                    data-tip={`${datum.year} → <strong>${prettifyValue(+datum[absoluteField])}</strong> livres tournois <br/>${next.year} → <strong>${prettifyValue(+next[absoluteField])}</strong> livres tournois<br/><i>(${ratio > 0 ? '+' : ''}${Math.round(ratio * 100)}%)</i>`}\n                    data-for={cityName}\n                    data-class=\"bar-tooltip\"\n                    data-html={true}\n                  />\n                )\n              })\n          }\n\n        </g>\n\n        <g className=\"annotations-container\">\n          {\n            annotations\n              .filter(({ startYear: aStartYear, endYear: aEndYear }) => aStartYear >= startYear && aEndYear <= endYear)\n              .map((annotation, annotationIndex) => {\n                const { startYear, endYear: initialEndYear, label, row = 0, labelPosition = 'right' } = annotation;\n                const endYear = initialEndYear + 1;\n                return (\n                  <g className=\"annotation\" key={annotationIndex}>\n                    {\n                      labelPosition === 'right' ?\n                        <>\n                          <line\n                            x1={xBand(endYear) + 20}\n                            x2={xBand(endYear) + 10}\n                            y1={margins.top + 7.5 + row * 20}\n                            y2={margins.top + 7.5 + row * 20}\n                            stroke=\"grey\"\n                            markerEnd=\"url(#arrowhead)\"\n                          />\n                          <text\n                            x={xBand(endYear) + 22}\n                            y={margins.top + 10 + row * 20}\n                            fontSize={'.5rem'}\n                            fill=\"grey\"\n                          >\n                            {label}\n                          </text>\n                        </>\n                        :\n                        <>\n                          <line\n                            x1={xBand(startYear) - 20}\n                            x2={xBand(startYear) - 10}\n                            y1={margins.top + 7.5 + row * 20}\n                            y2={margins.top + 7.5 + row * 20}\n                            stroke=\"grey\"\n                            markerEnd=\"url(#arrowhead)\"\n                          />\n                          <text\n                            x={xBand(startYear) - 22}\n                            y={margins.top + 10 + row * 20}\n                            fontSize={'.5rem'}\n                            textAnchor={'end'}\n                            fill=\"grey\"\n                          >\n                            {label}\n                          </text>\n                        </>\n                    }\n\n                    <defs>\n                      <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\"\n                        refX=\"0\" refY=\"2.5\" orient=\"auto\">\n                        <polygon stroke=\"grey\" fill=\"transparent\" points=\"0 0, 5 2.5, 0 5\" />\n                      </marker>\n                    </defs>\n                    <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\n                      <path d=\"M-1,1 l2,-2\n                          M0,4 l4,-4\n                          M3,5 l2,-2\"\n                        style={{ stroke: 'grey', opacity: .5, strokeWidth: 1 }} />\n                    </pattern>\n\n                  </g>\n                )\n              })\n          }\n        </g>\n\n      </svg>\n\n\n      <ReactTooltip id={cityName} />\n\n    </div>\n  );\n};\nexport default LongitudinalTradeChart;\n","import {useRef, useState, useEffect, useMemo} from 'react';\nimport { sortBy, sum } from \"lodash\";\nimport { scaleLinear, scalePow } from 'd3-scale';\nimport {extent} from 'd3-array';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport colorsPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from '../../helpers/misc';\n\n// TODO:\n// - click on products highlight same product on all years ?\n// - click on products make label bigger for small ones ?\n\n\n/**\n * Displays a comparison of exported products totalizing n% of total shares of exports\n * @param {array} data\n * @param {array} tradeData\n * @param {string} field\n * @param {number} partTreshold - limit of the total cumulated share of exports from which to display products - in [0,1]\n * @param {number} height\n * @param {number} barWidth\n * @param {string} herfindhalField\n * @param {array} years - two years to compare\n * @param {number} width\n * @param {string} title\n * @param {object} margins\n * @param {function} productTooltipFn\n * @param {boolean} compareFrom\n * @returns {React.ReactElement} - React component\n */\nconst ProductsDistributionChart = ({\n  data: allData,\n  tradeData = [],\n  field,\n  partTreshold,\n  height: wholeHeight,\n  barWidth,\n  herfindhalField,\n  years,\n  width,\n  title,\n  margins,\n  productTooltipFn,\n  compareFrom\n}) => {\n  const titleRef = useRef(null);\n  const svgRef = useRef(null);\n  const yearsRef = useRef(new Array(years.length))\n\n  useEffect(() => {\n    setTimeout(() => {\n      ReactTooltip.rebuild();\n    })\n  }, [wholeHeight])\n\n  const [hoveredProduct, setHoveredProduct] = useState(undefined);\n  let height = fixSvgDimension(wholeHeight);\n  const yearLabelHeight = height / 20 + 10;\n\n  if (titleRef && titleRef.current) {\n    height = wholeHeight - titleRef.current.getBoundingClientRect().height - yearLabelHeight;\n  }\n  const finalData= useMemo(() => {\n    if (compareFrom) {\n      const lastYear = years[years.length - 1];\n      const lastYearData =  allData.filter(datum => datum.year + '' === lastYear + '');\n      const lastYearTotalValue = sum(lastYearData.map((d) => +d[field])); \n      let partAcc = 0;\n      // Sort by trade value and keep only the top products which totalizes partTreshold of share\n      const dataTillTreshold = sortBy(lastYearData, (d) => -d[field])\n      .filter((d) => {\n        partAcc += +d[field];\n        return partAcc <= partTreshold * lastYearTotalValue;\n      });\n      const topProducts = dataTillTreshold.map(d => d.product);\n      // group the long tail of low value (under the part Treshold) products as one aggregated misc\n      const aggregatedMiscProducts = {\n        [field]: lastYearTotalValue - sum(dataTillTreshold.map((d) => +d[field])),\n        product: `${lastYearData.length - dataTillTreshold.length} autres types de produits`,\n      };\n      dataTillTreshold.push(aggregatedMiscProducts);\n    return years.reduce((dict, year) => {\n\n        if (year === lastYear) {\n          return {\n            ...dict,\n            [year]: dataTillTreshold\n          }\n        }\n        const thisData = allData.filter(datum => datum.year + '' === year + '');\n        const thisTotalValue =  sum(thisData.map((d) => +d[field]));\n        const thisYearData = thisData.filter(d => topProducts.includes(d.product))\n        .sort((a, b) => {\n          if (+a[field] > +b[field]) {\n            return -1;\n          }\n          return 1;\n        })\n        thisYearData.push({\n          [field]: thisTotalValue - sum(thisYearData.map((d) => +d[field])),\n          product: `${thisData.length - thisYearData.length} autres types de produits`,\n        })\n        return {\n          ...dict,\n          [year]: thisYearData\n        }\n      });\n    }\n    return years.reduce((dict, year) => {\n      const thisYearData =  allData.filter(datum => datum.year + '' === year + '');\n      const totalValue = sum(thisYearData.map((d) => +d[field])); \n      let partAcc = 0;\n      // Sort by trade value and keep only the top products which totalizes partTreshold of share\n      const dataTillTreshold = sortBy(thisYearData, (d) => -d[field])\n      .filter((d) => {\n        partAcc += +d[field];\n        return partAcc <= partTreshold * totalValue;\n      });\n      // const topProducts = dataTillTreshold.map(d => d.product);\n      // group the long tail of low value (under the part Treshold) products as one aggregated misc\n      const aggregatedMiscProducts = {\n        [field]: totalValue - sum(dataTillTreshold.map((d) => +d[field])),\n        product: `${thisYearData.length - dataTillTreshold.length} autres types de produits`,\n      };\n      dataTillTreshold.push(aggregatedMiscProducts);\n      return {\n        ...dict,\n        [year]: dataTillTreshold\n      }\n    }, {})\n\n  }, [years, JSON.stringify(allData)])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  const links = useMemo(() => {\n    const yearsToLink = years.filter((y, i) => i < years.length - 1)\n\n    return yearsToLink\n    .map((year, i) => {\n      const nextYear = years[i + 1];\n      const thisData = finalData[year + ''];\n      const nextData = finalData[nextYear + ''];\n      if (!nextData) {\n        return null;\n      }\n\n      const thisYearTotalValue = sum(thisData.map((d) => +d[field]));    \n      const thisYearScaleValue = (value) => {\n        const v = (value / thisYearTotalValue) * height;\n        return v;\n      };\n      const nextYearTotalValue = sum(nextData.map((d) => +d[field]));    \n      const nextYearScaleValue = (value) => {\n        const v = (value / nextYearTotalValue) * height;\n        return v;\n      };\n      let thisYearOffset = 0;\n      // const thisYearLabelScale = scaleLinear().domain(extent(thisData, datum => +datum[field])).range([height / 100, height / 15])\n\n      return thisData.reduce((res, datum, datumIndex) => {\n        let otherOffset = 0;\n        let otherHeight;\n        let thisHeight = thisYearScaleValue(datum[field]);\n        /* @todo if label adjust\n        let thisFontSize =  i === thisData.length - 1 ? 10 : thisYearLabelScale(+datum[field]);\n        if (isHighlighted && thisFontSize < 10) {\n          thisFontSize = 10;\n        }\n        */\n        thisYearOffset += thisHeight;\n        const hasNext = nextData.find(otherDatum => {\n          otherHeight = nextYearScaleValue(otherDatum[field]);\n          otherOffset += otherHeight;\n          if (otherDatum.product === datum.product) {\n            return true;\n          }\n          return false;\n        });\n        if (hasNext) {\n          return [\n            ...res,\n            {\n              product: datum.product,\n              y1: thisYearOffset/* + thisFontSize*/,\n              height1: thisHeight,\n              y2: otherOffset - otherHeight,\n              height2: otherHeight,\n            }\n          ]\n        } else {\n          return res;\n        }\n      }, [])\n    })\n      \n  }, [finalData, years, height]);\n  \n\n  const herfindhalColorScale = scalePow()\n    .domain(extent(tradeData, (d) => +d[herfindhalField]))\n    .range([colorsPalettes.generic.accent2, 'grey']);\n  const svgOffset = yearsRef.current && yearsRef.current.length && yearsRef.current[0] ? yearsRef.current[0].parentNode.offsetTop : undefined;\n  return (\n    <div className=\"ProductsDistributionChart\">\n      <h3  className=\"visualization-title\" style={{marginLeft: margins.left}} ref={titleRef}>{title}</h3>\n      <div \n        className={cx(\"years-container\", {'has-highlights': hoveredProduct !== undefined})}\n        style={{\n          marginLeft: margins.left + 5,\n          marginRight: margins.right + width * .002,\n        }}\n      >\n      <svg \n        ref={svgRef} \n        className={cx(\"links-container\", {'has-highlights': hoveredProduct})} \n        style={{top: svgOffset}} \n        width={width} \n        height={height}\n      >\n        {\n          links.map((yearLinks, i) => {\n            const ref1 = yearsRef.current && yearsRef.current.length >= i && yearsRef.current[i] && yearsRef.current[i];\n            const ref2 = yearsRef.current && yearsRef.current.length >= i + 1 && yearsRef.current[i + 1] && yearsRef.current[i + 1];\n            const x1 = ref1 ? yearsRef.current[i].getBoundingClientRect().width : 0;\n            const x2 = ref2 && svgRef.current ? yearsRef.current[i + 1].getBoundingClientRect().x - svgRef.current.getBoundingClientRect().x : width;\n            return (\n            <g className=\"year-links\" key={i}>\n              {\n                yearLinks.map(({product, y1: initialY1, height1, y2: initialY2, height2}, index) => {\n                  const y1= initialY1 - height1 / 2;\n                  const y2= initialY2 + height2/2;\n                  const isHighlighted = hoveredProduct === product;\n                  return (\n                    <path\n                      key={index}\n                      d={`M ${x1} ${y1} C ${x1 + (x2 - x1) * .5} ${y1} ${x1 + (x2 - x1) * .5} ${y2} ${x2} ${y2}`}\n                      className={cx('link', {'is-highlighted': isHighlighted})}\n                    />\n                  );\n                })\n              }\n            </g>\n          )})\n        }\n      </svg>\n      {\n        years.map((year, yearIndex) => {\n          const data = allData.filter(datum => datum.year + '' === year + '');\n          const flows = tradeData.filter((d) => d.year === year + '');\n          const her = flows && +flows[0][herfindhalField];\n          const color = her\n          ? herfindhalColorScale(+her) // d3.rgb(200, 50, 0, herfindhalScale(+her))\n          : \"lightgrey\";\n          const totalValue = sum(data.map((d) => +d[field]));    \n          \n          const scaleValue = (value) => {\n            const v = (value / totalValue) * height;\n            return v;\n          };\n          const dataTillTreshold = finalData[year + ''];\n\n          const labelScale = scaleLinear().domain(extent(data, datum => +datum[field])).range([height / 100, height / 10])\n\n          return (\n            <div\n            key={yearIndex}\n            className=\"year-column\"\n          >\n            <h4 className=\"year-label\">\n              <span>{year}</span>\n            </h4>\n            <div \n            \n            className=\"year-items\">\n              <div className=\"dimensions-placeholder\"\n                ref={(element) => {yearsRef.current[yearIndex] = element}}\n                style={{\n                  width: `${barWidth}px`, height: 0,\n                  position: 'absolute',\n                  top: 0,\n                  left: yearIndex === years.length - 1 ? undefined : 0,\n                  right: yearIndex === years.length - 1 ? 0 : undefined,\n                }}\n              />\n            {dataTillTreshold &&\n              dataTillTreshold.map((d, i) => {\n                const isHighlighted = hoveredProduct === d.product;\n                let fontSize =  i === dataTillTreshold.length - 1 ? 10 : labelScale(+d[field]);\n                if (isHighlighted && fontSize < 10) {\n                  fontSize = 10;\n                }\n                return (\n                <div\n                  key={d.product}\n                  style={{\n                    height: `${scaleValue(d[field])}px`,\n                  }}\n                  className={cx(\"product-group\", {'is-highlighted': isHighlighted})}\n                  onClick={() => {\n                    if (hoveredProduct !== d.product && i !== dataTillTreshold.length - 1) {\n                      setHoveredProduct(d.product);\n                    } else {\n                      setHoveredProduct(undefined);\n                    }\n                  }}\n                  data-tip={productTooltipFn && i !== dataTillTreshold.length - 1 ? \n                    productTooltipFn(year, d.product, (d[field] / totalValue * 100).toFixed(2))\n                    : undefined}\n                  data-for={'product-tooltip'}\n                  data-html={true}\n                  data-class=\"bar-tooltip\"\n                  data-place={yearIndex === 0 ? 'right' : 'left'}\n                  data-effect=\"solid\"\n                >\n                  <div\n                    style={{\n                      height: \"100%\",\n                      width: `${barWidth}px`,\n                      maxWidth: `${barWidth}px`,\n                      minWidth: `${barWidth}px`,\n                      backgroundColor: color,\n                    }}\n                    className=\"bar\"\n                  ></div>\n                  <span\n                    className=\"label\"\n                    style={{\n                      fontSize\n                    }}\n                  >\n                    {d.product}\n                  </span>\n                </div>\n              )\n              })}\n              </div>\n          </div>\n          )\n        })\n      }\n      </div>\n      <ReactTooltip id={'product-tooltip'} />\n    </div>\n  );\n};\n\nexport default ProductsDistributionChart;","import DeclineChart from './DeclineChart';\n\nexport default DeclineChart;","import cx from 'classnames';\nimport LongitudinalTradeChart from \"./LongitudinalTradeChart\";\nimport ProductsDistributionChart from './ProductsDistributionChart';\n\nimport './DeclineChart.scss';\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\n/**\n * Configurable wrapper for main viz #1\n * @param {number} width\n * @param {number} height\n * @param {string} lang\n * @param {number} startYear\n * @param {number} endYear\n * @param {number} productTradePartThreshold\n * @param {array<string>} rows - list of visualization rows to display at a certain time\n * @param {datasets} object\n * @param {boolean} atlasMode\n * @returns {React.ReactElement} - React component\n */\nconst DeclineChart = (props) => {\n  const {\n    width: inputWidth, \n    height: containerHeight, \n    lang = 'fr',\n    startYear = 1720,\n    endYear = 1789,\n    productTradePartThreshold = 0.9,\n    rows,\n    datasets = {},\n    atlasMode\n  } = props;\n  const height = atlasMode ? 1200 : fixSvgDimension(containerHeight);\n  const width = fixSvgDimension(inputWidth);\n  const messages = {\n    franceOverviewTitle: {\n      fr: (start, end) => `Évolution de la valeur des exports du royaume de France de ${start} à ${end}`,\n      en: (start, end) => `Evolution of the value of exports from the kingdom of France from ${start} to ${end}`\n    },\n    tradeEvolutionTitle: {\n      fr: (cityName, start, end) => `Évolution du commerce de la direction des fermes de ${cityName} de ${start} à ${end}`,\n      en: (cityName, start, end) => `Evolution of the direction des fermes of ${cityName} trade from ${start} to ${end}`\n    },\n    top90PctTitle: {\n      fr: (cityName, start, end) => `Comparaison des parts des produits exportés par la direction des fermes de ${cityName} totalisant plus de 90% du commerce en ${start} et en ${end} (ports francs non pris en compte)`,\n      en: (cityName, start, end) => `Comparison of shares of the top 90% of exported products by the direction des fermes of ${cityName} in ${start} and in ${end} (ports francs non pris en compte)`,\n    },\n    partInPct: {\n      fr: () => 'part des exports fr.',\n      en: () => 'share of french exports'\n    },\n    absoluteValue: {\n      fr: () => 'valeur absolue des exports',\n      en: () => 'exports\\' absolute value'\n    },\n    herfindalLegendTitle: {\n      // fr: () => `Degré de diversité du commerce (inverse de l’indice de Herfindahl)`,\n      // en: () => `Degree of trade diversity (inverse of the Herfindahl index)`,\n      fr: () => `degré de diversité du commerce`,\n      en: () => `degree of trade diversity`,\n    },\n    herfindal0: {\n      fr: () => `commerce peu diversifié`,\n      en: () => `fewly diversified trade`,\n    },\n    herfindal1: {\n      fr: () => `commerce très diversifié`,\n      en: () => `very diversified trade`,\n    },\n    barTooltip: {\n      fr: (year, pct, city, herfindal) => `En <strong>${year}</strong>, ${pct}% des biens exportés depuis la France le sont à partir de <strong>${city}</strong>.<br/><br/>Concentration du commerce <i>(indice de Herfindahl-Hirschmann : somme du carré des parts du marché français par classe de produits exportés)</i> : <span>[colorBox] ${herfindal}</span>`,\n      en: (year, pct, city, herfindal) => `In <strong>${year}</strong>, ${pct}% of exported goods from France are exported <strong>${city}</strong>.<br/><br/>Trade concentration <i>(Herfindahl-Hirschmann index : sum of square french market' shares sorted by exported products classes)</i> : <span>[colorBox] ${herfindal}</span>`,\n    },\n    productTooltip: {\n      fr: (year, product, pct) => `En <strong>${year}</strong>, les produits de la classe \"${product}\" représentent <strong>${pct}%</strong> de la valeur des biens exportés par la direction des fermes de La Rochelle.`,\n      en: (year, product, pct) => `In <strong>${year}</strong>, products classed as \"${product}\" represent ${pct}% of goods exported by La Rochelle's direction des fermes.`,\n    },\n    sevenYearsWar: {\n      fr: () => 'guerre de sept ans',\n      en: () => 'seven years war'\n    },\n    austriaWar: {\n      fr: () => 'guerre franco-britannique au sein de la guerre de succession d’Autriche',\n      en: () => 'guerre franco-britannique au sein de la guerre de succession d’Autriche',\n    },\n    usIndependance: {\n      fr: () => 'guerre d’indépendance Américaine',\n      en: () => 'guerre d’indépendance Américaine',\n    },\n    laRochelleDiaspora: {\n      fr: () => 'Organisation de convois partant de La Rochelle pour échapper aux Anglais',\n      en: () => 'Organisation de convois partant de La Rochelle pour échapper aux Anglais',\n    },\n    // absolute1789: {\n    //   fr: item => `Total des exports en 1789 : ${(item.Exports / 1000000).toFixed(1)} m. de livres tournois`,\n    //   en: item => `Total des exports en 1789 : ${(item.Exports / 1000000).toFixed(1)} m. de livres tournois`\n    // }\n  }\n  const margins = { top: 10, right: 50, bottom: 30, left: 50 };\n\n  const totalRows = Object.entries(rows).reduce((sum, [id, count]) => sum + count, 0)\n  const renderRow = (row, rowFlex, rowIndex) => {\n    switch(row) {\n      case 'France':\n        if (!datasets['decline_longitudinal_data/decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data/decline_longitudinal_data.csv'].filter((d) => d.region === \"France\")}\n            absoluteField=\"Exports\"\n            title={messages.franceOverviewTitle[lang](startYear, endYear)}\n            axisLeftTitle={''}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            margins={margins}\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: .5,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 3,\n                label: messages.usIndependance[lang]()\n              },\n\n              \n            ]}\n            // fillGaps\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'La Rochelle':\n        if (!datasets['decline_longitudinal_data/decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data/decline_longitudinal_data.csv'].filter((d) => d.region === \"La Rochelle\")}\n            absoluteField=\"Exports\"\n            shareField=\"Exports_share\"\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.tradeEvolutionTitle[lang]('La Rochelle', startYear, endYear)}\n            axisLeftTitle={messages.partInPct[lang]()}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            margins={margins}\n            barTooltipFn={messages.barTooltip[lang]}\n            cityName=\"La Rochelle\"\n            highlightYears={rows.comparison > 0 ? [startYear, endYear] : undefined}\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: 1,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1747,\n                endYear: 1747,\n                row: 2,\n                label: messages.laRochelleDiaspora[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 3,\n                label: messages.usIndependance[lang]()\n              },\n              // {\n              //   type: 'span',\n              //   startYear: 1789,\n              //   endYear: 1789,\n              //   row: 4,\n              //   labelPosition: 'left',\n              //   label: messages.absolute1789[lang](datasets['decline_longitudinal_data.csv'].find((d) => d.region === \"La Rochelle\" && d.year === \"1789\"))\n              // },\n            ]}\n            colorScaleMessages={{\n              title: messages.herfindalLegendTitle[lang](),\n              minimum: messages.herfindal0[lang](),\n              maximum: messages.herfindal1[lang](),\n            }}\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'Bordeaux':\n        if (!datasets['decline_longitudinal_data/decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <LongitudinalTradeChart\n            width={width}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            data={datasets['decline_longitudinal_data/decline_longitudinal_data.csv'].filter((d) => d.region === \"Bordeaux\")}\n            absoluteField=\"Exports\"\n            shareField=\"Exports_share\"\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.tradeEvolutionTitle[lang]('Bordeaux', startYear, endYear)}\n            axisLeftTitle={messages.partInPct[lang]()}\n            axisRightTitle={messages.absoluteValue[lang]()}\n            barTooltipFn={ messages.barTooltip[lang]}\n            cityName=\"Bordeaux\"\n            annotations={[\n              {\n                type: 'span',\n                startYear: 1756,\n                endYear: 1763,\n                row: 0.5,\n                label: messages.sevenYearsWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1744,\n                endYear: 1748,\n                row: 0,\n                label: messages.austriaWar[lang]()\n              },\n              {\n                type: 'span',\n                startYear: 1778,\n                endYear: 1781,\n                labelPosition: 'left',\n                row: 1,\n                label: messages.usIndependance[lang]()\n              },\n            ]}\n            margins={margins}\n            colorScaleMessages={{\n              title: messages.herfindalLegendTitle[lang](),\n              minimum: messages.herfindal0[lang](),\n              maximum: messages.herfindal1[lang](),\n            }}\n            {\n              ...{\n                startYear,\n                endYear\n              }\n            }\n          />\n        )\n      case 'comparison':\n        if (!datasets[`decline_LR_products/decline_LR_products.csv`] || !datasets['decline_longitudinal_data/decline_longitudinal_data.csv']) {\n          return null;\n        }\n        return (\n          <ProductsDistributionChart\n            data={datasets[`decline_LR_products/decline_LR_products.csv`]}\n            tradeData={datasets['decline_longitudinal_data/decline_longitudinal_data.csv']}\n            field=\"Exports\"\n            key={rowIndex}\n            partTreshold={productTradePartThreshold}\n            height={fixSvgDimension(height/totalRows * rowFlex)}\n            barWidth={width * 0.02}\n            years={[atlasMode ? 1750 : startYear, atlasMode ? 1789 : endYear]}\n            margins={margins}\n            herfindhalField=\"product_revolutionempire_exports_herfindahl\"\n            title={messages.top90PctTitle[lang]('La Rochelle', atlasMode ? 1750 : startYear, atlasMode ? 1789 : endYear)}\n            productTooltipFn={messages.productTooltip[lang]}\n            width={width}\n          />\n        )\n      default:\n        return <div>{row}</div>\n    }\n  }\n  return (\n    <div className=\"DeclineChart\">\n      {\n        Object.entries(rows).map(([rowId, rowFlex], rowIndex) => {\n          return (\n            <div className={cx('row', {'is-visible': rows[rowId]})}>\n                {renderRow(rowId, rowFlex, rowIndex)}\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n};\n\nexport default DeclineChart;\n","import Decline from '../components/DeclineChart';\n\n/**\n * Renders main visualization #1\n * @param {number} width\n * @param {number} height\n * @param {string} step - in [1, 2, 3] - defines the step of storytelling\n * @param {objects} props - additional params to be passed to visualization components\n * @returns {React.ReactElement} - React component\n */\nconst PrincipalVisualizationPart1 = ({\n  width, \n  height, \n  step, \n  ...props\n}) => {\n  if (props.atlasMode) {\n    return (\n      <Decline \n        startYear={1720} \n        endYear={1789} \n        rows={{'France': 1, 'La Rochelle': 1, 'Bordeaux': 1, 'comparison': 1}}  \n        {...{width, height, ...props}} \n      />\n    )\n  }\n  switch(step + '') {\n    case '1':\n      return <Decline startYear={1720} endYear={1789} rows={{'France': 2, 'La Rochelle': 3, 'Bordeaux': 3, 'comparison': 0}}  {...{width, height, ...props}} />\n    case '2':\n      return <Decline startYear={1720} endYear={1789} rows={{'France': 0, 'La Rochelle': 1, 'Bordeaux': 1, 'comparison': 0}} {...{width, height, ...props}} />\n    case '3':\n      return <Decline startYear={1750} endYear={1789} rows={{'France': 0, 'La Rochelle': 1, 'Bordeaux': 0, 'comparison': 2}} {...{width, height, ...props}} />\n    case '4':\n    default:\n      return <Decline startYear={1750} endYear={1789} rows={{'France': 1, 'La Rochelle': 1, 'Bordeaux': 0, 'comparison': 1}} {...{width, height, ...props}} />\n    \n  }\n}\n\nexport default PrincipalVisualizationPart1;","import { useSpring, animated } from 'react-spring'\n\n\nexport const G =({children, className, onClick, ...inputProps})  => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.g className={className} onClick={onClick} {...props}>\n      {children}\n    </animated.g>\n  )\n}\nexport const Text =({children, onClick, className, style, ...inputProps})  => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.text className={className} onClick={onClick} style={style} {...props}>\n      {children}\n    </animated.text>\n  )\n}\nexport const Line = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.line className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nexport const Circle = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.circle className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nexport const Rect = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.rect className={className} onClick={onClick} style={style} {...props} />\n  )\n}\nexport const Path = ({style, className, onClick, ...inputProps}) => {\n  const props = useSpring(inputProps);\n  return (\n    <animated.path className={className} onClick={onClick} style={style} {...props} />\n  )\n}","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport {\n  schemeAccent as colorScheme1,\n  schemeDark2 as colorScheme2,\n  schemePaired as colorScheme3\n} from 'd3-scale-chromatic';\nimport cx from 'classnames';\n\nimport { prepareAlluvialData } from './utils';\n\nimport './CircularAlluvialChart.scss';\nimport { min } from 'd3-array';\nimport { uniq } from 'lodash-es';\nimport { cartesian2Polar, fixSvgDimension, trimText } from '../../helpers/misc';\nimport ReactTooltip from 'react-tooltip';\n\nimport {G, Text, Line, Circle, Rect, Path} from './animatedPrimities';\n\nconst colorSchemes = [colorScheme1, colorScheme2, colorScheme3];\n\n/**\n * Renders a circular alluvial diagram (duh)\n * @param {array} data\n * @param {string} sumBy - field in data to use to quantify flows\n * @param {array} steps - arrow of steps in the form: {field: [string], labels: {fr: [string], en: [string]}, filters: [{key: [string], value: [string]}]}\n * @param {number} width\n * @param {number} height\n * @param {array} filters - objects in the form {key, value} to highlight some flows in the vis\n * @param {boolean} debug\n * @param {string} title\n * @param {object} colorsPalettes\n * @param {boolean} centerHorizontalLabels\n * @param {boolean} displaceHorizontalLabels - avoid labels overlap (at the cost of invadint the center of the vis)\n * @param {object} tooltips - tooltips of nested functions in the form {node: {fr: [fn], en: [fn]}, flow: {fr: [fn], en: [fn]}}\n * @param {string} lang - enum ['fr', 'en']\n * @param {string} align - enum ['left', 'center']\n * @returns {React.ReactElement} - React component\n */\nconst CircularAlluvialChart = ({\n  data: inputData = [],\n  sumBy,\n  steps,\n  width: inputWidth = 1200,\n  height : inputHeight = 800,\n  filters = [],\n  debug = false,\n  title,\n  colorsPalettes,\n  centerHorizontalLabels = true,\n  displaceHorizontalLabels = true,\n  tooltips,\n  lang,\n  align = 'left'\n}) => {\n  const titleRef = useRef(null);\n  let height = titleRef.current ? inputHeight - titleRef.current.getBoundingClientRect().height : inputHeight;\n  height = fixSvgDimension(height);\n  const width = fixSvgDimension(inputWidth);\n  // state is used for managing interactions through svg elements' classes\n  const [highlightedFlow, setHighlightedFlow] = useState(undefined);\n  const [highlightedFilter, setHighlightedFilter] = useState(undefined);\n  // rebuild data each time data or viz params are changed\n  const data = useMemo(() => {\n    const vizData = prepareAlluvialData(inputData, { sumBy, steps });\n    return vizData;\n  }, [inputData, sumBy, steps]);\n  const filtersTotal = useMemo(() => {\n    if (filters && filters.length) {\n      return inputData\n      .filter(flow => filters.find(({key, value}) => flow[key] === value))\n      .reduce((sum, flow) => sum + (+flow[sumBy]), 0)\n    }\n    return inputData.reduce((sum, flow) => sum + (+flow[sumBy]), 0)\n  }, [inputData, sumBy, filters]);\n\n  let tooltipContent;\n\n  useEffect(() => {\n    ReactTooltip.rebuild();\n  })\n\n  useEffect(() => {\n    setHighlightedFlow(undefined);\n    setHighlightedFilter(undefined);\n  }, [filters])\n\n  // build categorical color scales\n  const colorScales = useMemo(() => {\n    const modalitiesMap = data.reduce((cur, datum) => {\n      const ids = uniq(datum.nodes.map(node => node.id));\n      return {\n        ...cur,\n        [datum.field]: cur[datum.field] ? uniq([...cur[datum.field], ...ids]) : ids\n      }\n    }, {});\n    return Object.entries(modalitiesMap).reduce((cur, [field, values], fieldIndex) => {\n      let counter = 0;\n      return {\n        ...cur,\n        [field]: values.reduce((m, value) => {\n          counter++;\n          return { ...m, [value]: colorSchemes[fieldIndex][counter - 1] }\n        }, {})\n      }\n    }, {})\n  }, [data]);\n\n  // dimensions are aligned with the smallest dimension of the container (width or height)\n  const smallestDimension = useMemo(() => {\n    return min([width, height])\n  }, [width, height])\n\n  // bar size and height is relative to dimensions\n  let BAR_SIZE = smallestDimension * .3;\n  const BAR_WIDTH = smallestDimension / 50;\n  // margin for double bars\n  const HORIZONTAL_MARGIN = smallestDimension * .2;\n  const textScale = scaleLinear().range([smallestDimension / 120, smallestDimension / 50]).domain([0, 1])\n  // these radiuses are used to align bars extremities on the three implicit circles they form\n  // (circle 1 : inner intersection of the 4 bars)\n  // (circle 2 : outer intersection of the external point of 4 bars)\n  // (circle 3 : outer intersection of the internal point of 4 bars)\n  const secondCircleRadius = cartesian2Polar(-smallestDimension / 2 + BAR_SIZE, -HORIZONTAL_MARGIN / 2).distance;\n  const thirdCircleRadius = cartesian2Polar(-smallestDimension / 2, -HORIZONTAL_MARGIN / 2 + BAR_WIDTH).distance;\n  const HORIZONTAL_DISPLACE = Math.abs(smallestDimension / 2 - thirdCircleRadius);\n  const VERTICAL_BAR_SIZE = smallestDimension / 2 - secondCircleRadius;\n\n  const stepScales = {\n    0: {\n      orientation: 'horizontal',\n      direction: 'top',\n      displaceX: HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 - HORIZONTAL_MARGIN / 2,\n      displaceText: HORIZONTAL_MARGIN * .2 + 5\n    },\n    1: {\n      orientation: 'vertical',\n      displaceX: smallestDimension / 2,\n      displaceY: 0,\n    },\n    2: {\n      orientation: 'horizontal',\n      displaceX: smallestDimension - BAR_SIZE - HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 - HORIZONTAL_MARGIN / 2,\n      displaceText: HORIZONTAL_MARGIN * .2 + 5,\n      direction: 'top',\n    },\n    3: {\n      orientation: 'horizontal',\n      displaceX: smallestDimension - BAR_SIZE - HORIZONTAL_DISPLACE,\n      displaceY: smallestDimension / 2 + HORIZONTAL_MARGIN / 2,\n      displaceText: -5,\n      direction: 'bottom',\n    },\n    4: {\n      orientation: 'vertical',\n      displaceX: smallestDimension / 2,\n      displaceY: smallestDimension - BAR_SIZE,\n    },\n    5: {\n      orientation: 'horizontal',\n      displaceY: smallestDimension / 2 + HORIZONTAL_MARGIN / 2,\n      displaceX: HORIZONTAL_DISPLACE,\n      displaceText: -5,\n      direction: 'bottom'\n    }\n  }\n  // const highlightedNode = highlightedFilter ? steps.find(s => s.field === highlightedFilter.key).find(node => node.id === highlightedFilter.value) : undefined;\n  const highlightedNode = highlightedFilter ? data.find(s => s.field === highlightedFilter.key).nodes.find(node => node.id === highlightedFilter.value) : undefined;\n  const highlightedNodeTotal = highlightedNode ? highlightedNode.flows.reduce((sum, f) => sum + (+f[sumBy]), 0) : 0;\n\n  // const legendX1 = smallestDimension * .36;\n  // const legendX2 = smallestDimension * .64;\n\n  const legendX1 = smallestDimension * .4;\n  const legendX2 = smallestDimension * .6;\n\n  const legendTopYInternal = smallestDimension / 2 - HORIZONTAL_MARGIN * .5 + BAR_WIDTH;\n  const legendTopYExternal = smallestDimension / 2 - HORIZONTAL_MARGIN + BAR_WIDTH;\n  const legendBottomYInternal = smallestDimension / 2 + HORIZONTAL_MARGIN * .5 + BAR_WIDTH;\n  const legendBottomYExternal = smallestDimension / 2 + HORIZONTAL_MARGIN;\n  return (\n    <>\n      <h5 ref={titleRef} className=\"visualization-title\">{title}</h5>\n      <svg \n        data-for=\"alluvial-tooltip\"\n        data-tip={tooltipContent}\n        width={width} \n        height={height} \n        className={cx(\"CircularAlluvialChart\", { 'has-filters': filters.length, 'has-highlight': highlightedFlow || highlightedFilter })}\n      >\n        <G  transform={`translate(${width * .05}, ${height * .05})scale(.9)`}>\n        <G className=\"background-marks\" transform={`translate(${align === 'left' ?  0 : width / 2 - smallestDimension / 2}, 0)`} >\n          <Line x1={0} x2={smallestDimension} y1={smallestDimension / 2} y2={smallestDimension / 2} />\n          {\n            debug ?\n              <>\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={smallestDimension * .5}\n                />\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={thirdCircleRadius}\n                />\n                <Circle\n                  cx={smallestDimension / 2}\n                  cy={smallestDimension / 2}\n                  r={secondCircleRadius}\n                />\n\n              </>\n              : null\n          }\n          <Text\n            x={smallestDimension / 2}\n            y={smallestDimension / 2 - HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(1),\n              fontWeight: (highlightedFilter && highlightedFilter.index <= 2) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 800 : undefined\n            }}\n          >\n            EXPORTS\n          </Text>\n          \n          <Text\n            x={smallestDimension / 2}\n            y={smallestDimension / 2 + HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(1),\n              fontWeight: (highlightedFilter && highlightedFilter.index > 2 ) || (highlightedFlow && highlightedFlow.stepIndex > 2) ? 800 : undefined\n            }}\n          >\n            IMPORTS\n          </Text>\n          <path\n            d={`M ${legendX1} ${legendTopYInternal} \n            Q ${legendX1} ${legendTopYExternal}, ${smallestDimension/2} ${legendTopYExternal} \n            Q ${legendX2} ${legendTopYExternal}, ${legendX2} ${legendTopYInternal}`}\n            stroke={'grey'} strokeWidth={.5}\n            fill=\"none\"\n            markerEnd=\"url(#arrowhead)\"\n            style={{\n              opacity: (highlightedFilter && highlightedFilter.index <= 2 ) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 1 : .5\n            }}\n          />\n          <Text\n            x={legendX1 - 5}\n            y={smallestDimension / 2 - HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'end',\n              opacity: (highlightedFilter && highlightedFilter.index <= 2 ) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 1 : .5\n            }}\n          >\n            {steps[0].name}\n          </Text>\n          <Text\n            x={smallestDimension / 2}\n            y={legendTopYExternal - 5}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'middle',\n              opacity: (highlightedFilter && highlightedFilter.index <= 2 ) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 1 : .5\n            }}\n          >\n            {steps[1].name}\n          </Text>\n          <Text\n            x={legendX2 + 5}\n            y={smallestDimension / 2 - HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'start',\n              opacity: (highlightedFilter && highlightedFilter.index <= 2 ) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 1 : .5\n            }}\n          >\n            {steps[2].name}\n          </Text>\n          \n          <path\n            d={`M ${legendX2} ${legendBottomYInternal} \n            Q ${legendX2} ${legendBottomYExternal}, ${smallestDimension/2} ${legendBottomYExternal} \n            Q ${legendX1} ${legendBottomYExternal}, ${legendX1} ${legendBottomYInternal}`}\n            stroke={'grey'} \n            strokeWidth={.5}\n            fill=\"none\"\n            markerEnd=\"url(#arrowhead)\"\n            style={{\n              opacity: (highlightedFilter && highlightedFilter.index <= 2 ) || (highlightedFlow && highlightedFlow.stepIndex <= 2) ? 1 : .5\n            }}\n          />\n          <Text\n            x={legendX1 - 5}\n            y={smallestDimension / 2 + HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'end',\n              opacity: (highlightedFilter && highlightedFilter.index > 2 ) || (highlightedFlow && highlightedFlow.stepIndex > 2) ? 1 : .5\n            }}\n          >\n            {steps[5].name}\n          </Text>\n          <Text\n            x={smallestDimension / 2}\n            y={legendBottomYExternal + 10}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'middle',\n              opacity: (highlightedFilter && highlightedFilter.index > 2 ) || (highlightedFlow && highlightedFlow.stepIndex > 2) ? 1 : .5\n            }}\n          >\n            {steps[4].name}\n          </Text>\n          <Text\n            x={legendX2 + 5}\n            y={smallestDimension / 2 + HORIZONTAL_MARGIN * .5 + BAR_WIDTH}\n            style={{\n              fontSize: textScale(.5),\n              fontStyle: 'italic',\n              textAnchor: 'start',\n              opacity: (highlightedFilter && highlightedFilter.index > 2 ) || (highlightedFlow && highlightedFlow.stepIndex > 2) ? 1 : .5\n            }}\n          >\n            {steps[3].name}\n          </Text>\n          \n\n          <defs>\n            <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"10\"\n            refX=\"0\" refY=\"5\" orient=\"auto\">\n              <polygon stroke=\"grey\" strokeWidth={1} fill=\"grey\" points=\"0 0, 10 5, 0 10\" />\n            </marker>\n          </defs>\n        </G>\n        <G \n          transform={`translate(${align === 'left' ? 0 : width / 2 - smallestDimension / 2}, 0)`}\n        >\n          {\n            data\n              .map((step, stepIndex) => {\n                const { orientation, direction, displaceX, displaceY: initialDisplaceY, displaceText } = stepScales[stepIndex];\n                let displaceY = initialDisplaceY;\n                let nodesSizeScale = scaleLinear().domain([0, 1]).range([0, orientation === 'vertical' ? VERTICAL_BAR_SIZE : BAR_SIZE - HORIZONTAL_DISPLACE]);\n                let displaceLabels = 0;\n                return (\n                  <G\n                    className={cx(\"step-container\", 'is-oriented-' + orientation)}\n                    key={stepIndex}\n                  >\n                    <Rect\n                      x={displaceX}\n                      y={displaceY}\n                      width={orientation === 'vertical' ? BAR_WIDTH : BAR_SIZE}\n                      height={orientation === 'vertical' ? BAR_SIZE : BAR_WIDTH}\n                      fill=\"white\"\n                      className=\"step-bar-background\"\n                    />\n                    {\n                      /** for each node display links to next */\n\n                      step.nodes\n                        .map((node, nodeIndex) => {\n                          return (\n                            <G\n                              className={cx(\"links-group\")}\n                              key={nodeIndex}\n                            >\n                              {\n                                node.flows\n                                  .filter(f => f.nextPosition)\n                                  .map((flow, linkIndex) => {\n                                    const handleClick = () => {\n                                      if (highlightedFlow && highlightedFlow._id === flow._id) {\n                                        setHighlightedFilter(undefined);\n                                        setHighlightedFlow(undefined);\n                                      }\n                                      else {\n                                        if (highlightedFilter) {\n                                          setHighlightedFilter(undefined);\n                                        }\n                                        setHighlightedFlow({...flow, stepIndex});\n                                      }\n                                      \n                                    }\n                                    const nextStepScales = stepScales[stepIndex + 1];\n                                    let nextNodesSizeScale = scaleLinear().domain([0, 1]).range([0, nextStepScales.orientation === 'vertical' ? VERTICAL_BAR_SIZE : BAR_SIZE - BAR_WIDTH / 3]);\n\n                                    let x1 = displaceX + BAR_WIDTH;\n                                    let y1 = displaceY + nodesSizeScale(flow.displacePart);\n\n                                    let x2 = nextStepScales.displaceX //+ stepXScale(stepIndex + 1);\n                                    let y2 = nextStepScales.displaceY + nextNodesSizeScale(flow.nextPosition.displacePart);\n\n                                    let x3 = nextStepScales.displaceX // + stepXScale(stepIndex + 1);\n                                    let y3 = nextStepScales.displaceY + nextNodesSizeScale(flow.nextPosition.displacePart) + nextNodesSizeScale(flow.valuePart);\n\n                                    let y4 = displaceY + nodesSizeScale(flow.displacePart) + nodesSizeScale(flow.valuePart);\n                                    let x4 = displaceX + BAR_WIDTH;\n\n                                    if (orientation === 'horizontal') {\n                                      x1 = displaceX + nodesSizeScale(flow.displacePart);;\n                                      y1 = displaceY + (direction === 'bottom' ? BAR_WIDTH : 0);\n                                      y4 = displaceY + (direction === 'bottom' ? BAR_WIDTH : 0);\n                                      x4 = displaceX + nodesSizeScale(flow.displacePart) + nodesSizeScale(flow.valuePart);\n                                    }\n                                    if (nextStepScales.orientation === 'horizontal') {\n                                      x2 = nextStepScales.displaceX + nextNodesSizeScale(flow.nextPosition.displacePart) + nextNodesSizeScale(flow.valuePart)\n                                      y2 = nextStepScales.displaceY + (nextStepScales.direction === 'bottom' ? BAR_WIDTH : 0);\n\n                                      x3 = nextStepScales.displaceX + nextNodesSizeScale(flow.nextPosition.displacePart);\n                                      y3 = nextStepScales.displaceY + (nextStepScales.direction === 'bottom' ? BAR_WIDTH : 0);\n                                    }\n                                    // @todo do this cleaner\n                                    if (stepIndex === 3) {\n                                      x2 += BAR_WIDTH;\n                                      x3 += BAR_WIDTH;\n                                      y2 += BAR_WIDTH * 2;\n                                      y3 += BAR_WIDTH * 2;\n                                    }\n                                    if (stepIndex === 4) {\n                                      x1 -= BAR_WIDTH;\n                                      x4 -= BAR_WIDTH;\n                                      y1 += BAR_WIDTH * 2;\n                                      y4 += BAR_WIDTH * 2;\n                                    }\n                                    // large arc control point 1\n                                    let controlPoint1AX = x1,\n                                      controlPoint1AY = y2,\n                                      // large arc control point 2\n                                      controlPoint1BX = x1,\n                                      controlPoint1BY = y2,\n                                      // little arc control point 1\n                                      controlPoint2AX = x4,\n                                      controlPoint2AY = y3,\n                                      // little arc control point 2\n                                      controlPoint2BX = x4,\n                                      controlPoint2BY = y3;\n                                    if (stepIndex === 1 || stepIndex === 4) {\n                                      // large arc control point 1\n                                      controlPoint1AX = x2;\n                                      controlPoint1AY = y1;\n                                      // large arc control point 2\n                                      controlPoint1BX = x2;\n                                      controlPoint1BY = y1;\n                                      // little arc control point 1\n                                      controlPoint2AX = x3;\n                                      controlPoint2AY = y4;\n                                      // little arc control point 2\n                                      controlPoint2BX = x3;\n                                      controlPoint2BY = y4;\n                                    }\n                                    if (stepIndex === 0) {\n                                      controlPoint1AY = y1 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n                                      controlPoint1BX = x2 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n\n                                      controlPoint2BY = y4 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y4 - y3);\n                                      controlPoint2AX = x3 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x3 - x4);\n\n                                    } else if (stepIndex === 1) {\n                                      controlPoint1AX = x1 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n                                      controlPoint1BY = y2 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n\n                                      controlPoint2AY = y3 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                      controlPoint2BX = x4 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                    } else if (stepIndex === 3) {\n                                      controlPoint1AY = y1 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n                                      controlPoint1BX = x2 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n\n                                      controlPoint2AX = x3 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                      controlPoint2BY = y4 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                    } else if (stepIndex === 4) {\n                                      controlPoint1AX = x1 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x2 - x1);\n                                      controlPoint1BY = y2 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y2 - y1);\n\n                                      controlPoint2BX = x4 - (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(x4 - x3);\n                                      controlPoint2AY = y3 + (4 / 3) * (1 - Math.cos(45) / Math.sin(45)) * Math.abs(y3 - y4);\n                                    }\n                                    const {flow_type, customs_office, product, partner} = flow;\n                                    const value = flow[sumBy];\n                                    const tContent = tooltips.flow[lang]({flow_type, customs_office, product, sumBy, value, partner})\n                                    return (\n                                      <G\n                                        onClick={handleClick}\n                                        className={cx(\"flow-link\", {\n                                          'is-filtered-in': filters && filters.find(({ key, value }) => flow[key] === value),\n                                          'is-highlighted': (highlightedFlow && highlightedFlow._id === flow._id) ||\n                                            (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                        })}\n                                        key={linkIndex}\n                                        data-for=\"alluvial-tooltip\"\n                                        data-tip={tContent}\n                                      >\n                                        <Path\n                                          d={`\n                                    M ${x1} ${y1} \n                                    C ${controlPoint1AX},${controlPoint1AY} ${controlPoint1BX},${controlPoint1BY} ${x2} ${y2} \n                                    L ${x3} ${y3}\n                                    C ${controlPoint2AX},${controlPoint2AY} ${controlPoint2BX},${controlPoint2BY} ${x4} ${y4} \n                                    Z\n                                    `.trim().replace(/\\n/g, ' ')}\n                                          style={{ fill: colorsPalettes ? colorsPalettes[step.field][node.id] : colorScales[step.field][node.id] }}\n                                        />\n                                        {\n                                          debug ?\n                                            <>\n                                              {/* control line for control point 1 for large arc */}\n                                              <Line\n                                                stroke={'red'}\n                                                x1={x1}\n                                                y1={y1}\n                                                x2={controlPoint1AX}\n                                                y2={controlPoint1AY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint1AX}\n                                                cy={controlPoint1AY}\n                                                r={2}\n                                                fill=\"red\"\n                                              />\n                                              {/* control line for control point 2 for large arc */}\n                                              <Line\n                                                stroke={'blue'}\n                                                x1={x2}\n                                                y1={y2}\n                                                x2={controlPoint1BX}\n                                                y2={controlPoint1BY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint1BX}\n                                                cy={controlPoint1BY}\n                                                r={2}\n                                                fill=\"blue\"\n                                              />\n                                              {/* control line for control point 1 for small arc */}\n                                              <Line\n                                                stroke={'green'}\n                                                x1={x3}\n                                                y1={y3}\n                                                x2={controlPoint2AX}\n                                                y2={controlPoint2AY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint2AX}\n                                                cy={controlPoint2AY}\n                                                r={2}\n                                                fill=\"green\"\n                                              />\n                                              {/* control line for control point 2 for small arc */}\n                                              <Line\n                                                stroke={'lightblue'}\n                                                x1={x4}\n                                                y1={y4}\n                                                x2={controlPoint2BX}\n                                                y2={controlPoint2BY}\n                                              />\n                                              <Circle\n                                                cx={controlPoint2BX}\n                                                cy={controlPoint2BY}\n                                                r={2}\n                                                fill=\"lightblue\"\n                                              />\n                                            </>\n                                            : null\n                                        }\n                                      </G>\n                                    )\n                                  })\n                              }\n                            </G>\n                          )\n                        })\n                    }\n                    {\n                      step.nodes.map((node, nodeIndex) => {\n                        const nodeHeight = nodesSizeScale(node.valuePart);\n                        const initialY = nodesSizeScale(node.displacePart);\n                        const initialWidth = BAR_WIDTH;\n                        const initialHeight = nodeHeight - 2;\n\n                        let y = displaceY + initialY;\n                        let x = displaceX;\n                        let nodeWidth = initialWidth;\n                        let actualHeight = initialHeight;\n                        if (orientation === 'horizontal') {\n                          nodeWidth = initialHeight;\n                          actualHeight = initialWidth;\n                          x = displaceX + initialY;\n                          y = displaceY;\n                        }\n                        if (stepIndex === 4) {\n                          y += BAR_WIDTH * 2;\n                        }\n                        const handleClick = () => {\n                          if (highlightedFilter && highlightedFilter.value === node.id) {\n                            setHighlightedFlow(undefined);\n                            setHighlightedFilter(undefined);\n                          }\n                          else {\n                            if (highlightedFlow) {\n                              setHighlightedFlow(undefined);\n                            }\n                            setHighlightedFilter({ key: step.field, value: node.id, index: stepIndex })\n                          }\n                        }\n                        const isHighlighted = highlightedFilter && node.id === highlightedFilter.value && stepIndex === highlightedFilter.index;\n                        let labelHighlightPart = 0;\n                        if (highlightedFilter) {\n                          labelHighlightPart = node.flows.filter(f => f[highlightedFilter.key] === highlightedFilter.value).reduce((sum, f) => sum + (+f[sumBy]), 0) / highlightedNodeTotal;\n                        } else if (filters && filters.length) {\n                          labelHighlightPart = node.flows\n                          .filter(flow => filters.find(({ key, value }) => flow[key] === value))\n                          .reduce((sum, f) => sum + (+f[sumBy]), 0) \n                          / filtersTotal;\n                        }\n                        if (labelHighlightPart > 1) {\n                          labelHighlightPart = 1;\n                        }\n                        const isFilteredIn = filters && filters.find(({ key, value }) => node.flows.find(flow => flow[key] === value))\n                        let textRotate = 0;\n                        if (stepIndex === 0 || stepIndex === 2) {\n                          textRotate = 30;\n                        } else if (stepIndex === 3 || stepIndex === 5) {\n                          textRotate = -30;\n                        }\n                        const initialLabelX = orientation === 'vertical' ? x + BAR_WIDTH * 2 : x + (centerHorizontalLabels ? nodeWidth / 2 : 0);\n                        let labelX = initialLabelX;\n                        if (orientation === 'horizontal') {\n                      \n                          const minTextWidth = 20;\n                          if (displaceHorizontalLabels && displaceLabels && labelX < displaceLabels + minTextWidth) {\n                            labelX = displaceLabels + minTextWidth;\n                          }\n                          displaceLabels = labelX;\n                        }\n                        const labelY = orientation === 'vertical' ? y + actualHeight / 2 : y + displaceText;\n                        const [labelMain, labelSecondary] = trimText(node.id, 20);\n                        const nodeHasHighlights = (highlightedFlow && node.flows.find(flow => flow._id === highlightedFlow._id)) ||\n                        (highlightedFilter && step.id === highlightedFilter.key && node.id === highlightedFilter.value);\n                        const nodeIsHighlighted = (highlightedFilter && step.field === highlightedFilter.key && node.id === highlightedFilter.value);\n                        const labelFontSize = (highlightedFilter || highlightedNode) ? labelHighlightPart > 0 ? textScale(labelHighlightPart) : textScale(node.valuePart) : textScale(1)\n                        const tContent = tooltips.node[lang](node, stepIndex);\n                        return (\n                          <G\n                            className={cx(\"step-node-container\", {\n                              'has-highlights': nodeHasHighlights,\n                              'is-filtered-in': isFilteredIn,\n                              'is-highlighted': nodeIsHighlighted,\n                            })}\n                            key={node.id}\n                            onClick={handleClick}\n                            data-for=\"alluvial-tooltip\"\n                            data-tip={tContent}\n                          >\n                            <Rect\n                              x={x}\n                              y={y}\n                              width={nodeWidth}\n                              height={actualHeight}\n                              className=\"node-level-node\"\n                            />\n                            <G\n                              transform={`\n                            translate(${labelX}, ${labelY})\n                            rotate(${textRotate})\n                          `}\n\n                              className={\n                                cx(\"node-level-label\", {\n                                  'is-filtered-in': isFilteredIn,\n                                  'is-highlighted': isHighlighted,\n                                  'is-secondary-highlighted': !isHighlighted && labelHighlightPart > 0\n                                })\n                              }\n                            >\n                              <Text\n                                style={{\n                                  fontSize: stepIndex === 0 || [2, 3, 5].find(index => index === stepIndex) ? labelFontSize * .75 : labelFontSize,\n                                  \n                                }}\n                              >\n                                {isFilteredIn || isHighlighted ? labelMain + ' ' + (labelSecondary ? labelSecondary : '') : `${labelSecondary ? labelMain + '...' : labelMain}`}\n                              </Text>\n                            </G>\n                            {\n                                displaceHorizontalLabels && initialLabelX !== labelX ?\n                                <Line\n                                  x1={x + nodeHeight / 2}\n                                  y1={stepIndex === 0 || stepIndex === 2 ? y + BAR_WIDTH : y}\n                                  x2={labelX}\n                                  y2={labelY}\n                                  className={\n                                    cx(\"label-line\", {\n                                      'is-filtered-in': isFilteredIn,\n                                      'is-highlighted': isHighlighted,\n                                      'is-secondary-highlighted': !isHighlighted && labelHighlightPart > 0\n                                    })\n                                  }\n\n                                />\n                                : null\n                            }\n                            {\n                              node.flows.map((flow, flowIndex) => {\n                                let flowX = x;\n                                let flowY = displaceY + nodesSizeScale(flow.displacePart);\n                                if (stepIndex === 4) {\n                                  flowY += BAR_WIDTH * 2;\n                                }\n                                let flowWidth = BAR_WIDTH;\n                                let flowHeight = nodesSizeScale(flow.valuePart);\n                                if (orientation === 'horizontal') {\n                                  flowWidth = nodesSizeScale(flow.valuePart);\n                                  flowHeight = BAR_WIDTH;\n                                  flowX = displaceX + nodesSizeScale(flow.displacePart);\n                                  flowY = displaceY;\n                                }\n                                return (\n                                  <Rect\n                                    key={flowIndex}\n                                    x={flowX}\n                                    y={flowY}\n                                    width={flowWidth}\n                                    height={flowHeight}\n                                    className={\n                                      cx(\"flow-level-node\", {\n                                        'is-filtered-in': filters && filters.find(({ key, value }) => flow[key] === value),\n\n                                        'is-highlighted': (highlightedFlow && highlightedFlow._id === flow._id) ||\n                                          (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                        // || (highlightedFilter && flow[highlightedFilter.key] === highlightedFilter.value)\n                                      })\n                                    }\n                                    style={{ fill: colorsPalettes ? colorsPalettes[step.field][node.id] : colorScales[step.field][node.id] }}\n                                    title={node.id}\n                                  />\n                                )\n                              })\n                            }\n                          </G>\n                        )\n                      })\n                    }\n\n                  </G>\n                )\n              })\n          }\n        </G>\n        </G>\n      </svg>\n      <ReactTooltip id=\"alluvial-tooltip\" />\n    </>\n  )\n}\n\nexport default CircularAlluvialChart;","import groupBy from 'lodash/groupBy';\n\nexport const prepareAlluvialData = (inputData, spec) => {\n  const {sumBy, steps: stepsSpec} = spec;\n  // attribute an id to each flow\n  const data = inputData.map((d, index) => ({...d, _id: index}))\n  // compute nodes for each step\n  let steps = stepsSpec.map((step, stepIndex) => {\n    const {filters} = step;\n    let stepData = data;\n    if (filters && filters.length) {\n      // filter relevant flows\n      stepData = filters.reduce((current, {key, value}) => {\n        return current.filter(datum => {\n          return datum[key] === value;\n        })\n      }, stepData);\n    }\n    // count values for spec modalities\n    let groups = groupBy(stepData, d => d[step.field]);\n    groups = Object.entries(groups).map(([id, initialFlows]) => {\n      const flows = initialFlows.map(flow => {\n        let valueAbs;\n        // if a sumBy is define with sum with its value\n        if (sumBy) {\n          let actualValue = flow[sumBy];\n          actualValue = actualValue === '' ? 0 : actualValue;\n          valueAbs = +actualValue\n        } else valueAbs = 1;\n        return {\n          ...flow,\n          valueAbs\n        }\n      })\n      const valueAbs = flows.reduce((sum, flow) => {\n        return sum + flow.valueAbs\n      }, 0);\n      return {\n        id,\n        valueAbs,\n        flows\n      }\n    });\n    // compute relative part of each modality\n    const totalValue = groups.reduce((sum, g) => sum + g.valueAbs, 0);\n    groups = groups.map(g => ({\n      ...g,\n      valuePart: g.valueAbs / totalValue,\n      flows: g.flows.map(flow => ({\n        ...flow,\n        valuePart: flow.valueAbs / totalValue\n      }))\n      .sort((a, b) => {\n        // if (a.id > b.id) {\n        const sortAscending = stepIndex >= 2 && stepIndex <= 4 ? -1 : 1;\n        if (a.valuePart < b.valuePart) {\n          return sortAscending;\n        }\n        return -sortAscending;\n      })\n    }));\n    return {\n      ...step,\n      totalValue,\n      nodes: groups.sort((a, b) => {\n        // if (a.id > b.id) {\n        const sortAscending = stepIndex >= 2 && stepIndex <= 4 ? -1 : 1;\n        if (a.valuePart < b.valuePart) {\n          return sortAscending;\n        }\n        return -sortAscending;\n      })\n    }\n  })\n\n  // compute displacements for each step\n  steps = steps.map((step, index) => {\n    let displaceAbs = 0;\n    let displacePart = 0;\n    const newNodes = step.nodes.map(node => {\n      // computing flow-level displacement\n      let localDisplaceAbs = displaceAbs;\n      let localDisplacePart = displacePart;\n      const newNode = {\n        ...node,\n        displaceAbs,\n        displacePart,\n        flows: node.flows.map(flow => {\n          const newFlow = {\n            ...flow,\n            displaceAbs: localDisplaceAbs,\n            displacePart: localDisplacePart,\n            relativeDisplaceAbs: localDisplaceAbs - displaceAbs,\n            relativeDisplacePart: localDisplacePart - displacePart\n          }\n          localDisplaceAbs += flow.valueAbs;\n          localDisplacePart += flow.valuePart;\n          return newFlow;\n        })\n      };\n      displaceAbs += node.valueAbs;\n      displacePart += node.valuePart;\n      return newNode;\n    })\n    return {\n      ...step,\n      nodes: newNodes\n    }\n  })\n\n  // compute links\n  const stepsWithLinks = steps.map((step, index) => {\n    // for each step except last one\n    if (index < steps.length - 1) {\n      const nextStep = steps[index + 1];\n      const nextKey = nextStep.field;\n      const {nodes} = step;\n      // iterate over step's to add links\n      const newNodes = nodes.map((node, nodeIndex) => {\n        \n        const {flows} = node;\n        \n        const newFlows = flows.map((flow, flowIndex) => {\n          const nextVal = flow[nextKey];\n          const nextStepGroup = nextStep.nodes.find(({id}) => id === nextVal);\n          if (nextStepGroup) {\n            \n            const nextFlow = nextStepGroup.flows.find(flow2 => {\n              return (flow._id === flow2._id)\n            })\n            if (nextFlow) {\n              const {\n                displaceAbs,\n                displacePart,\n                relativeDisplaceAbs,\n                relativeDisplacePart\n              } = nextFlow;\n              const nextPosition = {\n                displaceAbs,\n                displacePart,\n                relativeDisplaceAbs,\n                relativeDisplacePart\n              }\n              return {\n                ...flow,\n                nextPosition\n              }\n            }\n          } else {\n          }\n          return flow;\n        })\n        return {\n          ...node,\n          flows: newFlows\n        }\n      });\n      return {\n        ...step,\n        nodes: newNodes\n      }\n    }\n    return step;\n  })\n\n  return stepsWithLinks;\n}","import React from 'react';\nimport Slider/*, { SliderTooltip }*/ from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\n/**\n * Displays an interactive slider\n * @param {string} title\n * @param {number} min\n * @param {number} max\n * @param {number} value\n * @param {function} onChange\n * @returns {React.ReactElement} - React component\n */\nconst SliderRange = ({ \n  title, \n  min, \n  max, \n  value, \n  onChange \n}) => {\n  const style = { width: 300, margin: 50 };\n\n  return (\n    <div style={style}>\n      <p>{title}</p>\n      <Range\n        allowCross={false}\n        min={min}\n        max={max}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nexport default SliderRange;","import SliderRange from './SliderRange';\n\nexport default SliderRange;","import React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport { polarToCartesian } from '../../helpers/misc';\n\n\nconst AxisObject = ({\n  size,\n  MARGIN,\n  axisIndex,\n  axisRankScale,\n  axis,\n  label\n}) => {\n    const [rawX1, rawY1] = [size/2 + MARGIN / 2, size/2 + MARGIN / 2];\n    const [x2Rel, y2Rel] = polarToCartesian(size/2, axisRankScale(axisIndex))\n    const rawX2 = rawX1 + x2Rel;\n    const rawY2 = rawY1 + y2Rel;\n    let labelXDisplace = -MARGIN / 8;\n    let labelYDisplace = 15;\n    if (axisIndex > 0) {\n      labelYDisplace = -10;\n      if (axisIndex === axis.length / 2) {\n        labelYDisplace = -20;\n        labelXDisplace = -MARGIN / 6;\n      } else if (axisIndex < axis.length / 2) {\n        labelXDisplace = -MARGIN / 2;\n      } else {\n        labelXDisplace = 5;\n      }\n      // special cases\n      if (axisIndex === 3 || axisIndex === 5) {\n        labelYDisplace = -30;\n      }\n      if (axisIndex === 7) {\n        labelYDisplace = 5;\n      }\n      if (axisIndex === 1) {\n        labelYDisplace = 5;\n        labelXDisplace = -MARGIN/3;\n      }\n    }\n    const {\n      x1,\n      y1,\n      x2,\n      y2,\n      labelX,\n      labelY\n    } = useSpring({\n      x1: rawX1,\n      y1: rawY1,\n      x2: rawX2,\n      y2: rawY2,\n      labelX: rawX2 + labelXDisplace,\n      labelY: rawY2 + labelYDisplace\n    })\n    return (\n      <g key={axisIndex} className=\"AxisObject\">\n        <animated.line\n          {\n            ...{\n              x1,\n              y1,\n              x2,\n              y2,\n            }\n          }\n        />\n        <animated.foreignObject \n          x={labelX} \n          y={labelY} \n          width={MARGIN * .7} \n          height={MARGIN}\n        >\n          <div className=\"label\">\n            {label}\n          </div>\n        </animated.foreignObject>\n      </g>\n    )\n}\n\nexport default AxisObject;","import { sum } from 'lodash';\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport { fixSvgDimension, polarToCartesian } from '../../helpers/misc';\n\n/**\n * A plain animated circle\n * @param {number} cx \n * @param {number}  cy \n * @param {number} r \n * @param {object} props\n * @returns {React.ReactElement} - React component \n */\nconst Circle = ({\n  cx: inputX,\n  cy: inputY,\n  r: inputR,\n  ...props\n}) => {\n  const {\n    cx,\n    cy,\n    r,\n  } = useSpring({\n    cx: fixSvgDimension(inputX),\n    cy: fixSvgDimension(inputY),\n    r: inputR\n  })\n  return (\n    <animated.circle\n      cx={cx}\n      cy={cy}\n      r={r}\n      {...props}\n    />\n  )\n}\n\n\n/**\n * Displays a radarplot object\n * @param {string} color\n * @param {object} data - single data object\n * @param {object} axisIndexMap\n * @param {function} axisRankScale\n * @param {array<number>} center - 2D coordinates of center in pixels\n * @param {string} name\n * @param {function} radiusScale\n * @returns {React.ReactElement} - React component \n */\nconst VisObject = ({\n  color,\n  data,\n  axisIndexMap,\n  axisRankScale,\n  center,\n  name,\n  radiusScale\n}) => {\n  const points = Object.entries(axisIndexMap)\n  .map(([key, index]) => {\n    const val = data[key] || 0;\n    const r = radiusScale(val);\n    const theta = axisRankScale(+index);\n    const [xRaw, yRaw] = polarToCartesian(r, theta);\n    const x = fixSvgDimension(xRaw + center[0]);\n    const y = fixSvgDimension(yRaw + center[1]);\n    return [x, y]\n  })\n  const {joinedPoints} = useSpring({\n    joinedPoints: points.map(([x, y]) => `${x},${y}`).join(' ')\n  });\n\n  let tooltipValues = Object.entries(data);\n  const sumOfParts = sum(tooltipValues.map(v => v[1]));\n  tooltipValues = tooltipValues.map(([key, val]) => [key, val / sumOfParts])\n  return (\n    <g \n      className=\"VisObject\"\n      data-for=\"radar-tooltip\"\n      data-html={true}\n      data-place=\"left\"\n      data-tip={`\n      <p>\n      ${name === 'Tous les bureaux' ? 'Parts des destinations des voyages de 1789 initiés depuis tous les ports de la région' : 'Part des destinations pour les voyages de 1789 initiés depuis des ports rattachés au bureau des fermes de <strong>' + name + '</strong>'} :\n      </p>\n      <ol>\n        ${\n          tooltipValues\n          .sort(([_key, portionA], [_key2, portionB]) => {\n            if (portionA > portionB) {\n              return -1;\n            }\n            return 1;\n          })\n          .map(([key, portion]) => `\n            <li>\n              <strong>${key}</strong> : <strong>${(portion * 100).toFixed(2)}%</strong>\n            </li>\n          `).join('\\n')\n        }\n      </ol>\n  `}\n    >\n      <animated.polygon\n        points={joinedPoints}\n        fill={color}\n        fillOpacity={.5}\n      />\n      {\n        points\n        .map(([x, y], index) => {\n          return (\n            <Circle\n              key={index}\n              cx={x}\n              cy={y}\n              r={1}\n              fill={color}\n            />\n          )\n        })\n      }\n    </g>\n  )\n}\n\nexport default VisObject;","import RadarPlot from './RadarPlot';\n\nexport default RadarPlot;","import { scaleLinear } from 'd3-scale';\nimport React, { useEffect, useMemo } from 'react';\nimport { useSpring, animated } from 'react-spring'\nimport Tooltip from 'react-tooltip';\n\nimport AxisObject from './AxisObject';\nimport VisObject from './VisObject';\n\nimport './RadarPlot.scss';\n\n/**\n * Displays a radar plot\n * @todo this component should be genericized at some point, it was done in haste\n * @param {array} data\n * @param {number} size\n * @param {array<string>} axis - list of columns names to use as axis\n * @returns {React.ReactElement} - React component\n */\nconst RadarPlot= ({\n  data,\n  size : wholeSize = 100,\n  axis,\n}) => {\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n  const axisIndexMap = useMemo(() =>\n    axis.reduce((res, a, aIndex) => ({\n      ...res,\n      [a]: aIndex\n    }), {})\n  , [axis])\n  const MARGIN = 100;\n  const size = wholeSize - MARGIN;\n  const { visCenter, visSize } = useSpring({\n    visCenter: size/2 + MARGIN / 2,\n    visSize: size/2,\n  })\n  const axisRankScale = scaleLinear().domain([0, axis.length]).range([Math.PI / 2, Math.PI * 2.5])\n  const radiusScale = scaleLinear().domain([0, 1]).range([0, size / 2])\n  return (\n    <>\n    <svg className=\"RadarPlot\" width={wholeSize} height={wholeSize}>\n      <animated.circle\n        cx={visCenter}\n        cy={visCenter}\n        r={visSize}\n        strokeWidth={.5}\n        stroke=\"grey\"\n        fill=\"none\"\n      />\n      <g className=\"background-container\">\n        {\n          axis.map((label, axisIndex) => (\n            <AxisObject\n              key={axisIndex}\n              {\n                ...{\n                  size,\n                  MARGIN,\n                  axisIndex,\n                  axisRankScale,\n                  axis,\n                  label\n                }\n              }\n            />\n          ))\n        }\n      </g>\n      <g className=\"objects-container\">\n        {\n          data.map((datum, datumIndex) => (\n            <VisObject\n              key={datum.meta.name}\n              color={datum.meta.color}\n              name={datum.meta.name}\n              data={datum.data}\n              axisIndexMap={axisIndexMap}\n              axisRankScale={axisRankScale}\n              center={[size/2 + MARGIN / 2, size/2 + MARGIN / 2]}\n              radiusScale={radiusScale}\n            />\n          ))\n        }\n      </g>\n    </svg>\n    <Tooltip id=\"radar-tooltip\" />\n    </>\n  )\n}\n\nexport default RadarPlot;\n","/* eslint react-hooks/exhaustive-deps : 0 */\nimport { useEffect, useMemo, useState } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport _, { maxBy, uniqBy, sumBy, values } from 'lodash';\nimport cx from 'classnames';\n\nimport SliderRange from '../../components/SliderRange';\nimport RadarPlot from '../../components/RadarPlot';\n\n/**\n * Prepares radar data\n * @author Géraldine Geoffroy\n * @param {array} datas \n * @returns {array}\n */\nconst prepareTravelData = datas => {\n  return _(datas)\n    .groupBy('destination_radar')\n    .map((dest, id) => {\n      var rObj = {};\n      rObj[id] = dest.length;\n      return rObj;\n    })\n    .value();\n};\n\n/**\n * Prepares radar data\n * @author Géraldine Geoffroy\n * @param {array} datas \n * @returns {array}\n */\nconst prepareTonnageData = (datas) => {\n  return _(datas)\n    .groupBy(\"destination_radar\")\n    .map((dest, id) => {\n      var rObj = {};\n      rObj[id] = sumBy(dest, \"tonnage\");\n      return rObj;\n    })\n    .value();\n};\n\n\n/**\n * Normalizes radar values so that they get comparable\n * @author Géraldine Geoffroy\n * @param {array} datas \n * @param {object} destCaptions \n * @returns {array}\n */\nconst normalizeRadarValues = (datas, destCaptions) => {\n  // mapping on max value\n  const maxValue = maxBy(values(datas), function (o) {\n    return o;\n  });\n  // if mapping on sum rather than max\n  // const maxValue = sum(values(datas))\n  var x = scaleLinear()\n    .domain([0, maxValue])\n    .range([0, 1]);\n  for (var key in datas) {\n    if (datas.hasOwnProperty(key)) {\n      datas[key] = x(datas[key]);\n    }\n  }\n  for (var dkey in destCaptions) {\n    if (!datas.hasOwnProperty(dkey)) {\n      datas[dkey] = 0\n    }\n  }\n\n  return datas;\n};\n\n/**\n * Wraps radar vis by controlling interactions and interpreting writers-level instructions\n * @param {array} data\n * @param {number} globalWidth\n * @param {boolean} minified\n * @param {string} title\n * @param {string} bureaux\n * @param {string} navigoAgregation\n * @param {number} minTonnage\n * @param {number} maxTonnage\n * @param {array} axis\n * @param {object} colorPalette\n * @returns {React.ReactElement} - React component\n */\nconst RadarWrapper = ({\n  data: inputData,\n  globalWidth = 500,\n  minified,\n  title,\n  bureaux = \"tous\",\n  navigoAgregation = \"tonnage\",\n  minTonnage,\n  maxTonnage,\n  axis = [],\n  colorPalette\n}) => {\n  const [selectedBureaux, setSelectedBureaux] = useState(new Set(['Tous les bureaux']));\n  const [aggregationMethod, setAggregationMethod] = useState('tonnage');\n  const [tonnageFilterValues, setTonnageFilterValues] = useState([]);\n  const [datasetMaximumTonnage, setDatasetMaximumTonnage] = useState();\n  const datasetMinimumTonnage = 0;\n\n  /**\n   * DATA UPDATE\n   */\n  const data = useMemo(() => {\n    if (inputData) {\n      const newData = inputData.map(d => {\n        // remove csv empty values\n        if ((d.destination_radar !== '') & (d.ferme_bureau !== '')) {\n          return {\n            ferme_bureau: d.ferme_bureau,\n            destination_radar: d.destination_radar.replace(/['\"]+/g, ''),\n            tonnage: +d.tonnage\n          };\n        }\n        return undefined;\n      })\n        .filter(d => d)\n      // setDestCaptions(Object.assign({}, ...prepareDestCaptions(newData)))\n      let max = maxBy(newData, 'tonnage').tonnage;\n      setDatasetMaximumTonnage(max);\n      if (maxTonnage) {\n        max = +maxTonnage;\n      }\n      let min = datasetMinimumTonnage;\n      if (minTonnage) {\n        min = +minTonnage;\n      }\n      setTonnageFilterValues([min, max]);\n      return newData;\n    }\n    return inputData;\n  }, [inputData])\n\n  const bureauxList = useMemo(() => {\n    return [\n      'Tous les bureaux',\n      ...uniqBy(data, 'ferme_bureau').map(({ ferme_bureau }) => ferme_bureau)\n    ]\n  }, [data])\n\n  const filteredData = useMemo(() => {\n    const bureauxToKeep = Array.from(selectedBureaux);\n    return data\n      .filter(datum => {\n        if (bureauxToKeep.includes('Tous les bureaux')) {\n          return true;\n        }\n        return bureauxToKeep.includes(datum.ferme_bureau)\n      })\n      .filter(datum => {\n        if (aggregationMethod === 'tonnage' && tonnageFilterValues && tonnageFilterValues.length) {\n          return datum.tonnage >= tonnageFilterValues[0]\n            && datum.tonnage <= tonnageFilterValues[1]\n        }\n        return true;\n      })\n  }, [data, selectedBureaux, tonnageFilterValues])\n\n  /**\n   * UPDATE FROM PROPS\n   */\n  /** update from navigoAgregation prop */\n  useEffect(() => {\n    setAggregationMethod(navigoAgregation);\n  }, [navigoAgregation])\n\n  /** update from bureaux prop */\n  useEffect(() => {\n    if (bureaux) {\n      const cleanBureaux = (bureaux).split(',')\n      .map(b => b.trim())\n      .map(b => b === 'tous' ? 'Tous les bureaux' : b)\n    setSelectedBureaux(new Set(cleanBureaux));\n    }\n    \n  }, [bureaux])\n\n  /** update from maxTonnage prop */\n  useEffect(() => {\n    if (maxTonnage) {\n      if (tonnageFilterValues && tonnageFilterValues.length) {\n        setTonnageFilterValues([tonnageFilterValues[0], +maxTonnage]);\n      } else {\n        setTonnageFilterValues([0, +maxTonnage]);\n      }\n    }\n  }, [maxTonnage])\n\n  /** update from minTonnage prop */\n  useEffect(() => {\n    if (minTonnage) {\n      if (tonnageFilterValues && tonnageFilterValues.length) {\n        setTonnageFilterValues([+minTonnage, tonnageFilterValues[1]]);\n      } else {\n        const max = maxBy(data, 'tonnage').tonnage;\n        setTonnageFilterValues([+minTonnage, max]);\n      }\n    }\n  }, [minTonnage])\n\n\n  const radarData = useMemo(() => {\n    const bureauxObjects = Array.from(selectedBureaux);\n\n    return bureauxObjects.map((bureauName) => {\n      const relevantData = bureauName === 'Tous les bureaux' ? filteredData :\n        filteredData.filter(datum => datum.ferme_bureau === bureauName);\n      const preparedData = aggregationMethod === 'tonnage' ? prepareTonnageData(relevantData) : prepareTravelData(relevantData);\n      return {\n        data: normalizeRadarValues\n          (Object.assign({}, ...preparedData)\n          ),\n        meta: {\n          color: colorPalette[bureauName],\n          name: bureauName\n        }\n      }\n    })\n  }, [selectedBureaux, tonnageFilterValues, aggregationMethod]);\n\n  if (!data || !radarData) {\n    return null;\n  }\n  return (\n    <div className={cx(\"RadarWrapper\", { 'is-minified': minified })}>\n\n      <h5 className=\"visualization-title\">{title}</h5>\n      <RadarPlot\n        data={radarData.reverse()}\n        size={minified ? globalWidth * .4 : globalWidth * .7}\n        axis={axis}\n      />\n      <div\n        className={cx(\"controls-container\", { 'is-minified': minified })}\n      >\n        <div className=\"controls-contents\">\n          <strong>{filteredData.length}</strong> voyages agrégés par <span className=\"aggregation-controls-container\">\n\n            <select value={aggregationMethod} onChange={e => setAggregationMethod(e.target.value)}>\n              <option\n                key={'tonnage'}\n                id={'tonnage'}\n                value={'tonnage'}\n              >tonnage{aggregationMethod === 'tonnage' ? ` (navires de ${tonnageFilterValues[0]} à ${tonnageFilterValues[1]} tonneaux)` : ''}</option>\n              <option\n                key={'voyages'}\n                id={'voyages'}\n                value={'voyages'}\n              >nombre de voyages</option>\n            </select>\n            {\n              aggregationMethod && aggregationMethod === 'tonnage' &&\n              <span className=\"slider-container\">\n                <SliderRange\n                  min={datasetMinimumTonnage}\n                  max={datasetMaximumTonnage}\n                  value={tonnageFilterValues}\n                  onChange={value => [setTonnageFilterValues(value)]}\n                />\n              </span>\n            }\n          </span>\n          <p>\n            Ports de départ agrégés par bureau de ferme&nbsp;:\n          </p>\n          <ul className=\"bureaux-list\">\n            {\n              bureauxList.map((bureau, index) => {\n                const handleClick = () => {\n                  const newSelectedBureaux = new Set(selectedBureaux);\n                  if (selectedBureaux.has(bureau) && Array.from(selectedBureaux).length > 1) {\n                    newSelectedBureaux.delete(bureau);\n                  } else {\n                    newSelectedBureaux.add(bureau);\n                  }\n                  setSelectedBureaux(newSelectedBureaux);\n                }\n                return (\n                  <li\n                    key={index}\n                    onClick={handleClick}\n                    className={cx(\"bureau-item\", { 'is-active': selectedBureaux.has(bureau) })}\n                  >\n                    <span\n                      className=\"color-marker\"\n                      style={{ background: colorPalette[bureau] }}\n                    />\n                    <span className=\"bureau-label\">\n                      {bureau === 'Tous les bureaux' ? 'Ensemble des ports' : bureau}\n                    </span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RadarWrapper;","import PrincipalVisualizationPart2 from './PrincipalVisualizationPart2';\n\n\nexport default PrincipalVisualizationPart2;","import {useMemo} from 'react';\nimport cx from 'classnames';\nimport CircularAlluvialChart from \"../../components/CircularAlluvialChart/CircularAlluvialChart\";\nimport RadarWrapper from './RadarWrapper';\n\nimport colorsPalettes from '../../colorPalettes';\nimport {fixSvgDimension, formatNumber} from '../../helpers/misc';\n\nimport './PrincipalVisualizationPart2.scss';\n\n/**\n * Composes the principal visualization for part 2\n * @param {number} width\n * @param {number} height\n * @param {object} datasets\n * @param {boolean} showOnlyToflit\n * @param {boolean} atlasMode\n * @param {boolean} screenshotMode\n * @param {string} highlight - enum ['navigo', 'toflit18']\n * @param {string} lang\n * @param {string} filter - custom filters enum ['aucun', 'colonial', 'eau-de-vie', 'sel']\n * @param {string} bureaux - bureaux to highlight enum ['tous', <bureaux names separated by comas>']\n * @param {string} navigoAgregation - enum[\"tonnage\", ...]\n * @param {number} minTonnage\n * @param {number} maxTonnage\n * @returns {React.ReactElement} - React component\n */\nconst PrincipalVisualizationPart2 = ({\n  width: inputWidth, \n  height: containerHeight, \n  datasets, \n  showOnlyToflit = false, \n  atlasMode, \n  screenshotMode,\n  highlight = 'toflit18',\n  lang = 'fr',\n  filter = 'aucun',\n  bureaux=\"tous\",\n  navigoAgregation=\"tonnage\",\n  minTonnage,\n  maxTonnage,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = atlasMode ? 1200 : fixSvgDimension(containerHeight);\n  const {sumToflitBy, alluvialFilters} = useMemo(() => {\n    let sumBy = 'value';\n    let filters = [];\n    switch(filter) {\n      case \"colonial\":\n        filters = [\n          {\n            key: 'product',\n            value: `produits coloniaux`\n          },\n          {\n            key: 'partner',\n            value: `Afrique`\n          },\n          {\n            key: 'partner',\n            value: `Colonies`\n          }\n        ];\n        break;\n      case \"eau-de-vie\":\n        filters = [\n          {\n            key: 'product',\n            value: `eau-de-vie et vins divers`\n          }\n        \n        ];\n        break;\n      case \"sel\":\n        filters = [{\n          key: 'product',\n          value: `sel`\n        }];\n        sumBy = 'product_weight_kg'\n        break;\n      default:\n        break;\n    }\n\n    return {\n      sumToflitBy: sumBy,\n      alluvialFilters: filters\n    }\n  }, [filter]);\n  const toflit18titles = {\n    fr: `Échanges de la direction des fermes de La Rochelle en 1789 par bureau, produit et partenaire, dimensionnés selon leur ${sumToflitBy === 'value' ? 'valeur commerciale' : 'poids de marchandises'}`,\n    en: `Échanges de la direction des fermes de La Rochelle en 1789 par bureau, produit et partenaire, dimensionnés selon leur ${sumToflitBy === 'value' ? 'valeur commerciale' : 'poids de marchandises'}`\n  };\n  const navigoTitles = {\n    fr: `Parts de différents groupes de directions pour les navires partis de la région PASA en 1789`,\n    en: `Parts de différents groupes de direction pour les navires partis de la région PASA en 1789`\n  };\n  return (\n    <div \n      className={cx(\"PrincipalVisualizationPart2\", {'is-atlas-mode': atlasMode, 'is-screenshot-mode': screenshotMode})}\n    >\n     <div \n      className=\"circular-alluvial-container\"\n      style={{\n        width: atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? width * .6 : width * .5,\n        height: atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? height : height * .5,\n      }}\n    >\n        <CircularAlluvialChart\n          data={datasets['part_2_toflit_viz_data/part_2_toflit_viz_data.csv']}\n          width={atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? width * .6 : width * .45}\n          height={atlasMode ? window.innerWidth * .5 : highlight === 'toflit18' ? height : height * .45}\n          sumBy={sumToflitBy}\n          filters={alluvialFilters}\n          colorsPalettes={colorsPalettes}\n          lang={lang}\n          title={toflit18titles[lang]}\n          displaceHorizontalLabels={highlight === 'toflit18'}\n          centerHorizontalLabels={highlight === 'toflit18'}\n          tooltips={{\n            node: {\n              fr: ({id, ...node}, step) => {\n                if (step === 0 || step === 5) {\n                  return `En 1789, le bureau des fermes de ${id} a ${step < 3 ? 'exporté' : 'importé'} ${formatNumber(parseInt(node.valueAbs))} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'}.`;\n                } else if (step === 1 || step === 4) {\n                  return `En 1789, la direction des fermes de La Rochelle a ${step < 3 ? 'exporté' : 'importé'} ${formatNumber(parseInt(node.valueAbs))} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} de ${id}.`;\n                } else {\n                  return `En 1789, la direction des fermes de La Rochelle a ${step < 3 ? 'exporté' : 'importé'} ${formatNumber(parseInt(node.valueAbs))} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} vers le partenaire ${id}.`;\n                }\n              },\n              en: () => ({id, ...node}, step) => {\n                if (step === 0 || step === 5) {\n                  return `In 1789, the bureau des fermes of ${id} has ${step < 3 ? 'imported' : 'exported'} ${formatNumber(node[sumToflitBy], lang)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'}.`;\n                } else if (step === 1 || step === 4) {\n                  return `In 1789, the direction des fermes de La Rochelle has ${step < 3 ? 'imported' : 'exported'} ${formatNumber(parseInt(node.valueAbs), lang)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} of ${id}.`;\n                } else {\n                  return `In 1789, the direction des fermes de La Rochelle has ${step < 3 ? 'imported' : 'exported'} ${formatNumber(parseInt(node.valueAbs), lang)} ${sumToflitBy === 'value' ? 'livres tournoi' : 'kg'} to the partner ${id}.`;\n                }\n              },\n            },\n            flow: {\n              fr: ({flow_type, customs_office, product, sumBy, value, partner}) => `En 1789, le bureau des fermes de ${customs_office} a ${flow_type === 'import' ? 'importé' : 'exporté'} ${formatNumber(parseInt(value), lang)} ${sumBy === 'value' ? 'livres tournois' : 'kg'} de ${product} ${flow_type === 'import' ? 'depuis' : 'vers'} le partenaire ${partner}`,\n              en: ({flow_type, customs_office, product, sumBy, value, partner}) => `In 1789, the bureau des fermes of ${customs_office} has ${flow_type === 'import' ? 'imported' : 'exported'} ${formatNumber(parseInt(value), lang)} ${sumBy === 'value' ? 'livres tournois' : 'kg'} of ${product} ${flow_type === 'import' ? 'from' : 'to'} the partner ${partner}`,\n            }\n          }}\n          steps={[\n            {\n              field: \"customs_office\",\n              labels: {\n                fr: 'bureau des fermes',\n                en: 'customs office'\n              },\n              filters: [{key: 'flow_type', value: 'export'}],\n              name: lang === 'fr' ? 'bureau' : 'office'\n            },\n            {\n              field: \"product\",\n              labels: {\n                fr: 'type de produit',\n                en: 'product type'\n              },\n              filters: [{key: 'flow_type', value: 'export'}],\n              name: lang === 'fr' ? 'produit' : 'product'\n            },\n            {\n              field: \"partner\",\n              labels: {\n                fr: 'partenaire du commerce extérieur',\n                en: 'external trade partner'\n              },\n              filters: [{key: 'flow_type', value: 'export'}],\n              name: lang === 'fr' ? 'partenaire' : 'partner'\n            },\n            {\n              field: \"partner\",\n              labels: {\n                fr: 'partenaire du commerce extérieur',\n                en: 'external trade partner'\n              },\n              filters: [{key: 'flow_type', value: 'import'}],\n              name: lang === 'fr' ? 'partenaire' : 'partner'\n            },\n            {\n              field: \"product\",\n              labels: {\n                fr: 'type de produit',\n                en: 'product type'\n              },\n              filters: [{key: 'flow_type', value: 'import'}],\n              name: lang === 'fr' ? 'produit' : 'product'\n            },\n            {\n              field: \"customs_office\",\n              labels: {\n                fr: 'bureau des fermes',\n                en: 'customs office'\n              },\n              filters: [{key: 'flow_type', value: 'import'}],\n              name: lang === 'fr' ? 'bureau' : 'office'\n            },\n          ]}\n        />\n     </div>\n     <div \n      className=\"radar-container\"\n      style={{\n        width: atlasMode ? window.innerWidth * .5 : highlight === 'navigo' ? width * .7 : width * .4\n      }}\n    >\n      <RadarWrapper \n        data={datasets['part_2_navigo_viz_data/part_2_navigo_viz_data.csv']}\n        minified={!atlasMode && highlight !== 'navigo'}\n        globalWidth={atlasMode ? window.innerWidth * .5 : width}\n        bureaux={bureaux}\n        navigoAgregation={navigoAgregation}\n        minTonnage={minTonnage}\n        maxTonnage={maxTonnage}\n        title={navigoTitles[lang]}\n        axis={[\n          'Local',\n          'Afrique',\n          'Colonies',\n          'Grande-Bretagne',\n          'Europe',\n          'Ports francs et petites îles',\n          'France',\n          'Reste du monde',\n        ]}\n        colorPalette={colorsPalettes.customs_office}\n      />\n       {/* <img alt=\"radar-maquette\" src={`${process.env.PUBLIC_URL}/maquettes/part2-radar.jpg`} /> */}\n     </div>\n    </div>\n  )\n}\n\nexport default PrincipalVisualizationPart2;","\nimport NetworkGraphChart from \"../../components/NetworkGraphChart/GraphContainer\";\nimport BarChart from \"../../components/BarChart\";\nimport colorPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\n/**\n * Viz 3.2 wrapper\n * @param {number} width\n * @param {number} height\n * @param {object} datasets\n * @returns {React.ReactElement} - React component\n */\nconst Step2 = ({\n  width: inputWidth,\n  height: inputHeight,\n  datasets,\n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = fixSvgDimension(inputHeight);\n  return (\n    <>\n          <div className=\"graphs-container\" style={{ position: 'relative', height: height * .6 }}>\n            <div className=\"graph-container\" style={{ width: width * .6, height: height * .6, position: 'absolute' }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_La Rochelle/flows_1787_around_La Rochelle.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                spatialize\n                ratio={1.1}\n                title={'Réseau des voyages partant ou arrivant dans la région PASA en 1787 ...'}\n              />\n            </div>\n            <div className=\"graph-container\" style={{ width: width * .4, height: height * .3, position: 'absolute', right: 0, top: 0 }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_Bordeaux/flows_1787_around_Bordeaux.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                spatialize\n                title={'...comparé à celui de l\\'amirauté de Bordeaux'}\n                ratio={1}\n              />\n            </div>\n            <div className=\"graph-container\" style={{ width: width * .4, height: height * .3, position: 'absolute', right: 0, bottom: 0 }}>\n              <NetworkGraphChart\n                data={datasets['flows_1787_around_Nantes/flows_1787_around_Nantes.gexf']}\n                nodeSize={`degree`}\n                labelDensity={1}\n                nodeColor={{\n                  field: 'internal',\n                  palette: {\n                    'interne à la région': colorPalettes.generic.dark,\n                    'externe à la région': colorPalettes.generic.accent2,\n                  }\n                }}\n                title={'...comparé à celui de l\\'amirauté de Nantes'}\n                ratio={0.7}\n                spatialize\n              />\n            </div>\n          </div>\n          <div style={{\n            position: 'absolute',\n            bottom: '1rem',\n            left: 0,\n            width: width * .3,\n            height: height * .3,\n            paddingLeft: 0,\n            // marginBottom: '1rem'\n          }}\n            className=\"ColorLegend\"\n          >\n            <h5>Légende des réseaux</h5>\n            <ul className=\"color-legend\">\n              <li>\n                Taille des points représentant les ports : nombre de liens avec d'autres ports dans le réseau\n              </li>\n              <li>\n                <span style={{ background: colorPalettes.generic.dark }} className=\"color-box\"></span>\n                <span className=\"color-label\">\n                  Port interne à la région\n                </span>\n              </li>\n              <li>\n                <span style={{ background: colorPalettes.generic.accent2 }} className=\"color-box\"></span>\n                <span className=\"color-label\">\n                  Port externe à la région\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            width: width * .7,\n            height: height * .3,\n            // marginBottom: '2rem'\n          }}>\n            <BarChart\n              data={datasets['part_3_centralite_comparaison/part_3_centralite_comparaison.csv']}\n              title=\"Centralité comparée de La Rochelle par rapport à PASA et, pour ses régions côtières voisines, du port principal par rapport au réseau des voyages de son amirauté (1787)\"\n              width={width * .7}\n              height={height * .3}\n              orientation={'vertical'}\n              layout={'groups'}\n              y={{\n                field: 'port',\n                title: 'Port (dans son réseau local)',\n              }}\n              x={{\n                field: 'score',\n                title: 'Score',\n                // tickSpan: .1,\n                // tickFormat: (d, i) => parseInt(d * 100) + '%'\n              }}\n              color={{\n                field: 'metrics_type',\n                title: 'Type de métrique',\n                palette: {\n                  'PageRank': colorPalettes.generic.dark,\n                  'betweenness centrality': colorPalettes.generic.accent1,\n                }\n              }}\n              margins={{\n                bottom: 40\n              }}\n              tooltip={d => d.metrics_type === 'PageRank' ? 'Le PageRank est une mesure de centralité qui consiste à donner à chaque port un score proportionnel à la somme des pageranks des ports avec lesquels il a des voyages en commun.' : 'La centralité intermédiaire est une mesure de centralité égale au nombre de fois où un port donné est sur le chemin le plus court entre deux autres ports du réseau des voyages.'}\n            />\n          </div>\n        </>\n  )\n}\n\nexport default Step2;","import PrincipalVisualizationPart3 from './PrincipalVisualizationPart3';\n\nexport default PrincipalVisualizationPart3;","\nimport cx from 'classnames';\nimport { useState, useEffect } from 'react';\n\nimport GeographicMapChart from '../../components/GeographicMapChart/GeographicMapChart';\nimport { Step3Objects, SmallMultiples, renderTriangles } from './renderObjectsFunctions'; // pas sur que ça reste à terme\n\nimport './PrincipalVisualizationPart3.scss';\nimport colorsPalettes from '../../colorPalettes.js';\nimport Step2 from './Step2';\nimport { fixSvgDimension } from '../../helpers/misc';\n\n\n/**\n * Renders main viz #3\n * @param {object} datasets\n * @param {number} step - scrollytelling step\n * @param {number} width\n * @param {number} height\n * @param {boolean} atlasMode\n * @returns {React.ReactElement} - React component\n */\nconst PrincipalVisualizationPart3 = ({ \n  datasets, \n  step, \n  width: inputWidth, \n  height: inputHeight, \n  atlasMode \n}) => {\n  const width = fixSvgDimension(inputWidth);\n  const height = atlasMode ? window.innerHeight : fixSvgDimension(inputHeight);\n  const [currentMapTemplate, setCurrentMapTemplate] = useState('France');\n  useEffect(() => {\n    setTimeout(() => {\n      switch (step) {\n        case 1:\n          setCurrentMapTemplate('rotated Poitou');\n          break;\n        case 3:\n          setCurrentMapTemplate('Poitou zoomed');\n          break;\n        default:\n          break;\n      }\n    })\n  }, [step])\n  return (\n    <div className={cx(\"PrincipalVisualizationPart3\", { 'is-atlas-mode': atlasMode })} style={{ height: atlasMode ? undefined : height }}>\n      <div className={cx('step', { 'is-visible': step === 1 })}>\n        <GeographicMapChart\n          title={'Navigation au départ des ports de la région PASA en 1789'}\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_backgrounds/map_france_1789.geojson']\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step1_viz_data/part_3_step1_viz_data.csv'],\n              renderObjects: () => (\n                <>\n                  <rect\n                    x={0}\n                    y={0}\n                    width={width}\n                    height={height / 8}\n                    fill={`url(#radial-bg-${atlasMode})`}\n                  />\n                  <defs>\n                    <linearGradient id={`radial-bg-${atlasMode}`} gradientTransform=\"rotate(90)\">\n                      <stop offset=\"10%\" stopColor={atlasMode ? 'white' : colorsPalettes.ui.colorBackgroundBlue} />\n                      <stop offset=\"100%\" stopColor={atlasMode ? 'white' : colorsPalettes.ui.colorBackgroundBlue} stop-opacity={0} />\n                    </linearGradient>\n                  </defs>\n                </>\n              )\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step1_viz_data/part_3_step1_viz_data.csv'],\n              renderObjects: props => renderTriangles({...props, atlasMode})\n            }\n          ]}\n          projectionTemplate={atlasMode ? 'rotated Poitou' : currentMapTemplate}\n          height={atlasMode ? window.innerHeight * .9 : height}\n          width={width}\n        />\n      </div>\n      <div className={cx('step', { 'is-visible': step === 2 })} style={{ height }}>\n        <Step2\n          {\n          ...{\n            width,\n            height,\n            datasets,\n          }\n          }\n        />\n      </div>\n      <div className={cx('step', { 'is-visible': step === 3 })} height={height}>\n        <GeographicMapChart\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_backgrounds/map_france_1789.geojson'],\n              color: {\n                field: 'shortname'\n              }\n            },\n            {\n              type: 'custom',\n              data: {\n                customsOffices: datasets['part_3_step3_viz_customs_offices_data/part_3_step3_viz_customs_offices_data.csv']\n              .filter(d => \n                d.customs_region === 'La Rochelle' \n                && d.name !== 'undefined customs office'\n                && !d.name.includes('Bouin')\n                ),\n                ports: datasets['part_3_step3_viz_ports_data/part_3_step3_viz_ports_data.csv']\n              },\n              renderObjects: Step3Objects // besoin de montrer les labels des bureaux et ports => modifier la fonction\n            },\n            {\n              type: 'custom',\n              data: datasets['part_3_step3_viz_customs_offices_data/part_3_step3_viz_customs_offices_data.csv'],\n              renderObjects: SmallMultiples\n            }\n          ]}\n          projectionTemplate={atlasMode ? 'Poitou zoomed' : currentMapTemplate}\n          height={height}\n          width={width}\n          title={'Extraversion du commerce et de la navigation regroupés par bureau de fermes en 1789'}\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default PrincipalVisualizationPart3;","import cx from 'classnames';\nimport GeographicMapChart from \"../../components/GeographicMapChart/GeographicMapChart\";\nimport { useSpring, animated } from 'react-spring'\n\nimport { useEffect, useState } from 'react';\nimport './IntroBureaux.scss';\n\nimport colorPalettes from \"../../colorPalettes\";\nimport { fixSvgDimension } from '../../helpers/misc';\n\nconst BureauBackground = ({\n  projection,\n  atlasMode,\n  height,\n  datum,\n  width,\n  index,\n  radius\n}) => {\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const {transform} = useSpring({ \n    to: {\n      transform: `translate(${x}, ${y})` \n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g transform={transform}>\n      <animated.circle\n        r={radius * 2}\n        cx={0}\n        cy={0}\n        fill={`url(#bureau-${index})`}\n      />\n      <radialGradient id={`bureau-${index}`}>\n        <stop offset={atlasMode ? '0%' : \"20%\"} stopColor={colorPalettes.customs_office[datum.name]} />\n        <stop offset=\"100%\" stopColor={atlasMode ? \"rgba(255,255,255,0)\" : \"rgba(51,109,124,0)\"} />\n      </radialGradient>\n    </animated.g>\n  )\n}\n\nconst BureauLabel = ({\n  projection,\n  height,\n  datum,\n  width,\n  index,\n  radius\n}) => {\n  const [x, y] = projection([+datum.longitude, +datum.latitude]);\n  const labelOnRight = ['La Rochelle', 'Tonnay-Charente'].includes(datum.name);\n  const thatWidth = fixSvgDimension(datum.name.length * width * height * .0005);\n\n  const [isInited, setIsInited] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsInited(true)\n    })\n  }, [])\n\n  const {transform} = useSpring({ \n    to: {\n      transform: `translate(${x}, ${y})` \n    },\n    immediate: !isInited\n  });\n  return (\n    <animated.g transform={transform}>\n      <circle\n        r={2}\n        cx={0}\n        cy={0}\n        fill={'white'}\n      />\n      <foreignObject\n        x={labelOnRight ? radius / 2 : -radius / 2 - thatWidth}\n        y={-height / 70}\n        fill=\"white\"\n        width={thatWidth}\n        height={height / 20}\n        className={cx(\"bureau-label\", {\n          'is-reversed': !labelOnRight\n        })}\n      >\n        <span xmlns=\"http://www.w3.org/1999/xhtml\">\n          {datum.name}\n        </span>\n      </foreignObject>\n    </animated.g>\n  )\n}\n\nconst renderBureaux = ({ data, projection, width, height, atlasMode }) => {\n  const radius = width * height * 0.00006;\n\n  return (\n    <g className={cx(\"IntroBureaux\", {'is-atlas-mode': atlasMode})}>\n      \n      {\n        data\n          .filter(d => !isNaN(+d.latitude) && colorPalettes.customs_office[d.name])\n          .map((datum, index) => (\n            <BureauBackground\n              key={index}\n              {\n              ...{\n                projection,\n                atlasMode,\n                height,\n                datum,\n                width,\n                index,\n                radius\n              }\n              }\n            />\n          ))\n      }\n      {\n        data\n          .filter(d => !isNaN(+d.latitude) && colorPalettes.customs_office[d.name])\n          .map((datum, index) => (\n            <BureauLabel\n              key={index}\n              {\n              ...{\n                projection,\n                height,\n                datum,\n                width,\n                index,\n                radius\n              }\n              }\n            />\n          ))\n      }\n    </g>\n  )\n}\n\n/**\n * Displays a basic visualization of bureaux des fermes with fancy blurry gradient backgrounds on points\n * @param {object} datasets\n * @param {boolean} atlasMode\n * @param {object} dimensions\n * @returns {React.ReactElement} - React component\n */\nconst IntroBureaux = ({\n  datasets,\n  atlasMode,\n  dimensions\n}) => {\n  return (\n    <GeographicMapChart\n      title={'Carte des bureaux des fermes de la région PASA'}\n      layers={[\n        {\n          type: 'choropleth',\n          data: datasets['map_backgrounds/map_france_1789.geojson'],\n          reverseColors: atlasMode ? false : true,\n          // color:{\n          //   field: 'shortname',\n          //   palette: colorPalettes.provinces\n          // }\n        },\n        {\n          type: 'custom',\n          data: datasets['part_3_step3_viz_customs_offices_data/part_3_step3_viz_customs_offices_data.csv'],\n          renderObjects: props => renderBureaux({...props, atlasMode})\n        }\n      ]}\n      projectionTemplate='Poitou'\n      width={fixSvgDimension(dimensions.width)}\n      height={atlasMode ? window.innerHeight * .9 : fixSvgDimension(dimensions.height)}\n    />\n  )\n}\n\nexport default IntroBureaux;","import IntroBureaux from './IntroBureaux';\n\nexport default IntroBureaux;","import GeographicMapChart from \"../../components/GeographicMapChart/GeographicMapChart\"\nimport { fixSvgDimension } from \"../../helpers/misc\";\n\nimport './HomeportFlows.scss';\n\n/**\n * Displays the homport flows vis (multiple flow maps)\n * @param {object} datasets\n * @param {boolean} atlasMode\n * @param {object} dimensions\n * @returns {React.ReactElement} - React component\n */\nconst HomeportFlows = ({\n  datasets,\n  atlasMode,\n  dimensions,\n}) => {\n  const totalHeight = atlasMode ? window.innerHeight * .9 : fixSvgDimension(dimensions.height);\n  const hotFixedData = datasets['voyages-bateaux-homeport-larochelle-1787/voyages-bateaux-homeport-larochelle-1787.csv']\n  .map(datum => {\n    if (datum.port_dest.includes(`Côte d'Or`)) {\n      return {\n        ...datum,\n        latitude_dest: 5,\n        longitude_dest: -0.6107851\n      }\n    }\n    return datum;\n  })\n  return (\n    <div className=\"HomeportFlows\">\n      <div className=\"column\">\n        <GeographicMapChart\n          title={'Voyages des navires rattachés au port de La Rochelle en 1787'}\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_backgrounds/map_france_1789.geojson'],// currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n            },\n            {\n              type: 'flows',\n              data: hotFixedData,\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest'],\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              },\n              hideOverflowingFlows: true\n            }\n          ]}\n          projectionTemplate={'coast from Nantes to Bordeaux'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          withLegend={'bottom left'}\n          legendLayerFilter={l => l.type === 'flows'}\n          height={totalHeight}\n        />\n      </div>\n      <div className=\"column\">\n        <GeographicMapChart\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_backgrounds/map_france_1789.geojson'], // currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n            },\n            {\n              type: 'flows',\n              data: hotFixedData.filter(d => d.port_dest_category !== 'pasa'),\n              hideOverflowingFlows: true,\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest'],\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              }\n            },\n          ]}\n          projectionTemplate={'France'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          height={totalHeight / 2}\n        />\n        <GeographicMapChart\n          layers={[\n            {\n              type: 'choropleth',\n              data: datasets['map_backgrounds/map_world_1789.geojson'],// currentProjectionTemplate === 'World' ? datasets['map_world_1789.geojson'] : datasets['map_france_1789.geojson'],\n              reverseColors: atlasMode ? undefined : true,\n            },\n            {\n              type: 'flows',\n              data: hotFixedData.filter(d => d.port_dest_category === 'étranger'),\n              // hideOverflowingFlows: true,\n              size: {\n                field: 'tonnages_cumulés',\n                title: 'Flèches dimensionnées par tonnage cumulé'\n              },\n              label: {\n                fields: ['port_dep', 'port_dest'],\n              },\n              color: {\n                field: 'category',\n                title: 'Port de départ'\n              }\n            },\n          ]}\n          projectionTemplate={'World'}\n          width={fixSvgDimension(dimensions.width / 2)}\n          height={totalHeight / 2}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default HomeportFlows","\nimport { useRef, useState, useEffect, useMemo } from 'react';\nimport {nest} from 'd3-collection';\nimport Tooltip from 'react-tooltip';\nimport { uniq } from 'lodash';\nimport {\n  treemap, \n  hierarchy, \n  // treemapResquarify,\n  treemapBinary,\n} from 'd3-hierarchy';\n\nimport { fixSvgDimension, generatePalette } from '../../helpers/misc';\n\nconst formatNestResults = (input) => {\n  if (Array.isArray(input)) {\n    return {\n      name: 'root',\n      children: input.map(formatNestResults)\n    }\n  } else if (input.key && input.values) {\n    return {\n      name: input.key,\n      children: input.values.map(formatNestResults)\n    }\n  } else return input;\n}\n\n\n\n/**\n * Returns a treemap visualization\n * @param {array<object>} data - tabular data\n * @param {array} fieldsHierarchy - array of fieldnames to use to build the nested hierarchy from tabular data\n * @param {string} title\n * @param {number} width\n * @param {number} height\n * @param {object} leaf - parameters for computing leafs in the form {labelField: [string], countField: [string]}\n * @param {object} color\n * @param {function} tooltip\n * @param {object} margins\n * @returns {React.ReactElement} - React component\n */\nconst TreemapChart = ({\n  data,\n  fieldsHierarchy = [],\n  title,\n  width : initialWidth = 1000,\n  height: initialHeight = 400,\n  leaf: {\n    labelField,\n    countField,\n  },\n  color,\n  tooltip,\n  margins: inputMargins = {},\n}) => {\n  const [headersHeight, setHeadersHeight] = useState(0);\n  const [legendWidth, setLegendWidth] = useState(0);\n\n  const legendRef = useRef(null);\n  const headerRef = useRef(null);\n  \n  const width = fixSvgDimension(initialWidth - legendWidth - 10);\n  const height = fixSvgDimension(initialHeight - headersHeight);\n\n\n  const margins = {\n    left: 100,\n    top: 30,\n    bottom: 20,\n    right: 20,\n    ...inputMargins\n  };\n\n  const root = useMemo(() => {\n    const res = nest()\n    fieldsHierarchy.forEach((field) => {\n      res.key((d) => d[field])\n    })\n    \n    const visData = formatNestResults(res.entries(data))\n    const result = hierarchy(visData).sum(d => +d[countField]);\n    treemap()\n    .size([width, height])\n    .tile(treemapBinary)\n    .round(true)\n    (result);\n    return result;\n  }, [data, fieldsHierarchy, width, height, countField])\n\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      const newHeadersHeight = headerRef.current ?  headerRef.current.getBoundingClientRect().height : 0;\n      const newLegendWidth = legendRef.current ?  legendRef.current.getBoundingClientRect().width : 0;\n      setHeadersHeight(newHeadersHeight);\n      setLegendWidth(newLegendWidth);\n    })\n    // return () => {\n    //   setHeadersHeight(0);\n    //   setLegendWidth(0);\n    // };\n  }, [width, height, color, data])\n\n  useEffect(() => {\n    Tooltip.rebuild();\n  })\n  \n\n  let colorPalette;\n  if (color && color.palette) {\n    colorPalette = color.palette;\n  } else if (color) {\n    const colorModalities = uniq(data.map(d => d[color.field]));\n    const colorValues = generatePalette(color.field, colorModalities.length);\n    colorPalette = colorModalities.reduce((res, modality, index) => ({\n      ...res,\n      [modality]: colorValues[index]\n    }), {})\n  }\n\n  return (\n    <>\n      <figure style={{width: initialWidth, height: initialHeight}} className=\"TreemapChart GenericVisualization\">\n        <div ref={headerRef} className=\"row\">\n          {title ? <h5 className=\"visualization-title\" >{title}</h5> : null}\n        </div>\n        <div className=\"row vis-row\">\n          <svg className=\"chart\" width={width} height={height}>\n            {\n              root.leaves().map((datum, datumIndex) => {\n                const {x0, y0, x1, y1} = datum;\n                const rectWidth = x1 - x0;\n                const rectHeight = y1 - y0;\n                const labelText = `${datum.data[labelField]} (${datum.data[countField]})`;\n                const fontSize = rectWidth / labelText.length * 1.5\n                // const labelWidth = window.innerWidth * 0.003 * labelText.length;\n                return (\n                  <g \n                    key={`${x0}-${y0}`} \n                    transform={`translate(${x0},${y0})`}\n                    data-for=\"treemap-tooltip\"\n                    data-tip={tooltip ? tooltip(datum.data) : undefined}\n                  >\n                    <rect\n                      stroke=\"white\"\n                      x={0}\n                      y={0}\n                      width={rectWidth}\n                      height={rectHeight}\n                      fill={colorPalette[datum.data[color.field]]}\n                    />\n                    {\n                      rectHeight > fontSize ?\n                        <text\n                          x={rectWidth/2}\n                          y={rectHeight / 2 + 5}\n                          style={{\n                            fontSize\n                          }}\n                          textAnchor=\"middle\"\n                        >\n                          {labelText}\n                        </text>\n                      : null\n                    }\n                  </g>\n                )\n              })\n            }\n          </svg>\n          {\n            color ?\n              <div\n                className=\"ColorLegend\"\n                ref={legendRef}\n                style={{\n                  top: headersHeight + margins.top\n                }}\n              >\n                <h5>{color.title || 'Légende'}</h5>\n                <ul className=\"color-legend\">\n                  {\n                    Object.entries(colorPalette)\n                      .map(([modality, color]) => (\n                        <li\n                          key={modality}\n                        >\n                          <span className=\"color-box\"\n                            style={{ background: color }}\n                          />\n                          <span className=\"color-label\">\n                            {modality}\n                          </span>\n                        </li>\n                      ))\n                  }\n                </ul>\n              </div>\n              : null\n          }\n        </div>\n      </figure>\n      <Tooltip id=\"treemap-tooltip\" />\n    </>\n  )\n}\nexport default TreemapChart;","// @TODO : colorLegends et titres à mettre en place pour cartes notamment\n// @TODO : faire une passe sur visualizationList.json que j'ai rempli approximativement pour les vizs 'intro-provinces', 'intro-ports', et 'intro-bureaux'\n\nimport { useContext, useMemo } from 'react';\n\nimport Test from './Test';\nimport PrincipalVisualizationPart1 from './PrincipalVisualizationPart1';\nimport PrincipalVisualizationPart2 from './PrincipalVisualizationPart2';\nimport PrincipalVisualizationPart3 from './PrincipalVisualizationPart3';\nimport BarChart from '../components/BarChart';\nimport LineChart from '../components/LineChart';\nimport GeographicMapChart from '../components/GeographicMapChart/GeographicMapChart';\nimport colorPalettes from '../colorPalettes'\n\nimport {formatNumber} from '../helpers/misc'\nimport { DatasetsContext } from '../helpers/contexts';\n\nimport visualizationsList from '../visualizationsList';\nimport IntroBureaux from './IntroBureaux';\nimport HomeportFlows from './HomeportFlows/HomeportFlows';\nimport TreemapChart from '../components/TreemapChart/TreemapChart';\nimport { omit } from 'lodash';\n\n/**\n * This script is the bridge between visualization code, visualizations list, and visualization callers in contents.\n * It returns a visualization component depending on the provided id\n * @param {string} id\n * @param {object} dimensions\n * @param {object} - additional props\n * @returns {React.ReactElement} - React component\n */\nconst VisualizationContainer = ({ \n  id, \n  dimensions: inputDimensions, \n  ...props \n}) => {\n  const dimensions = {\n    ...inputDimensions,\n    // height: inputDimensions.height - inputDimensions.top / 2\n  }\n  const datasets = useContext(DatasetsContext);\n\n  const relevantDatasets = useMemo(() => {\n    const viz = visualizationsList.find(v => v.id === id);\n    if (viz) {\n      const datasetsIds = viz.datasets && viz.datasets.split(',').map(d => d.trim());\n      if (datasetsIds.length && datasets) {\n        return datasetsIds.reduce((cur, id) => ({\n          ...cur,\n          [id]: datasets[id]\n        }), {})\n      }\n    }\n  }, [id, datasets]);\n\n  const hasData = Object.keys(relevantDatasets || {}).length && !Object.entries(relevantDatasets).find(([id, payload]) => !payload);\n  if (!hasData) {\n    // console.log('no data for ', id, 'looked for', visualizationsList.find(v => v.id === id))\n    return null;\n  }\n  switch (id) {\n    case 'viz-principale-partie-1':\n      return <PrincipalVisualizationPart1 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'viz-principale-partie-2':\n      return <PrincipalVisualizationPart2 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'viz-principale-partie-3':\n      return <PrincipalVisualizationPart3 {...props} datasets={relevantDatasets || {}} {...dimensions} />;\n    case 'partie-1-produits-importants-pour-la-rochelle':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n              .sort((a, b) => {\n                if (+a.order > +b.order) {\n                  return 1;\n                }\n                return -1;\n              })\n              .slice(0, 20)\n          }\n          title=\"Produits dont les valeurs d'exports sont les plus importantes en 1789 : comparaison de La Rochelle à la moyenne française\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight / 2 : dimensions.height}\n          orientation={'vertical'}\n          layout={'groups'}\n          y={{\n            field: 'product',\n            title: 'produit',\n          }}\n          x={{\n            field: 'value_rel_per_direction',\n            title: 'Valeur en pourcentage',\n            tickSpan: .1,\n            tickFormat: (d, i) => parseInt(d * 100) + '%'\n          }}\n          color={{\n            field: 'entity',\n            title: 'Part des exports pour :',\n            palette: {\n              'direction des fermes de La Rochelle': '#00C4AF',\n              'France (moyenne)': '#FEA43B'\n            }\n          }}\n          margins={{\n            left: 140\n          }}\n          tooltip={d => `Le produit ${d.product} représente ${(d.value_rel_per_direction * 100).toFixed(2)}% des exports pour ${d.entity.includes('France') ? 'la France' : 'la direction des fermes de La Rochelle'}`}\n        />\n      )\n    case 'partie-1-evolution-de-la-part-des-echanges-de-la-rochelle-au-xviiie':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Évolution globale de la part des échanges de La Rochelle par rapport à l'ensemble de la France\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight / 2 : dimensions.height * .5}\n          orientation={'horizontal'}\n          layout={'stack'}\n          y={{\n            field: 'portion',\n            title: 'part du commerce fr.',\n            tickFormat: d => parseInt(d * 100) + '%'\n          }}\n          x={{\n            field: 'year',\n            title: 'année',\n            fillGaps: true,\n            tickSpan: 5,\n            // tickFormat: d => d%10 === 0 ? d : undefined\n          }}\n          color={{\n            field: 'type',\n            title: 'Type'\n          }}\n          margins={{\n            left: 140,\n            right: 20,\n            bottom: 20\n          }}\n          tooltip={d => `En ${d.year}, la direction des fermes de la Rochelle a ${d.type === 'import' ? 'importé' : 'exporté'} ${(+d.portion * 100).toFixed(2)}% des ${d.type === 'import' ? 'imports' : 'exports'} français totaux`}\n        />\n      )\n    case 'sorties-de-sel':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Ports de départ des navires transportant du sel en 1789, agrégés par tonnage cumulé\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height}\n          orientation={'vertical'}\n          y={{\n            field: 'port',\n            title: 'Port',\n            sort: {\n              field: 'tonnage',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'tonnage',\n            title: 'Tonnage cumulé',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${formatNumber(d)} tx`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.tonnage} tonneaux (et ${d.nb_pointcalls} navires) sont partis de la région PASA avec du sel comme cargaison.`}\n        />\n      )\n    case 'sorties-de-marennes':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Destination des navires partant de Marennnes en 1789, agrégées par pays et par tonnage cumulé\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height / 2}\n          orientation={'vertical'}\n          y={{\n            field: 'country',\n            title: 'Pays',\n            sort: {\n              field: 'tonnage',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'tonnage',\n            title: 'Tonnage cumulé',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${formatNumber(d)} tx`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.tonnage} tonneaux (et ${d.nb_pointcalls} navires) sont partis du port de Marennes en direction d'un port de ${d.country}.`}\n        />\n      )\n    case 'partie-1-pays-port-d-attache':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Pays du port d'attache des navires étrangers partant de la région en 1789\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height}\n          orientation={'vertical'}\n          y={{\n            field: 'country',\n            title: 'Pays du port d\\'attache',\n            sort: {\n              field: 'tonnage',\n              autoSort: true,\n              ascending: false,\n              type: 'number'\n            }\n          }}\n          x={{\n            field: 'tonnage',\n            title: 'Tonnage cumulé',\n            // tickSpan: 100,\n            tickFormat: (d, i) => `${formatNumber(d)} tx`\n          }}\n          // color={{\n          //   field: 'entity',\n          //   title: 'Part des exports pour :'\n          // }}\n          margins={{\n            right: 60\n          }}\n          tooltip={d => `En 1789, ${d.nb_pointcalls} navires soit ${d.tonnage} tonnaux sont partis de la région de La Rochelle (amirautés de La Rochelle, Sables d'Olonnes ou Marennes)`}\n        />\n      )\n    case 'partie-3-comparaison-exports-coloniaux':\n      return (\n        <BarChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n          }\n          title=\"Comparaison des exports de produits coloniaux, locaux et autres par bureaux des fermes (1789)\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight * .8 : dimensions.height * .5}\n          orientation={'vertical'}\n          layout={'grouped'}\n          y={{\n            field: 'customs_office',\n            title: 'Bureau des fermes',\n            // tickFormat: d => parseInt(d * 100) + '%'\n          }}\n          x={{\n            field: 'value',\n            title: 'valeur en livres tournoi',\n            tickSpan: 1000000,\n            domain: [0, 6000000],\n            tickFormat: d => formatNumber(d) + ' lt'\n          }}\n          color={{\n            field: 'type',\n            title: 'Type de produit'\n          }}\n          margins={{\n            left: 140,\n            right: 50,\n          }}\n          tooltip={d => `En 1789, le bureau des fermes de ${d.customs_office} a exporté à l'étrange ${d.value} livres tournois de produits de type ${d.type}`}\n        />\n      )\n    case 'intro-provinces':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Carte des provinces étudiées : Poitou, Aunis, Saintonge, Angoumois (PASA)'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_backgrounds/map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                color: {\n                  field: 'shortname',\n                  palette: colorPalettes.provinces\n                },\n                tooltip: (d) => {\n                  return d.properties.shortname\n                }\n              }\n            ]}\n            projectionTemplate='France'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n          />\n        </>\n      )\n    case 'sorties-de-marennes-avec-sel-destinations':\n      return (\n        <div>\n          <div style={{borderBottom: '2px solid #333'}}>\n            <GeographicMapChart\n              title={'Carte des navires sortis de Marennes avec du sel en 1789, dimensionnés par tonnage cumulé'}\n              layers={[\n                {\n                  type: 'choropleth',\n                  data: datasets['map_backgrounds/map_france_1789.geojson']\n                },\n                {\n                  type: 'points',\n                  data: datasets['sorties-de-marennes-avec-sel-destinations/sorties-de-marennes-avec-sel-destinations.csv'].filter(d => d.country === 'France'),\n                  // color: {\n                  //   field: 'country',\n                  //   title: 'Pays',\n                  //   palette: colorPalettes.franceAlone\n                  // },\n                  size: {\n                    field: 'tonnage',\n                    title: 'tonnage cumulé',\n                    // custom: '20'\n                  },\n                  tooltip: d => `En 1789, des navires pour un total d'approximativement ${d.rawSize} tonneaux sont partis de Marennes avec du sel pour se rendre au port de ${d.label}`,\n                  label: {\n                    field: 'port',\n                    position: 'left'\n                  },\n                  stackLabels: true\n                }\n              ]}\n              projectionTemplate='France'\n              width={dimensions.width}\n              height={props.atlasMode ? window.innerHeight * .4 : dimensions.height / 2}\n            />\n          </div>\n          <GeographicMapChart\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_backgrounds/map_world_1789.geojson']\n              },\n              {\n                type: 'points',\n                data: datasets['sorties-de-marennes-avec-sel-destinations/sorties-de-marennes-avec-sel-destinations.csv'].filter(d => d.country !== 'France'),\n                // color: {\n                //   field: 'country',\n                //   title: 'Pays',\n                //   // labelsColor: props.atlasMode ? undefined : 'white'\n                // },\n                size: {\n                  field: 'tonnage',\n                  title: 'tonnage cumulé',\n                  // custom: '20'\n                },\n                tooltip: d =>`En 1789, des navires pour un total d'approximativement ${d.rawSize} tonneaux sont partis de Marennes avec du sel pour se rendre au port de ${d.label}`,\n                label: {\n                  field: 'port',\n                },\n                stackLabels: true\n              }\n            ]}\n            projectionTemplate='World'\n            projectionConfig={{\n              scale: (props.atlasMode ? window.innerHeight : dimensions.height) * .8,\n              centerY:  45,\n              centerX: -30\n            }}\n            width={dimensions.width}\n            withLegend={'bottom right'}\n            height={props.atlasMode ? window.innerHeight * .4 : dimensions.height / 2}\n          />\n        </div>\n      )\n    case 'intro-ports':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Carte des ports de la région PASA'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_backgrounds/map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                // color:{\n                //   field: 'shortname',\n                //   palette: colorPalettes.provinces\n                // }\n              },\n              {\n                type: 'points',\n                data: datasets['ports_locations_data_intro/ports_locations_data_intro.csv'],\n                color: {\n                  field: 'province',\n                  title: 'Province du port',\n                  palette: omit(colorPalettes.provinces, ['Angoumois']),\n                  labelsColor: props.atlasMode ? undefined : 'white'\n                },\n                size: {\n                  field: 'nb_pointcalls',\n                  title: 'nombre de congés enregistrés en 1789',\n                  // custom: '20'\n                },\n                tooltip: d => `${d.rawSize} départs de navires ont été observés par le port de ${d.label} en 1789`,\n                label: {\n                  field: 'port',\n                  position: 'left'\n                },\n                stackLabels: true\n              }]}\n            projectionTemplate='Poitou'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n            withLegend={'top right'}\n\n          />\n        </>\n      )\n    case 'intro-bureaux':\n      // console.log(\"heyyyyyy bureaux map\");\n      return (\n        <IntroBureaux\n          {\n            ...{\n              datasets,\n              atlasMode: props.atlasMode,\n              dimensions\n            }\n          }\n        />\n      )\n    case 'partie-2-part-navigation-francaise':\n      return (\n        <>\n          <GeographicMapChart\n            title={'Part de la navigation française dans la région'}\n            layers={[\n              {\n                type: 'choropleth',\n                data: datasets['map_backgrounds/map_france_1789.geojson'],\n                reverseColors: props.atlasMode ? undefined : true,\n                // color:{\n                //   field: 'shortname',\n                //   palette: colorPalettes.provinces\n                // }\n              },\n              {\n                type: 'points',\n                data: datasets['part_navigation_fr/part_navigation_fr.csv'],\n                color: {\n                  field: 'tonnage_part_of_french',\n                  title: 'Part de la navigation française (par tonnage cumulé)',\n                  palette: colorPalettes.tonnageClasses,\n                  labelsColor: props.atlasMode ? undefined : 'white'\n                },\n                size: {\n                  field: 'tonnage',\n                  title: 'Tonnage sorti des ports (en miliers)',\n                  displayMetric: true,\n                  // custom: '20'\n                },\n                // tooltip: d => `${d.rawSize} mouvements de bateaux ont été enregistrés par le port de ${d.label} en 1789`,\n                label: {\n                  field: 'port',\n                  position: 'left'\n                },\n                stackLabels: true\n              }]}\n            projectionTemplate='Poitou'\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight * .9 : dimensions.height}\n            withLegend={'top right'}\n\n          />\n        </>\n      );\n    case 'partie-2-carte-direction-bateaux-de-la-rochelle':\n      // voyages-bateaux-homeport-larochelle-1787.csv\n      return (\n        <HomeportFlows\n        {\n          ...{\n            datasets,\n            atlasMode: props.atlasMode,\n            dimensions,\n          }\n        }\n        />\n      );\n    case 'partie-1-ports-dattache':\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_ports_dattache_des_navires_partant_de_la_region/hierarchie_ports_dattache_des_navires_partant_de_la_region.csv'],\n            title: 'Ports d\\'attache des navires partant de la région PASA en 1789 (dimensionnés par tonnage cumulé)',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA provenaient de navires rattachés au port de ${d.homeport} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'ports'],\n            color: {\n              field: 'category_2',\n              palette: colorPalettes.portsTreemaps\n            },\n            leaf: {\n              labelField: 'homeport',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      )\n    case 'partie-1-ports-destinations':\n      const thatPalette = {\n        ...colorPalettes.portsTreemaps\n      }\n      delete thatPalette['France (région PASA)']\n      delete thatPalette['France (hors région PASA)']\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_destinations_des_navires_partant_de_la_region/hierarchie_destinations_des_navires_partant_de_la_region.csv'],\n            title: 'Destinations des navires partant depuis la région PASA vers l\\'étranger en 1789 (dimensionnées par tonnage cumulé)',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA ont eu pour destination le port de ${d.port} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'ports'],\n            color: {\n              field: 'category_2',\n              palette: thatPalette\n            },\n            leaf: {\n              labelField: 'port',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      );\n    case 'exports-eau-de-vie-la-rochelle-longitudinal':\n      return (\n      <LineChart\n          data={\n            relevantDatasets[Object.keys(relevantDatasets)[0]]\n              // .sort((a, b) => {\n              //   if (+a.order > +b.order) {\n              //     return 1;\n              //   }\n              //   return -1;\n              // })\n              // .slice(0, 20)\n          }\n          title=\"Évolution des exports d'eau-de-vie et liqueurs par la direction de La Rochelle (ports francs non pris en compte)\"\n          width={dimensions.width}\n          height={props.atlasMode ? window.innerHeight / 2 : dimensions.height / 2}\n          orientation={'horizontal'}\n          // layout={'groups'}\n          y={{\n            field: 'value',\n            title: 'valeur',\n            tickFormat: d => formatNumber(d) + ' lt'\n          }}\n          x={{\n            field: 'year',\n            title: 'Année',\n          }}\n          margins={{\n            left: 140\n          }}\n          tooltip={d => `En ${d.year}, la direction des fermes de La Rochelle a exporté ${d.value} livres tournois d'eau-de-vie et liqueurs.`}\n        />\n      );\n    case 'exports-eau-de-vie-comparaison-directions-des-fermes':\n      return (\n        <BarChart\n            data={\n              relevantDatasets[Object.keys(relevantDatasets)[0]]\n                // .sort((a, b) => {\n                //   if (+a.order > +b.order) {\n                //     return 1;\n                //   }\n                //   return -1;\n                // })\n                // .slice(0, 20)\n            }\n            title=\"Comparaison des exports d'eau-de-vie et liqueurs par différentes directions des fermes (ports francs non pris en compte - pas de données pour Montpellier en 1770)\"\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight / 2 : dimensions.height / 2}\n            orientation={'vertical'}\n            layout={'groups'}\n            y={{\n              field: 'year',\n              title: 'année',\n              // tickFormat: d => d + ' lt'\n            }}\n            x={{\n              field: 'value',\n              title: 'valeur',\n              tickSpan: 1000000,\n              tickFormat: d => formatNumber(d) + ' lt'\n            }}\n            color={{\n              field: 'customs_region',\n              title: 'direction des fermes'\n            }}\n            margins={{\n              left: 140,\n              right: 50\n            }}\n            tooltip={d => `En ${d.year}, la direction des fermes de ${d.customs_region} a exporté ${parseInt(d.value)} livres tournois d'eau-de-vie et liqueurs.`}\n          />\n        );\n    case 'origines-exports-eau-de-vie-1789-la-rochelle':\n      return (\n        <BarChart\n            data={\n              relevantDatasets[Object.keys(relevantDatasets)[0]]\n            }\n            title=\"Origine des exports d'eau-de-vie de la direction des fermes de La Rochelle en 1789 (ports francs non pris en compte)\"\n            width={dimensions.width}\n            height={props.atlasMode ? window.innerHeight / 2 : dimensions.height / 2}\n            orientation={'vertical'}\n            layout={'groups'}\n            y={{\n              field: 'origin',\n              title: 'origine',\n              // tickFormat: d => d + ' lt'\n            }}\n            x={{\n              field: 'value',\n              title: 'valeur',\n              tickFormat: d => formatNumber(d / 100) + ' lt'\n            }}\n            color={{\n              field: 'type',\n              title: \"type d'eau de vie\",\n            }}\n            margins={{\n              left: 140,\n              right: 50\n            }}\n            tooltip={d => `La direction des fermes de La Rochelle a exporté ${parseInt(d.value)} livres tournois d'eau-de-vie et liqueurs de type \"${d.type}\", originaires de ${d.origin}.`}\n          />\n        );\n    case 'partie-1-ports-dattache-vers-etranger':\n      return (\n        <TreemapChart\n        {\n          ...{\n            data: datasets['hierarchie_destinations_des_navires_partant_de_la_region_vers_letranger/hierarchie_destinations_des_navires_partant_de_la_region_vers_letranger.csv'],\n            title: 'Ports d’attache des navires en provenance de la région PASA et en direction de l’étranger en 1789 (dimensionnées par tonnages cumulés)',\n            width: dimensions.width,\n            height: props.atlasMode ? window.innerHeight * .8 : dimensions.height * .8,\n            tooltip: d => `En 1789, ${d.tonnage} tonneaux cumulés sortis de la région PASA étaient rattachés au port de ${d.homeport} - ${d.category_2}.`,\n            fieldsHierarchy: ['country_group', 'category_1', 'category_2', 'homeport'],\n            color: {\n              field: 'category_2',\n              palette: colorPalettes.portsTreemaps\n            },\n            leaf: {\n              labelField: 'homeport',\n              countField: 'tonnage'\n            }\n          }\n        }\n        />\n      );\n    case 'test':\n    default:\n      return <Test {...props} datasets={relevantDatasets || {}} />;\n  }\n}\n\nexport default VisualizationContainer;","import {useState} from 'react';\nimport omit from 'lodash/omit';\nimport cx from 'classnames';\nimport Measure from 'react-measure'\n\nimport VisualizationContainer from '../../visualizations/index.js';\n\n/**\n * Controller preparing a given visualization for rendering (cleaning props, providing dimensions)\n * @param {object} activeVisualization - JSON data about the visualization to display\n * @param {string} lang\n * @param {boolean} atlasMode\n * @param {boolean} screenshotMode\n * @returns {React.ReactElement} - React component\n */\nconst VisualizationController = ({\n  activeVisualization,\n  lang,\n  atlasMode,\n  screenshotMode\n}) => {\n  const [dimensions, setDimensions] = useState({\n    width: 1000,\n    height: 1000\n  });\n  const visProps = activeVisualization && omit(activeVisualization, ['id', 'ref', 'visualizationId']);\n  return (\n    <Measure \n      bounds\n      onResize={contentRect => {\n        setDimensions(contentRect.bounds)\n      }}\n    >\n      {({ measureRef }) => (\n          <div ref={measureRef} className={cx(\"VisualizationController\", {'is-empty': !activeVisualization})}>\n          {/* <h2>Visualization controller</h2> */}\n          {\n            activeVisualization ?\n            <>\n              <VisualizationContainer \n                lang={lang} \n                screenshotMode={screenshotMode} \n                atlasMode={atlasMode} \n                id={atlasMode ? activeVisualization.id : activeVisualization.visualizationId} \n                {...visProps} \n                dimensions={dimensions} \n              />\n            </>\n            : null // <div>Pas de visualisation à afficher</div>\n          }\n  \n        </div>\n      )}\n    </Measure>\n  );\n}\n\nexport default VisualizationController;","import VisualizationController from './VisualizationController';\n\nexport default VisualizationController;","import { useState, useRef, useEffect } from 'react';\nimport { homepage } from '../../../package.json';\nimport copy from 'copy-to-clipboard';\nimport VisualizationController from '../VisualizationController/VisualizationController.js';\nimport Md from 'react-markdown';\n\nimport './VisualizationFocus.scss';\n\n\n/**\n * Displays an overlay with a visualization and its meta and descriptions in a 2-to-1 columns layout\n * @param {object} visualization - JSON data about the visualization to display\n * @param {string} lang\n * @param {function} onClose\n * @returns {React.ReactElement} - React component\n */\nconst VisualizationFocus = ({ \n  visualization, \n  lang, \n  onClose \n}) => {\n\n  const [copyClicked, setCopyClicked] = useState(false);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [visualization])\n  let howDone, howRead;\n  if (visualization) {\n    howDone = visualization[`comment_cest_fait_${lang}`];\n    howRead = visualization[`comment_lire_${lang}`];\n  }\n\n  const messages = {\n    howDone: {\n      fr: 'Comment les données et la visualisation ont-elles été produites ?',\n      en: 'How were the data and visualization produced ?',\n    },\n    howRead: {\n      fr: 'Comment lire la visualisation ?',\n      en: 'How to read the visualization?'\n    },\n    copyLink: {\n      fr: 'copier le lien de cette visualisation',\n      en: 'copy this visualization link'\n    },\n    linkCopied: {\n      fr: 'lien copié dans le presse-papier !',\n      en: 'link copied in the clipboard !'\n    }\n  }\n\n  const handleCopyClick = (e) => {\n    e.stopPropagation();\n    const url = `${homepage}/${lang}/atlas/${visualization.id}`;\n    setCopyClicked(true);\n    copy(url);\n    setTimeout(() => setCopyClicked(false), 5000);\n  }\n  const handleKeyUp = (e) => {\n    // on press escape\n    if (e.keyCode === 27 && visualization) {\n      onClose();\n    }\n  }\n  // handle click on wrapper (and wrapper only - not children)\n  const handleWrapperClick = e => {\n    if (e.target.className === 'visualization-wrapper') {\n      onClose();\n    }\n  }\n  return (\n    <div className={`VisualizationFocus ${visualization ? 'is-visible' : 'is-hidden'}`}>\n      <input style={{ opacity: 0, zIndex: -10, 'pointerEvents': 'none' }} type=\"text\" onKeyUp={handleKeyUp} ref={inputRef} />\n      <div onClick={onClose} className=\"lightbox-background\" />\n      {\n        visualization ?\n          <div className=\"lightbox-contents-container\">\n            <div className=\"lightbox-contents\">\n\n              <div className=\"visualization-details\">\n                <div className=\"details-header\">\n                  <h2>{visualization[`titre_${lang}`]}</h2>\n                  <button className=\"close-btn\" onClick={onClose}>\n                    ✕\n                  </button>\n                </div>\n                <div className=\"copy-link-container\">\n                  <button onClick={handleCopyClick}>{copyClicked ? messages.linkCopied[lang] : messages.copyLink[lang]}</button>\n                </div>\n                <div className=\"details-contents\">\n                  {\n                    howDone && howDone.length ?\n                      <section className=\"details-contents-section\">\n                        <h3>{messages.howDone[lang]}</h3>\n                        <Md>\n                          {howDone.replace(/<br\\/>/g, '\\n\\n')}\n                        </Md>\n                      </section>\n                      : null\n                  }\n                  {\n                    howRead && howRead.length ?\n                      <section className=\"details-contents-section\">\n                        <h3>{messages.howRead[lang]}</h3>\n                        <Md>\n                          {howRead.replace(/<br\\/>/g, '\\n\\n')}\n                        </Md>\n                      </section>\n                      : null\n                  }\n                </div>\n              </div>\n              <div className=\"visualization-wrapper\" onClick={handleWrapperClick}>\n                <VisualizationController lang={lang} atlasMode activeVisualization={visualization} />\n              </div>\n            </div>\n          </div>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default VisualizationFocus;","import VisualizationFocus from './VisualizationFocus';\n\nexport default VisualizationFocus;","import { useState, useReducer, useEffect, useRef } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport { useScrollYPosition } from 'react-use-scroll-position';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\nimport VisualizationController from '../../components/VisualizationController';\nimport VisualizationFocus from '../../components/VisualizationFocus';\nimport { VisualizationControlContext } from '../../helpers/contexts';\n\nimport { buildPageTitle } from '../../helpers/misc';\n\nimport visualizations from '../../visualizationsList';\n\nimport './ScrollyPage.scss';\n\nconst visualizationsMap = visualizations.reduce((res, visualization) => ({\n  ...res,\n  [visualization.id]: visualization\n}), {})\n\nconst CENTER_FRACTION = .6;\n\nconst ScrollyPage = ({\n  // Content,\n  ContentSync,\n  title,\n  lang,\n}) => {\n  const sectionRef = useRef(null);\n  // mobile mode: focus on text or on viz\n  const [focusOnViz, setFocusOnViz] = useState(false);\n  // whether to open the active viz in \"atlas mode\"\n  const [visualizationIsFullScreen, setVisualizationIsFullScreen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [activeVisualization, setActiveVisualization] = useState(undefined);\n  const [visualizations, setVisualizations] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  )\n  const scrollY = useScrollYPosition();\n\n  useEffect(() => {\n    if (!activeVisualization && focusOnViz) {\n      setFocusOnViz(false);\n    }\n  }, [activeVisualization])\n\n  const updateCurrentVisualization = () => {\n    if (visualizationIsFullScreen) {\n      return;\n    } \n    // const bodyPos = document.body.getBoundingClientRect();\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const y = scrollY + DISPLACE_Y;\n    const visualizationEntries = Object.entries(visualizations);\n    let found;\n    const sectionDims = sectionRef.current && sectionRef.current.getBoundingClientRect();\n    const sectionEnd = sectionDims.y + window.scrollY + sectionDims.height;\n    if (y > sectionEnd) {\n      if (activeVisualization) {\n        setActiveVisualization(undefined);\n      }\n      return;\n    }\n    // on parcourt la liste à l'envers pour récupérer\n    // la visualisation la plus haute de la page qui est\n    // au-dessus du milieu de l'écran\n    for (let index = visualizationEntries.length - 1; index >= 0; index--) {\n      const [_id, visualization] = visualizationEntries[index];/* eslint no-unused-vars : 0 */\n      const { ref } = visualization;\n      if (ref.current) {\n        const { y: initialVisY } = ref.current.getBoundingClientRect();\n        let visY = initialVisY + window.scrollY;\n        // @todo refactor this, it is dirty\n        if (ref.current.parentNode.className === 'centered-part-contents') {\n          visY += ref.current.parentNode.parentNode.getBoundingClientRect().y;\n        }\n        if (!visualization.visualizationId && scrollY + window.innerHeight * .8 > visY) {\n          found = true;\n          setActiveVisualization(undefined);\n          break;\n        } else if (y > visY) {\n          found = true;\n          if (visualization.visualizationId) {\n            setActiveVisualization(visualization);\n          } else {\n            setActiveVisualization(undefined);\n          }\n          break;\n        }\n      }\n    }\n    if (scrollY === 0 && visualizationEntries.length) {\n      setActiveVisualization(visualizationEntries[0][1])\n    }\n    else if (!found && activeVisualization) {\n      setActiveVisualization(undefined);\n    }\n  }\n\n  /**\n   * Reset scroll when changing page\n   */\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [ContentSync])\n  /**\n   * Scrollytelling management\n   */\n  useEffect(updateCurrentVisualization, [scrollY, visualizations]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  const onRegisterVisualization = (params) => {\n    const finalParams = {\n      ...params,\n      // data\n    }\n    setVisualizations({ ...visualizations, [params.id]: finalParams });\n  }\n  const onUnregisterVisualization = id => {\n    const newVis = Object.entries(visualizations).reduce((res, [thatId, payload]) => {\n      if (thatId === id) {\n        return res;\n      }\n      return {\n        ...res,\n        [thatId]: payload\n      }\n    }, {})\n    setVisualizations(newVis)\n  }\n  const onBlockClick = (id, ref) => {\n    const { y: initialVisY } = ref.current.getBoundingClientRect();\n    const visY = initialVisY + window.scrollY;\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const scrollTo = visY - DISPLACE_Y * .9;\n    window.scrollTo({\n      top: scrollTo,\n      behavior: 'smooth'\n    });\n  }\n  return (\n    <VisualizationControlContext.Provider\n      value={{\n        activeVisualization,\n        onBlockClick,\n        onRegisterVisualization,\n        onUnregisterVisualization,\n      }}\n    >\n      <Helmet>\n        <title>{buildPageTitle(title, lang)}</title>\n      </Helmet>\n      <div className=\"ScrollyPage\">\n        <section ref={sectionRef} className={cx({ 'is-focused': !focusOnViz })}>\n          <ContentSync />\n        </section>\n        <aside className={cx({ 'is-focused': focusOnViz })}>\n          <VisualizationController activeVisualization={activeVisualization} />\n          {\n            activeVisualization ?\n              <div className=\"fullscreen-viz-toggle-container\">\n                <button\n                  data-for=\"contents-tooltip\"\n                  data-tip=\"plus d'informations sur cette visualisation\"\n                  onClick={() => {\n                    setIsLoading(true);\n                    setTimeout(() => {\n                      setVisualizationIsFullScreen(true);\n                      setIsLoading(false);\n                    }, 100)\n                  }}\n                >\n                  <span>+</span>\n                </button>\n              </div>\n              : null\n          }\n        </aside>\n        <VisualizationFocus\n          visualization={visualizationIsFullScreen && activeVisualization ? visualizationsMap[activeVisualization.visualizationId] : undefined}\n          lang={lang}\n          onClose={() => {\n            setVisualizationIsFullScreen(false);\n          }}\n        />\n        <div className={cx(\"vis-focus-container\", {\n          'is-active': focusOnViz,\n          'is-visible': activeVisualization\n        })}>\n          <button \n            data-for=\"contents-tooltip\" \n            data-effect=\"solid\" \n            data-tip={lang === 'fr' ? 'voir la visualisation associée' : 'see associated visualization'} \n            onClick={() => {\n              setFocusOnViz(!focusOnViz);\n            }}>\n            <span>{'˃'}</span>\n          </button>\n        </div>\n        <ReactTooltip id=\"contents-tooltip\" />\n        <div className={cx(\"loader-indication-wrapper\", {'is-loading': isLoading})}>\n          <div className=\"loader-indication-container\">\n            Chargement de la visualisation\n          </div>\n        </div>\n      </div>\n      \n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default ScrollyPage;","import ScrollyPage from './ScrollyPage';\n\nexport default ScrollyPage;","/* eslint import/no-webpack-loader-syntax : 0 */\nimport ScrollyPage from './pages/ScrollyPage';\n\nimport Part1Fr from '!babel-loader!mdx-loader!./contents/fr/partie-1.mdx';\nimport Part1En from '!babel-loader!mdx-loader!./contents/en/part-1.mdx';\n\nimport Part2IntroFr from '!babel-loader!mdx-loader!./contents/fr/partie-2.mdx';\nimport Part2IntroEn from '!babel-loader!mdx-loader!./contents/en/part-2-intro.mdx';\n\nimport Part3Fr from '!babel-loader!mdx-loader!./contents/fr/partie-3.mdx';\nimport Part3En from '!babel-loader!mdx-loader!./contents/en/part-3.mdx';\n\nimport AboutFr from '!babel-loader!mdx-loader!./contents/fr/a-propos.mdx';\nimport AboutEn from '!babel-loader!mdx-loader!./contents/en/about.mdx';\n\nimport ReferencesFr from '!babel-loader!mdx-loader!./contents/fr/references.mdx';\nimport ReferencesEn from '!babel-loader!mdx-loader!./contents/en/references.mdx';\n\nimport TestsFr from '!babel-loader!mdx-loader!./contents/fr/tests.mdx';\nimport TestsEn from '!babel-loader!mdx-loader!./contents/en/tests.mdx';\n\nconst summary = [\n  {\n    routes: {\n      fr: 'partie-1',\n      en: 'part-1'\n    },\n    titles: {\n      fr: 'Le déclin de la région de La Rochelle suite à la perte du Canada',\n      en: 'The decline of La Rochelle region after Canada\\'s loss'\n    },\n    shortTitles: {\n      fr: 'le déclin de la région de La Rochelle',\n      en: 'the decline of La Rochelle region'\n    },\n    contents: {\n      fr: 'fr/partie-1.mdx',\n      en: 'en/part-1.mdx'\n    },\n    contentsProcessed: {\n      fr: Part1Fr,\n      en: Part1En,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'partie-2',\n      en: 'part-2'\n    },\n    titles: {\n      fr: 'Une forte spécialisation portuaire: le cas de la traite négrière, du commerce du sel et de l\\'eau-de-vie',\n      en: 'A strong portual specialization'\n    },\n    shortTitles: {\n      fr: 'une forte spécialisation portuaire',\n      en: 'a strong portual specialization'\n    },\n    contents: {\n      fr: 'fr/partie-2.mdx',\n      en: 'en/part-2.mdx'\n    },\n    contentsProcessed: {\n      fr: Part2IntroFr,\n      en: Part2IntroEn,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'partie-3',\n      en: 'part-3'\n    },\n    titles: {\n      fr: 'La Rochelle, port dominant mais pas structurant',\n      en: 'La Rochelle port, dominating but not structuring'\n    },\n    shortTitles: {\n      fr: 'un port dominant mais pas structurant',\n      en: 'a dominating but not structuring port'\n    },\n    contents: {\n      fr: 'fr/partie-3.mdx',\n      en: 'en/part-3.mdx'\n    },\n    contentsProcessed: {\n      fr: Part3Fr,\n      en: Part3En,\n    },\n    Component: ScrollyPage,\n    routeGroup: 'primary'\n  },\n  {\n    routes: {\n      fr: 'references',\n      en: 'references'\n    },\n    titles: {\n      fr: 'Références',\n      en: 'References'\n    },\n    shortTitles: {\n      fr: 'références',\n      en: 'references'\n    },\n    contents: {\n      fr: 'fr/references.mdx',\n      en: 'en/references.mdx'\n    },\n    contentsProcessed: {\n      fr: ReferencesFr,\n      en: ReferencesEn,\n    },\n    routeGroup: 'secondary',\n  },\n  {\n    routes: {\n      fr: 'a-propos',\n      en: 'about'\n    },\n    titles: {\n      fr: 'À propos',\n      en: 'About'\n    },\n    shortTitles: {\n      fr: 'à propos',\n      en: 'about'\n    },\n    contents: {\n      fr: 'fr/a-propos.mdx',\n      en: 'en/about.mdx'\n    },\n    contentsProcessed: {\n      fr: AboutFr,\n      en: AboutEn,\n    },\n    routeGroup: 'secondary',\n  },\n  {\n    routes: {\n      fr: 'tests',\n      en: 'tests'\n    },\n    titles: {\n      fr: 'Tests',\n      en: 'Tests'\n    },\n    shortTitles: {\n      fr: 'tests',\n      en: 'tests'\n    },\n    contents: {\n      fr: 'fr/tests.mdx',\n      en: 'fr/tests.mdx'\n    },\n    contentsProcessed: {\n      fr: TestsFr,\n      en: TestsEn,\n    },\n    routeGroup: 'secondary',\n    hide: process.env.NODE_ENV !== 'development'\n  }\n]\n\n\nexport default summary;","import React, { useState } from 'react';\n\nimport Measure from 'react-measure'\n\nimport BoatsIllustration from '../../components/BoatsIllustration';\n\n\nconst BoatsContainer = () => {\n  const [dimensions, setDimensions] = useState({});\n  return (\n    <Measure \n      bounds\n      onResize={contentRect => {\n        setDimensions(contentRect.bounds)\n      }}\n    >\n      {({ measureRef }) => (\n        <div ref={measureRef} className=\"boats-container\">\n          <BoatsIllustration {...{...dimensions}} />\n        </div>\n      )}\n    </Measure>\n  )\n}\n\nexport default BoatsContainer;","import { NavLink as Link } from 'react-router-dom';\n\n\nfunction HomeSummary({ lang = 'fr', summary }) {\n  const messages = {\n    intro: {\n      fr: 'découvrir les 3 chapitres de l’étude de cas',\n      en: 'discover the 3 chapters of the case study'\n    },\n    atlas: {\n      fr: 'Accéder à l\\'atlas de toutes les visualisations',\n      en: 'Access all visualizations\\' atlas'\n    },\n    chapter: {\n      fr: 'Chapitre',\n      en: 'Chapter'\n    }\n  }\n  return (\n    <div className=\"HomeSummary\">\n      <div className=\"contents\">\n      <div className=\"intro\">\n        {messages.intro[lang]}\n      </div>\n      <ul className=\"chapters-links-container\">\n        {\n          summary\n            .filter(item => item.routeGroup === 'primary')\n            .filter(item => item.routes[lang])\n            .map((item, itemIndex) => {\n              const title = item.titles[lang];\n              const route = `/${lang}/page/${item.routes[lang]}`;\n              return (\n                <li key={itemIndex}>\n                  <Link to={route}>\n                    <h4 className=\"pretitle\">{messages.chapter[lang]} {itemIndex + 1}</h4>\n                    <h3 className=\"title\">{title}</h3>\n                  </Link>\n                </li>\n              )\n            })\n        }\n      </ul>\n      <div className=\"atlas-link-container\">\n        {/* @todo this is a react-snap trick that should be cleaned some day, removing it somehow breaks the pages building process */}\n        <Link to={navigator.userAgent === \"ReactSnap\" ? '/fr/atlas' : `/${lang}/atlas`}>\n          <h3 className=\"title\">{messages.atlas[lang]}</h3>\n        </Link>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomeSummary;","\nimport React, { useRef, useState, useReducer, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport cx from 'classnames';\nimport ReactTooltip from 'react-tooltip';\n\n/* eslint-disable import/no-webpack-loader-syntax */\n\nimport metadataFr from '../../contents/fr/metadata'\nimport metadataEn from '../../contents/en/metadata'\n\nimport ContentsFr from '!babel-loader!mdx-loader!../../contents/fr/introduction.mdx'\nimport ContentsEn from '!babel-loader!mdx-loader!../../contents/en/introduction.mdx'\n\nimport { useScrollYPosition } from 'react-use-scroll-position';\n\nimport CitationWidget from '../../components/CitationWidget';\nimport VisualizationController from '../../components/VisualizationController';\nimport { VisualizationControlContext } from '../../helpers/contexts';\nimport summary from '../../summary';\n\nimport BoatsContainer from './BoatsContainer';\nimport HomeSummary from './HomeSummary';\n\nimport './Home.scss';\n\nconst CENTER_FRACTION = 0.5;\n// const CENTER_FRACTION = .6;\n\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nfunction Home({ match: {\n  params: { lang = 'fr' }\n} }) {\n  const introRef = useRef(null);\n  const [focusOnViz, setFocusOnViz] = useState(false);\n  const [inVis, setInVis] = useState(false);\n  const currentMetadata = metadata[lang] || metadataFr;\n  const title = currentMetadata.title;\n  const titleHTML = currentMetadata.titleHTML;\n  const subtitle = currentMetadata.subtitle\n  const [activeVisualization, setActiveVisualization] = useState(undefined);\n  const [visualizations, setVisualizations] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  )\n  const scrollY = useScrollYPosition();\n\n  const updateCurrentVisualization = () => {\n    // const bodyPos = document.body.getBoundingClientRect();\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const visualizationEntries = Object.entries(visualizations);\n    let found;\n    let newActiveVisualization;\n    // on parcourt la liste à l'envers pour récupérer\n    // la visualisation la plus haute de la page qui est\n    // au-dessus du milieu de l'écran\n    let firstOneY = Infinity;\n    for (let index = visualizationEntries.length - 1; index >= 0; index--) {\n      const y = index === 0 ? scrollY + window.innerHeight * .2 : scrollY + DISPLACE_Y;\n      const [_id, visualization] = visualizationEntries[index];/* eslint no-unused-vars : 0 */\n      const { ref } = visualization;\n      if (ref.current) {\n        const { y: initialVisY } = ref.current.getBoundingClientRect();\n        let visY = initialVisY + window.scrollY;\n        // @todo refactor this, it is dirty\n        if (ref.current.parentNode.className === 'centered-part-contents') {\n          visY += ref.current.parentNode.parentNode.getBoundingClientRect().y;\n        }\n        if (visY < firstOneY) {\n          firstOneY = visY;\n        }\n        if (index === 0 && y < visY) {\n          found = true;\n          newActiveVisualization = visualization;\n        } /*else if (!visualization.visualizationId && scrollY + window.innerHeight * .8 > visY) {\n          found = true;\n          newActiveVisualization = undefined;\n          break;\n        }*/ else if (y > visY) {\n          found = true;\n          if (visualization.visualizationId) {\n            newActiveVisualization = visualization;\n          } else {\n            newActiveVisualization = undefined;\n          }\n          break;\n        }\n      } else {\n        // console.error('cant find ref for', visualizationEntries[index])\n      }\n    }\n\n    if (scrollY > window.innerHeight * .9 && !inVis) {\n      setInVis(true);\n    } else if (scrollY < window.innerHeight * .9 && inVis) {\n      setInVis(false);\n    }\n\n    if (!found && scrollY < firstOneY && visualizationEntries.length) {\n      newActiveVisualization = visualizationEntries[0][1]\n    }\n    if (!found && activeVisualization) {\n      newActiveVisualization = undefined;\n    }\n    if (activeVisualization !== !newActiveVisualization) {\n      setActiveVisualization(newActiveVisualization)\n    } else if ((!activeVisualization && newActiveVisualization) || activeVisualization.id !== newActiveVisualization.id) {\n      setActiveVisualization(newActiveVisualization)\n    }\n  }\n\n  /**\n   * Scroll to top on mount\n   */\n   useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n  /**\n   * Scrollytelling management\n   */\n  useEffect(updateCurrentVisualization, [scrollY, visualizations]) /* eslint react-hooks/exhaustive-deps : 0 */\n\n  useEffect(() => {\n    if (!activeVisualization && focusOnViz) {\n      setFocusOnViz(false);\n    }\n  }, [activeVisualization])\n\n  const onRegisterVisualization = (params) => {\n    const finalParams = {\n      ...params,\n      // data\n    }\n    setVisualizations({ ...visualizations, [params.id]: finalParams });\n  }\n  const onUnregisterVisualization = id => {\n    const newVis = Object.entries(visualizations).reduce((res, [thatId, payload]) => {\n      if (thatId === id) {\n        return res;\n      }\n      return {\n        ...res,\n        [thatId]: payload\n      }\n    }, {})\n    setVisualizations(newVis)\n  }\n  const onBlockClick = (id, ref) => {\n    const { y: initialVisY } = ref.current.getBoundingClientRect();\n    const visY = initialVisY + window.scrollY;\n    const DISPLACE_Y = window.innerHeight * CENTER_FRACTION;\n    const scrollTo = visY - DISPLACE_Y * .9;\n    window.scrollTo({\n      top: scrollTo,\n      behavior: 'smooth'\n    });\n  }\n  const onClickOnStart = () => {\n    if (introRef && introRef.current) {\n      const intro = introRef.current;\n      const top = intro.offsetTop - (window.innerHeight / 15);\n      window.scrollTo({\n        top,\n        behavior: 'smooth'\n      })\n    }\n    \n  }\n  return (\n    <div className=\"Home\">\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div className=\"header\">\n        <div className=\"titles-container\">\n          <h1 dangerouslySetInnerHTML={{__html: titleHTML}}/>\n          <h2>{subtitle}</h2>\n          <CitationWidget\n            lang={lang}\n          />\n          <button onClick={onClickOnStart} className=\"go-to-start\">\n            <span>⌄</span>\n          </button>\n        </div>\n        \n        <BoatsContainer />\n      </div>\n      <main ref={introRef} className=\"intro-container\">\n        <VisualizationControlContext.Provider\n          value={{\n            activeVisualization,\n            onBlockClick,\n            onRegisterVisualization,\n            onUnregisterVisualization,\n          }}\n        >\n          <div className=\"Contents\">\n            \n            <section className={cx({'is-focused': !focusOnViz})}>\n              {lang === 'fr' ? <ContentsFr /> : <ContentsEn />}\n            </section>\n            <aside className={cx({'is-focused': focusOnViz, 'is-fixed': inVis})}>\n              <VisualizationController activeVisualization={activeVisualization} />\n            </aside>\n            \n          </div>\n        </VisualizationControlContext.Provider>\n        <HomeSummary lang={lang} summary={summary} />\n        <div className={cx(\"vis-focus-container\", {\n          'is-active': focusOnViz,\n          'is-visible': activeVisualization\n          })}>\n          <button data-for=\"contents-tooltip\" data-effect=\"solid\" data-tip={lang === 'fr' ? 'voir la visualisation associée' : 'see associated visualization'} onClick={() => setFocusOnViz(!focusOnViz)}>\n            <span>{'˃'}</span>\n          </button>\n        </div>\n      </main>\n      <ReactTooltip id=\"contents-tooltip\" />\n    </div>\n  )\n}\n\nexport default Home;","import Home from './Home';\nexport default Home;\n\n// import Carte from './Ports de la région Poitou, Aunis, Saintonge en 1789.svg'\n// export Carte;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\nimport cx from 'classnames';\n\n// charger le json de la liste des visualisations de l'atlas\nimport visualizations from '../../visualizationsList';\nimport VisualizationFocus from '../../components/VisualizationFocus/VisualizationFocus';\n\nimport {buildPageTitle} from '../../helpers/misc';\n\nimport './Atlas.scss';\n\n\nconst visualizationsMap = visualizations.reduce((res, visualization) => ({\n  ...res,\n  [visualization.id]: visualization\n}), {})\n\nfunction Atlas({\n  match: {\n    params: {\n      visualizationId,\n      lang = 'fr'\n    }\n  }\n}) {\n  /**\n   * Scroll to top on mount\n   */\n   useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const shownVisualization = visualizationId && visualizationsMap[visualizationId];\n  return (\n    <div className={cx(\"Atlas secondary-page\", {'has-focus': shownVisualization})}>\n      <Helmet>\n        <title>{buildPageTitle('Atlas', lang)}</title>\n      </Helmet>\n      <div className=\"centered-contents\">\n        <h1>{lang === 'fr' ? 'Atlas des visualisations' : 'Visualizations atlas'}</h1>\n        <ul className=\"visualizations-list\">\n          {\n            visualizations.map((visualization, visualizationIndex) => {\n              const handleClick = () => {\n                setIsLoading(true);\n                setTimeout(() => {\n                  history.push({\n                    pathname: `/${lang}/atlas/${visualization.id}`\n                  });\n                  setIsLoading(false);\n                }, 100)\n              }\n              return (\n                <li\n                  className={cx('visualization-item', { 'is-active': shownVisualization && shownVisualization.id === visualization.id })}\n                  onClick={handleClick}\n                  key={visualizationIndex}\n                >\n                  <figure className=\"thumbnail-container\">\n                      <img\n                        src={`${process.env.PUBLIC_URL}/thumbnails/${lang}/${visualization.id}.png`}\n                        alt={visualization[`titre_${lang}`]}\n                      />\n                  </figure>\n                  <h5 className=\"visualization-title\">\n                    {visualization[`titre_${lang}`]}\n                  </h5>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n        <VisualizationFocus \n          visualization={shownVisualization} \n          lang={lang}\n          onClose={() => {\n            history.push({\n              pathname: `/${lang}/atlas/`\n            })\n          }}\n        />\n        <div className={cx(\"loader-indication-wrapper\", {'is-loading': isLoading})}>\n          <div className=\"loader-indication-container\">\n            {lang === 'fr' ? 'Chargement de la visualisation' : 'Loading visualization'}\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Atlas;","import Atlas from './Atlas';\n\nexport default Atlas;","import StandaloneVisualization from './StandaloneVisualization';\n\nexport default StandaloneVisualization;","import VisualizationController from '../../components/VisualizationController/VisualizationController.js';\n\nimport './StandaloneVisualization';\n\nimport visualizationsList from '../../visualizationsList.json';\nconst StandaloneVisualization = ({\n  id,\n  lang\n}) => {\n  const visualization = visualizationsList.find(({id: thatId}) => thatId === id)\n  return (\n    <div className=\"StandaloneVisualization\">\n      <VisualizationController lang={lang} atlasMode screenshotMode activeVisualization={visualization} />\n    </div>\n  )\n}\n\nexport default StandaloneVisualization;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import { Suspense } from 'react';\nimport { Helmet } from \"react-helmet\";\n\nimport { buildPageTitle } from '../../helpers/misc';\n\nimport './PlainPage.scss';\n\nconst PlainPage = ({\n  Content,\n  ContentSync,\n  title,\n  lang = 'fr',\n}) => {\n  return (\n    <div className=\"PlainPage secondary-page\">\n      <Helmet>\n        <title>{buildPageTitle(title, lang)}</title>\n      </Helmet>\n      <div className=\"centered-contents\">\n        {\n          ContentSync ?\n            <ContentSync />\n            :\n            <Suspense fallback={<div>Chargement</div>}>\n              <Content />\n            </Suspense>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default PlainPage;","import React, { useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { NavLink as Link } from 'react-router-dom';\nimport { useScrollYPosition } from 'react-use-scroll-position';\nimport cx from 'classnames';\n\nimport metadataFr from '../../contents/fr/metadata'\nimport metadataEn from '../../contents/en/metadata'\n\nimport { scaleLinear } from 'd3-scale';\n\nimport colorPalettes from '../../colorPalettes'\nimport { useDebounce } from '../../helpers/hooks';\n\nconst metadata = {\n  fr: metadataFr,\n  en: metadataEn\n}\n\nconst {\n  ui: {\n    colorText,\n    // colorAccent,\n    colorAccentBackground,\n    colorBackgroundBlue,\n    colorBackground\n  }\n} = colorPalettes;\n\n/**\n * Displays header nav handling active link and background color change\n * @param {array<object>} routes\n * @param {function} onLangChange\n * @returns {React.ReactElement} - React component \n */\nconst HeaderNav = ({\n  routes,\n  onLangChange,\n}) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const location = useLocation();\n  const pageType = useMemo(() => {\n    if (location.pathname.includes('/page/part')) {\n      return 'page';\n    } else if (location.pathname === '/fr/' || location.pathname === '/en/') {\n      return 'home';\n    }\n    else return 'other-page';\n  }, [location])\n  const paramsLang = location && location.match && location.match.params && location.match.params.lang;\n  let lang = 'fr';\n  if (paramsLang) {\n    lang = paramsLang;\n  } else if (location.pathname.includes('/en/')) {\n    lang = 'en';\n  }\n  \n  const liveScrollY = useScrollYPosition();\n  const scrollY = useDebounce(liveScrollY, 50)\n  const pageColorScale = scaleLinear().range([colorBackgroundBlue, colorBackground]).domain([0, 1])\n  const { fontColor, backgroundColor } = useMemo(() => {\n    const screenHeight = window.innerHeight;\n    switch (pageType) {\n      case 'page':\n        if (scrollY < screenHeight) {\n          return {\n            fontColor: colorText,\n            backgroundColor: pageColorScale((scrollY / (screenHeight / 2))),\n          }\n        } else {\n          return {\n            backgroundColor: colorBackground\n          }\n        }\n      case 'home':\n        if (scrollY < screenHeight * .8) {\n          return {\n            fontColor: colorText,\n            backgroundColor: colorBackgroundBlue,\n          }\n        } else {\n          return {\n            fontColor: 'white',\n            backgroundColor: colorAccentBackground\n          }\n        }\n\n      case 'other-page':\n      default:\n        return {\n          fontColor: undefined,\n          backgroundColor: colorBackground\n        }\n\n    }\n\n  }, [scrollY, pageColorScale, pageType])\n\n  const title = metadata[lang].titleHTML\n\n  return (\n    <>\n      <nav\n        style={{\n          background: backgroundColor,\n          color: fontColor\n        }}\n        className=\"nav nav-large\"\n      >\n        <ul className=\"primary-nav-container\">\n          <li className=\"navitem-container\">\n            <Link exact to={`/${lang}/`}>\n              {\n                fontColor === 'white' ?\n                  <img src={`${process.env.PUBLIC_URL}/rose_des_vents_white.svg`} alt=\"logo\" />\n                  :\n                  <img src={`${process.env.PUBLIC_URL}/rose_des_vents.svg`} alt=\"logo\" />\n              }\n            </Link>\n          </li>\n          {\n            routes\n              .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'primary' && !hide)\n              .map(({ shortTitles, routes: inputRoute }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {shortTitles[lang]}\n                    </Link>\n                  </li>\n                )\n              })\n          }\n        </ul>\n        <ul className=\"secondary-nav-container\">\n          <li className=\"navitem-container\">\n            <Link to={`/${lang}/atlas`}>\n              {lang === 'fr' ? 'atlas des visualisations' : 'visualizations atlas'}\n            </Link>\n          </li>\n          {\n            routes\n              .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'secondary' && !hide)\n              .map(({ shortTitles, routes: inputRoute }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {shortTitles[lang]}\n                    </Link>\n                  </li>\n                )\n              })\n          }\n\n          {\n            // @todo delete this ternary when english contents are ready\n            process.env.NODE_ENV === 'development' ?\n              <>\n                <li className=\"navitem-container lang-toggle\">\n                  <button\n                    className={lang === 'fr' ? 'is-active' : ''}\n                    onClick={() => onLangChange('fr')}\n                  >fr</button>\n                </li>\n                <li className=\"navitem-container lang-toggle\">\n                  <button\n                    className={lang === 'en' ? 'is-active' : ''}\n                    onClick={() => onLangChange('en')}\n                  >en</button>\n                </li>\n              </>\n              : null\n          }\n        </ul>\n      </nav>\n      <nav\n        style={{\n          // background: backgroundColor,\n          // color: fontColor\n        }}\n        className={cx(\"nav nav-drawer\", { 'is-open': drawerIsOpen })}\n      >\n        <div className=\"drawer-background\" onClick={() => setDrawerIsOpen(!drawerIsOpen)} />\n        <div className=\"drawer-body\">\n          <ul className=\"primary-nav-container\">\n            <li onClick={() => setDrawerIsOpen(false)} className=\"navitem-container\">\n              <Link exact to={`/${lang}/`}>\n                {lang === 'fr' ? 'accueil' : 'home'}\n              </Link>\n            </li>\n            {\n              routes\n                .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'primary' && !hide)\n                .map(({ shortTitles, routes: inputRoute }, index) => {\n                  const route = `/${lang}/page/${inputRoute[lang]}`\n                  return (\n                    <li onClick={() => setDrawerIsOpen(false)} key={index} className=\"navitem-container\">\n                      <Link to={route}>\n                        {shortTitles[lang]}\n                      </Link>\n                    </li>\n                  )\n                })\n            }\n          </ul>\n          <ul className=\"secondary-nav-container\">\n            {\n              routes\n                .filter(({ routeGroup = 'primary', hide }) => routeGroup === 'secondary' && !hide)\n                .map(({ shortTitles, routes: inputRoute }, index) => {\n                  const route = `/${lang}/page/${inputRoute[lang]}`\n                  return (\n                    <li onClick={() => setDrawerIsOpen(false)} key={index} className=\"navitem-container\">\n                      <Link to={route}>\n                        {shortTitles[lang]}\n                      </Link>\n                    </li>\n                  )\n                })\n            }\n            <li onClick={() => setDrawerIsOpen(false)} className=\"navitem-container\">\n              <Link to={`/${lang}/atlas`}>\n                {lang === 'fr' ? 'atlas des visualisations' : 'visualizations atlas'}\n              </Link>\n            </li>\n            {\n              // @todo delete this ternary when english contents are ready\n              process.env.NODE_ENV === 'development' ?\n                <li className=\"navitem-container lang-toggle\">\n                  <ul className=\"lang-toggle-container\">\n                    <li>\n                      <button\n                        className={lang === 'fr' ? 'is-active' : ''}\n                        onClick={() => onLangChange('fr')}\n                      >fr</button>\n                    </li>\n                    <li>\n                      <button\n                        className={lang === 'en' ? 'is-active' : ''}\n                        onClick={() => onLangChange('en')}\n                      >en</button>\n                    </li>\n                  </ul>\n\n                </li>\n                :\n                null\n            }\n\n\n          </ul>\n        </div>\n        <div className=\"drawer-header\">\n          <button onClick={() => setDrawerIsOpen(!drawerIsOpen)} className={cx('drawer-button')}>\n            {\n              fontColor === 'white' || drawerIsOpen ?\n                <img style={{ background: drawerIsOpen ? undefined : backgroundColor }} src={`${process.env.PUBLIC_URL}/rose_des_vents_white.svg`} alt=\"logo\" />\n                :\n                <img style={{ background: drawerIsOpen ? undefined : backgroundColor }} src={`${process.env.PUBLIC_URL}/rose_des_vents.svg`} alt=\"logo\" />\n            }\n          </button>\n          <Link exact to={`/${lang}/`}>\n            <h1 style={{\n              color: drawerIsOpen ? undefined : fontColor,\n              background: drawerIsOpen ? undefined : backgroundColor,\n            }} dangerouslySetInnerHTML={{ __html: title }} />\n          </Link>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nexport default HeaderNav;","import HeaderNav from './HeaderNav';\n\nexport default HeaderNav;","import cx from 'classnames';\n\nimport './Loader.scss';\n\n/**\n * A basic full-size loader with loading bar\n * @param {number} percentsLoaded\n * @returns {React.ReactElement} - React component \n */\nconst Loader = ({ percentsLoaded = 0 }) => {\n  return (\n    <div className={cx(\"Loader\", {'is-complete': percentsLoaded === 100})}>\n      <div className=\"loader-container\">\n        <div className=\"loading-bar\" style={{ width: percentsLoaded + '%' }} />\n      </div>\n    </div>\n  )\n}\n\nexport default Loader;","import Footer from './Footer';\n\nexport default Footer;","/* eslint import/no-webpack-loader-syntax : 0 */\nimport FooterFr from '!babel-loader!mdx-loader!../../contents/fr/footer.mdx';\nimport FooterEn from '!babel-loader!mdx-loader!../../contents/fr/footer.mdx';\n\n/**\n * Displays the footer from attached mdx contents\n * @param {string} lang\n * @returns {React.ReactElement} - React component\n */\nconst Footer = ({lang}) => {\n  return (\n    <footer className=\"Footer\">\n      <div className=\"footer-contents\">\n      {lang === 'fr' ? <FooterFr /> : <FooterEn />}\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","\n/**\n * Entrypoint of the application\n */\n/* import external libraries */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n  useLocation,\n  Link,\n} from \"react-router-dom\";\nimport uniq from 'lodash/uniq';\nimport { csvParse, tsvParse } from 'd3-dsv';\nimport axios from 'axios';\n\n/* import pages */\nimport Home from './pages/Home';\nimport Atlas from \"./pages/Atlas\";\nimport StandaloneVisualization from \"./pages/StandaloneVisualization\";\nimport PlainPage from './pages/PlainPage';\n\n/* import components */\nimport HeaderNav from './components/HeaderNav';\nimport Loader from './components/Loader/Loader';\nimport Footer from \"./components/Footer\";\n\n/* import utils */\nimport { DatasetsContext } from './helpers/contexts';\n\n/* import other assets */\nimport './App.scss';\n\nimport visualizationsList from './visualizationsList';\nimport { homepage } from '../package.json';\nimport routes from './summary';\n\nconst LANGUAGES = ['fr', 'en'];\n\n\n/**\n * General application container - handles routing logic, data retrieval, and lang toggle\n * @returns  {React.ReactElement} - React component\n */\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [datasets, setDatasets] = useState({})\n  const [loadingFraction, setLoadingFraction] = useState(0);\n\n  /**\n   * loading all datasets\n   */\n  useEffect(() => {\n    // loading all datasets from the atlas\n    // note: it would be preferable to do this on a page-to-page basis if datasets happens to be too big/numerous\n    const datasetsNames = uniq(\n      visualizationsList\n        .filter(d => d.datasets)\n        .reduce(\n          (res, d) => [\n            ...res,\n            ...d.datasets.split(',').map(d => d.trim())],\n          [])\n    );\n    // console.groupCollapsed('loading data');\n    datasetsNames.reduce((cur, datasetName, datasetIndex) => {\n      return cur.then((res) => new Promise((resolve, reject) => {\n        const url = datasetName ? `${process.env.PUBLIC_URL}/data/${datasetName}` : undefined;\n        if (url) {\n          // console.info('get', url);\n          axios.get(url, {\n            onDownloadProgress: progressEvent => {\n              let status = progressEvent.loaded / progressEvent.total;\n              status = status > 1 ? 1 : status;\n              const globalFraction = datasetIndex / datasetsNames.length;\n              // console.info(parseInt(globalFraction * 100) + '%')\n              setLoadingFraction(globalFraction + status / datasetsNames.length);\n            }\n          })\n            .then(({ data: inputData }) => {\n              setTimeout(() => {\n                let loadedData = inputData;\n                if (url.split('.').pop() === 'csv') {\n                  loadedData = csvParse(inputData);\n                } else if (url.split('.').pop() === 'tsv') {\n                  loadedData = tsvParse(inputData);\n                }\n                resolve({ ...res, [datasetName]: loadedData })\n              })\n            })\n            // make get errors non-blocking to get all available datasets in the app even if some are broken\n            .catch(err => {\n              console.error(err);\n              return resolve(res);\n            })\n        } else return resolve(res);\n\n      }))\n    }, Promise.resolve({}))\n      .then(newDatasets => {\n        // console.groupEnd('loading data');\n        setLoadingFraction(1);\n        setDatasets(newDatasets)\n      })\n      .catch(console.error)\n  }, [])\n\n  const onLangChange = (ln) => {\n    const otherLang = ln === 'fr' ? 'en' : 'fr';\n\n    const { pathname } = location;\n    // @todo this is dirty, refactor this to be handled based on the routes config JSON ?\n    if (pathname.includes('atlas')) {\n      const visualizationId = pathname.split('/atlas/').pop();\n      history.push(`/${ln}/atlas/${visualizationId || ''}`);\n    } else {\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.routes[otherLang] === pathOtherLang;\n      });\n      if (routeItem) {\n        history.push(`/${ln}/page/${routeItem.routes[ln]}`);\n      } else {\n        history.push(`/${ln}/`);\n      }\n    }\n  }\n  const renderRoute = ({\n    Content,\n    ContentSync,\n    ThatComponent = PlainPage,\n    title,\n    lang,\n  }) => {\n    return (\n      <>\n        <ThatComponent\n          {\n          ...{\n            Content,\n            ContentSync,\n            title,\n            lang\n          }\n          }\n        />\n      </>\n\n    )\n  };\n\n  const currentLang = 'fr';\n  return (\n    <DatasetsContext.Provider value={datasets}>\n      <div id=\"wrapper\">\n        <header>\n          <HeaderNav {...{ onLangChange, routes }} />\n        </header>\n        <main>\n          <Switch>\n            {// looping through the page\n              LANGUAGES.map(lang => {\n                return routes\n                  .map(({\n                    titles,\n                    routes: inputRoute,\n                    contents,\n                    Component: ThatComponent,\n                    contentsProcessed,\n                  }, index) => {\n                    const route = `/${lang}/page/${inputRoute[lang]}`\n                    const title = titles[lang];\n                    // @todo remove Content as it is not used anymore ? (importing md content with React.lazy did not play nice with scrollytelling-related features)\n                    const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents[lang]}`));\n                    const ContentSync = contentsProcessed[lang];\n                    return (\n                      <Route key={index} path={route} exact>\n                        {renderRoute({ Content, ThatComponent, title, ContentSync, lang })}\n                      </Route>\n                    )\n                  })\n              })\n            }\n            {\n              LANGUAGES.map(lang => {\n                return visualizationsList\n                  .map(({\n                    id\n                  }, index) => {\n                    const route = `/${lang}/visualization/${id}`;\n                    return (\n                      <Route key={index} path={route} exact component={() => <StandaloneVisualization {...{ id, lang }} />} />\n                    )\n                  })\n              })\n            }\n            <Route path=\"/:lang/atlas/:visualizationId?\" component={Atlas} />\n            <Route path=\"/:lang\" exact component={Home} />\n            <Redirect to={`/${currentLang}/`} />\n          </Switch>\n          <Loader percentsLoaded={loadingFraction * 100} />\n        </main>\n        <Footer\n          lang={currentLang}\n        />\n\n\n      </div>\n      {/* following react fragment is aimed at allowing react-snap to parse all the pages that have a dynamic URL */}\n      <React.Fragment>\n        {// looping through the pages to add a blank link to all of them\n          LANGUAGES.map(lang => {\n            return routes\n              // @todo this is dirty and should be removed at some point (test page is not exported in prod, so no need for react-snap)\n              .filter(({ routes }) => routes[lang] && !routes[lang].includes('test'))\n              .map(({\n                routes: inputRoute,\n              }, index) => {\n                const route = `/${lang}/page/${inputRoute[lang]}`;\n                return (\n                  <Link to={route} exact />\n                )\n              })\n          })\n        }\n        {// looping through all the atlas visualizations links\n          LANGUAGES.map(lang => {\n            return visualizationsList\n              .map(({\n                id\n              }, index) => {\n                const route = `/${lang}/atlas/${id}`;\n                return (\n                  <Link to={route} exact />\n                )\n              })\n          })\n        }\n      </React.Fragment>\n    </DatasetsContext.Provider>\n  );\n}\n\n/**\n * the following variable is aimed at allowing browser-router to function\n * for deployments on gh-pages (prefixing all routes with the repo name to match ghp URL pattern e.g. https://username.github.io/projectname/)\n */\nconst BASE_NAME =\n  process.env.NODE_ENV === 'development'\n    ? undefined\n    : `/${homepage.split('/').pop()}`;\n\n\n/**\n * Wrapper of the router and application\n * @returns  {React.ReactElement} - React component\n */\nexport default function Wrapper() {\n  return (\n    <Router basename={BASE_NAME}>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n} else {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/**\n * Context providers for the app\n */\nimport React from 'react';\n\n/**\n * Context used for communicating currently displayed visualization\n */\nexport const VisualizationControlContext = React.createContext({\n\n})\n\n/**\n * Context used for datasets values passing\n */\nexport const DatasetsContext = React.createContext({\n\n})\n","import { useEffect, useRef, useState } from 'react';\n\n/**\n * Runs a given function each {delay} miliseconds\n * @param {function} callback\n * @param {number} delay - in ms\n * @returns {void}\n */\nexport function useInterval(callback, delay = 100) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n/**\n * Debounces the update of a value given a certain delay\n * @param {any} value\n * @param {number} delay - in ms\n * @returns {any} - returned value\n */\nexport function useDebounce(value, delay = 100) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay]\n  );\n\n  return debouncedValue;\n}\n\n/**\n * Records the previous value of a given value\n * @param {any} value\n * @returns {any} previous value\n */\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint import/no-anonymous-default-export : 0 */\nexport default {\n  \"title\": \"Commerce multi-échelles autour du port de La Rochelle au XVIIIème siècle\",\n  \"titleHTML\": \"Commerce multi-échelles autour du port de La Rochelle au <span>XVIII</span><sup>e</sup> siècle\",\n  \"subtitle\": \"Une étude de cas du programme de recherche interdisciplinaire PORTIC\"\n}","/* eslint import/no-anonymous-default-export : 0 */\nexport default {\n  \"title\": \"Commerce multi-échelles autour du port de La Rochelle au XVIIIème siècle\",\n  \"titleHTML\": \"Commerce multi-échelles autour du port de La Rochelle au XVIII<sup>e</sup> siècle\",\n  \"subtitle\": \"Une étude de cas du programme de recherche interdisciplinaire PORTIC\"\n}"],"sourceRoot":""}